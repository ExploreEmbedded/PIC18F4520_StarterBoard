

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 13 19:53:10 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30  0000                     _ADCON0	set	4034
    31  0000                     _ADCON1	set	4033
    32  0000                     _ADCON2	set	4032
    33  0000                     _ADRESH	set	4036
    34  0000                     _ADRESL	set	4035
    35  0000                     _RCREG	set	4014
    36  0000                     _RCSTA	set	4011
    37  0000                     _SPBRG	set	4015
    38  0000                     _TRISC	set	3988
    39  0000                     _TXREG	set	4013
    40  0000                     _TXSTA	set	4012
    41  0000                     _ADON	set	32272
    42  0000                     _GO	set	32273
    43  0000                     _GO_DONE	set	32273
    44  0000                     _RCIF	set	31989
    45  0000                     _TXIF	set	31988
    46                           
    47                           	psect	smallconst
    48  000600                     __psmallconst:
    49                           	opt stack 0
    50  000600  00                 	db	0
    51  000601                     STR_1:
    52  000601  41                 	db	65	;'A'
    53  000602  44                 	db	68	;'D'
    54  000603  43                 	db	67	;'C'
    55  000604  30                 	db	48	;'0'
    56  000605  20                 	db	32
    57  000606  56                 	db	86	;'V'
    58  000607  61                 	db	97	;'a'
    59  000608  6C                 	db	108	;'l'
    60  000609  75                 	db	117	;'u'
    61  00060A  65                 	db	101	;'e'
    62  00060B  3A                 	db	58	;':'
    63  00060C  25                 	db	37
    64  00060D  34                 	db	52	;'4'
    65  00060E  64                 	db	100	;'d'
    66  00060F  20                 	db	32
    67  000610  20                 	db	32
    68  000611  45                 	db	69	;'E'
    69  000612  71                 	db	113	;'q'
    70  000613  75                 	db	117	;'u'
    71  000614  69                 	db	105	;'i'
    72  000615  76                 	db	118	;'v'
    73  000616  61                 	db	97	;'a'
    74  000617  6C                 	db	108	;'l'
    75  000618  65                 	db	101	;'e'
    76  000619  6E                 	db	110	;'n'
    77  00061A  74                 	db	116	;'t'
    78  00061B  20                 	db	32
    79  00061C  56                 	db	86	;'V'
    80  00061D  6F                 	db	111	;'o'
    81  00061E  6C                 	db	108	;'l'
    82  00061F  74                 	db	116	;'t'
    83  000620  61                 	db	97	;'a'
    84  000621  67                 	db	103	;'g'
    85  000622  65                 	db	101	;'e'
    86  000623  3A                 	db	58	;':'
    87  000624  25                 	db	37
    88  000625  66                 	db	102	;'f'
    89  000626  0A                 	db	10
    90  000627  0D                 	db	13
    91  000628  00                 	db	0
    92                           
    93                           ; #config settings
    94  000629  00                 	db	0	; dummy byte at the end
    95  0000                     
    96                           	psect	cinit
    97  00145A                     __pcinit:
    98                           	opt stack 0
    99  00145A                     start_initialization:
   100                           	opt stack 0
   101  00145A                     __initialization:
   102                           	opt stack 0
   103  00145A                     end_of_initialization:
   104                           	opt stack 0
   105  00145A                     __end_of__initialization:
   106                           	opt stack 0
   107  00145A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   108  00145C  6EF8               	movwf	tblptru,c
   109  00145E  0100               	movlb	0
   110  001460  EFB6  F008         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           
   113                           	psect	cstackCOMRAM
   114  000001                     __pcstackCOMRAM:
   115                           	opt stack 0
   116  000001                     ?___ftpack:
   117                           	opt stack 0
   118  000001                     ?___lldiv:
   119                           	opt stack 0
   120  000001                     UART_TxChar@v_uartData_u8:
   121                           	opt stack 0
   122  000001                     DELAY_us@us_count:
   123                           	opt stack 0
   124  000001                     ___ftpack@arg:
   125                           	opt stack 0
   126  000001                     ___lldiv@dividend:
   127                           	opt stack 0
   128                           
   129                           ; 4 bytes @ 0x0
   130  000001                     	ds	1
   131  000002                     UART_TxString@ptr_string:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x1
   135  000002                     	ds	1
   136  000003                     ?_ADC_GetAdcValue:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x2
   140  000003                     	ds	1
   141  000004                     ___ftpack@exp:
   142                           	opt stack 0
   143                           
   144                           ; 1 bytes @ 0x3
   145  000004                     	ds	1
   146  000005                     ??_ADC_GetAdcValue:
   147  000005                     ___ftpack@sign:
   148                           	opt stack 0
   149  000005                     ___lldiv@divisor:
   150                           	opt stack 0
   151                           
   152                           ; 4 bytes @ 0x4
   153  000005                     	ds	1
   154  000006                     ??___ftpack:
   155                           
   156                           ; 1 bytes @ 0x5
   157  000006                     	ds	1
   158  000007                     ADC_GetAdcValue@var_adcChannel_u8:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0x6
   162  000007                     	ds	2
   163  000009                     ?___awtoft:
   164                           	opt stack 0
   165  000009                     ?___lltoft:
   166                           	opt stack 0
   167  000009                     ___awtoft@c:
   168                           	opt stack 0
   169  000009                     ___lldiv@quotient:
   170                           	opt stack 0
   171  000009                     ___lltoft@c:
   172                           	opt stack 0
   173                           
   174                           ; 4 bytes @ 0x8
   175  000009                     	ds	3
   176  00000C                     ___awtoft@sign:
   177                           	opt stack 0
   178                           
   179                           ; 1 bytes @ 0xB
   180  00000C                     	ds	1
   181  00000D                     ??___lltoft:
   182  00000D                     ?___ftmul:
   183                           	opt stack 0
   184  00000D                     ___lldiv@counter:
   185                           	opt stack 0
   186  00000D                     ___ftmul@f1:
   187                           	opt stack 0
   188                           
   189                           ; 3 bytes @ 0xC
   190  00000D                     	ds	1
   191  00000E                     UART_SetBaudRate@v_baudRate_u32:
   192                           	opt stack 0
   193  00000E                     UART_TxNumber@v_number_u32:
   194                           	opt stack 0
   195                           
   196                           ; 4 bytes @ 0xD
   197  00000E                     	ds	2
   198  000010                     ___ftmul@f2:
   199                           	opt stack 0
   200                           
   201                           ; 3 bytes @ 0xF
   202  000010                     	ds	1
   203  000011                     ___lltoft@exp:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x10
   207  000011                     	ds	1
   208  000012                     ??_UART_SetBaudRate:
   209  000012                     ?___ftneg:
   210                           	opt stack 0
   211  000012                     UART_TxNumber@v_numOfDigitsToTransmit_u8:
   212                           	opt stack 0
   213  000012                     ___ftneg@f1:
   214                           	opt stack 0
   215                           
   216                           ; 3 bytes @ 0x11
   217  000012                     	ds	1
   218  000013                     ??___ftmul:
   219  000013                     ??_UART_TxNumber:
   220                           
   221                           ; 1 bytes @ 0x12
   222  000013                     	ds	2
   223  000015                     ?___ftadd:
   224                           	opt stack 0
   225  000015                     ___ftadd@f1:
   226                           	opt stack 0
   227                           
   228                           ; 3 bytes @ 0x14
   229  000015                     	ds	1
   230  000016                     UART_SetBaudRate@RegValue:
   231                           	opt stack 0
   232  000016                     ___ftmul@exp:
   233                           	opt stack 0
   234                           
   235                           ; 1 bytes @ 0x15
   236  000016                     	ds	1
   237  000017                     ___ftmul@f3_as_product:
   238                           	opt stack 0
   239  000017                     UART_Init@v_baudRate_u32:
   240                           	opt stack 0
   241                           
   242                           ; 4 bytes @ 0x16
   243  000017                     	ds	1
   244  000018                     ___ftadd@f2:
   245                           	opt stack 0
   246                           
   247                           ; 3 bytes @ 0x17
   248  000018                     	ds	2
   249  00001A                     ___ftmul@cntr:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x19
   253  00001A                     	ds	1
   254  00001B                     ??___ftadd:
   255  00001B                     ___ftmul@sign:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x1A
   259  00001B                     	ds	1
   260  00001C                     ?___ftdiv:
   261                           	opt stack 0
   262  00001C                     ?___fttol:
   263                           	opt stack 0
   264  00001C                     ___ftdiv@f1:
   265                           	opt stack 0
   266  00001C                     ___fttol@f1:
   267                           	opt stack 0
   268                           
   269                           ; 3 bytes @ 0x1B
   270  00001C                     	ds	2
   271  00001E                     ___ftadd@sign:
   272                           	opt stack 0
   273  00001E                     UART_TxNumber@a:
   274                           	opt stack 0
   275                           
   276                           ; 10 bytes @ 0x1D
   277  00001E                     	ds	1
   278  00001F                     ___ftadd@exp2:
   279                           	opt stack 0
   280  00001F                     ___ftdiv@f2:
   281                           	opt stack 0
   282                           
   283                           ; 3 bytes @ 0x1E
   284  00001F                     	ds	1
   285  000020                     ??___fttol:
   286  000020                     ___ftadd@exp1:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x1F
   290  000020                     	ds	2
   291  000022                     ??___ftdiv:
   292                           
   293                           ; 1 bytes @ 0x21
   294  000022                     	ds	3
   295  000025                     ___ftdiv@cntr:
   296                           	opt stack 0
   297  000025                     ___fttol@sign1:
   298                           	opt stack 0
   299                           
   300                           ; 1 bytes @ 0x24
   301  000025                     	ds	1
   302  000026                     ___ftdiv@f3:
   303                           	opt stack 0
   304  000026                     ___fttol@lval:
   305                           	opt stack 0
   306                           
   307                           ; 4 bytes @ 0x25
   308  000026                     	ds	2
   309  000028                     _UART_TxNumber$65:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x27
   313  000028                     	ds	1
   314  000029                     ___ftdiv@exp:
   315                           	opt stack 0
   316                           
   317                           ; 1 bytes @ 0x28
   318  000029                     	ds	1
   319  00002A                     UART_TxNumber@v_numericSystem_u8:
   320                           	opt stack 0
   321  00002A                     ___ftdiv@sign:
   322                           	opt stack 0
   323  00002A                     ___fttol@exp1:
   324                           	opt stack 0
   325                           
   326                           ; 1 bytes @ 0x29
   327  00002A                     	ds	1
   328  00002B                     UART_TxNumber@i:
   329                           	opt stack 0
   330                           
   331                           ; 1 bytes @ 0x2A
   332  00002B                     	ds	1
   333  00002C                     UART_TxFloatNumber@v_floatNumber_f32:
   334                           	opt stack 0
   335                           
   336                           ; 3 bytes @ 0x2B
   337  00002C                     	ds	3
   338  00002F                     UART_TxFloatNumber@v_decNumber_u32:
   339                           	opt stack 0
   340                           
   341                           ; 4 bytes @ 0x2E
   342  00002F                     	ds	4
   343  000033                     ?_UART_Printf:
   344                           	opt stack 0
   345  000033                     UART_Printf@argList:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x32
   349  000033                     	ds	7
   350  00003A                     UART_Printf@v_floatNum_f32:
   351                           	opt stack 0
   352                           
   353                           ; 3 bytes @ 0x39
   354  00003A                     	ds	3
   355  00003D                     UART_Printf@str:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x3C
   359  00003D                     	ds	2
   360  00003F                     UART_Printf@v_num_s32:
   361                           	opt stack 0
   362                           
   363                           ; 4 bytes @ 0x3E
   364  00003F                     	ds	4
   365  000043                     UART_Printf@v_num_s16:
   366                           	opt stack 0
   367                           
   368                           ; 2 bytes @ 0x42
   369  000043                     	ds	2
   370  000045                     UART_Printf@v_num_u32:
   371                           	opt stack 0
   372                           
   373                           ; 4 bytes @ 0x44
   374  000045                     	ds	4
   375  000049                     UART_Printf@v_num_u16:
   376                           	opt stack 0
   377                           
   378                           ; 2 bytes @ 0x48
   379  000049                     	ds	2
   380  00004B                     UART_Printf@ptr:
   381                           	opt stack 0
   382                           
   383                           ; 2 bytes @ 0x4A
   384  00004B                     	ds	2
   385  00004D                     UART_Printf@ch:
   386                           	opt stack 0
   387                           
   388                           ; 1 bytes @ 0x4C
   389  00004D                     	ds	1
   390  00004E                     UART_Printf@v_numOfDigitsToTransmit_u8:
   391                           	opt stack 0
   392                           
   393                           ; 1 bytes @ 0x4D
   394  00004E                     	ds	1
   395  00004F                     UART_Printf@argp:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x4E
   399  00004F                     	ds	2
   400  000051                     main@volt:
   401                           	opt stack 0
   402                           
   403                           ; 3 bytes @ 0x50
   404  000051                     	ds	3
   405  000054                     main@adcValue:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0x53
   409  000054                     	ds	2
   410                           tblptru	equ	0xFF8
   411                           
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 41 in file "main.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;  volt            3   80[COMRAM] float 
   422 ;;  adcValue        2   83[COMRAM] int 
   423 ;; Return value:  Size  Location     Type
   424 ;;                  2  180[None  ] int 
   425 ;; Registers used:
   426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   427 ;; Tracked objects:
   428 ;;		On entry : 0/0
   429 ;;		On exit  : 0/0
   430 ;;		Unchanged: 0/0
   431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   432 ;;      Params:         0       0       0       0       0       0       0
   433 ;;      Locals:         5       0       0       0       0       0       0
   434 ;;      Temps:          0       0       0       0       0       0       0
   435 ;;      Totals:         5       0       0       0       0       0       0
   436 ;;Total ram usage:        5 bytes
   437 ;; Hardware stack levels required when called:    4
   438 ;; This function calls:
   439 ;;		_ADC_GetAdcValue
   440 ;;		_ADC_Init
   441 ;;		_UART_Init
   442 ;;		_UART_Printf
   443 ;;		___awtoft
   444 ;;		___ftdiv
   445 ;;		___ftmul
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           	psect	text0
   452  00116C                     __ptext0:
   453                           	opt stack 0
   454  00116C                     _main:
   455                           	opt stack 27
   456                           
   457                           ;main.c: 43: int adcValue;
   458                           ;main.c: 44: float volt;
   459                           ;main.c: 46: ADC_Init();
   460                           
   461                           ;incstack = 0
   462  00116C  EC26  F00A         	call	_ADC_Init	;wreg free
   463                           
   464                           ;main.c: 47: UART_Init(9600);
   465  001170  0E80               	movlw	128
   466  001172  6E17               	movwf	UART_Init@v_baudRate_u32,c
   467  001174  0E25               	movlw	37
   468  001176  6E18               	movwf	UART_Init@v_baudRate_u32+1,c
   469  001178  0E00               	movlw	0
   470  00117A  6E19               	movwf	UART_Init@v_baudRate_u32+2,c
   471  00117C  0E00               	movlw	0
   472  00117E  6E1A               	movwf	UART_Init@v_baudRate_u32+3,c
   473  001180  EC05  F00A         	call	_UART_Init	;wreg free
   474  001184                     l1940:
   475                           
   476                           ;main.c: 50: {
   477                           ;main.c: 51: adcValue = ADC_GetAdcValue(0);
   478  001184  0E00               	movlw	0
   479  001186  ECC8  F009         	call	_ADC_GetAdcValue
   480  00118A  C003  F054         	movff	?_ADC_GetAdcValue,main@adcValue
   481  00118E  C004  F055         	movff	?_ADC_GetAdcValue+1,main@adcValue+1
   482                           
   483                           ;main.c: 52: volt = (adcValue*5.00)/1023;
   484  001192  0E00               	movlw	0
   485  001194  6E10               	movwf	___ftmul@f2,c
   486  001196  0EA0               	movlw	160
   487  001198  6E11               	movwf	___ftmul@f2+1,c
   488  00119A  0E40               	movlw	64
   489  00119C  6E12               	movwf	___ftmul@f2+2,c
   490  00119E  C054  F009         	movff	main@adcValue,___awtoft@c
   491  0011A2  C055  F00A         	movff	main@adcValue+1,___awtoft@c+1
   492  0011A6  ECAC  F009         	call	___awtoft	;wreg free
   493  0011AA  C009  F00D         	movff	?___awtoft,___ftmul@f1
   494  0011AE  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   495  0011B2  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   496  0011B6  EC00  F007         	call	___ftmul	;wreg free
   497  0011BA  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
   498  0011BE  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
   499  0011C2  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
   500  0011C6  0EC0               	movlw	192
   501  0011C8  6E1F               	movwf	___ftdiv@f2,c
   502  0011CA  0E7F               	movlw	127
   503  0011CC  6E20               	movwf	___ftdiv@f2+1,c
   504  0011CE  0E44               	movlw	68
   505  0011D0  6E21               	movwf	___ftdiv@f2+2,c
   506  0011D2  EC7A  F007         	call	___ftdiv	;wreg free
   507  0011D6  C01C  F051         	movff	?___ftdiv,main@volt
   508  0011DA  C01D  F052         	movff	?___ftdiv+1,main@volt+1
   509  0011DE  C01E  F053         	movff	?___ftdiv+2,main@volt+2
   510                           
   511                           ;main.c: 53: UART_Printf("ADC0 Value:%4d  Equivalent Voltage:%f\n\r",adcValue,volt);
   512  0011E2  0E01               	movlw	low STR_1
   513  0011E4  6E33               	movwf	UART_Printf@argList,c
   514  0011E6  0E06               	movlw	high STR_1
   515  0011E8  6E34               	movwf	UART_Printf@argList+1,c
   516  0011EA  C054  F035         	movff	main@adcValue,?_UART_Printf+2
   517  0011EE  C055  F036         	movff	main@adcValue+1,?_UART_Printf+3
   518  0011F2  C051  F037         	movff	main@volt,?_UART_Printf+4
   519  0011F6  C052  F038         	movff	main@volt+1,?_UART_Printf+5
   520  0011FA  C053  F039         	movff	main@volt+2,?_UART_Printf+6
   521  0011FE  EC15  F003         	call	_UART_Printf	;wreg free
   522  001202  D7C0               	goto	l1940
   523  001204                     __end_of_main:
   524                           	opt stack 0
   525                           tblptru	equ	0xFF8
   526                           
   527 ;; *************** function ___ftdiv *****************
   528 ;; Defined at:
   529 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftdiv.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  f1              3   27[COMRAM] float 
   532 ;;  f2              3   30[COMRAM] float 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;  f3              3   37[COMRAM] float 
   535 ;;  sign            1   41[COMRAM] unsigned char 
   536 ;;  exp             1   40[COMRAM] unsigned char 
   537 ;;  cntr            1   36[COMRAM] unsigned char 
   538 ;; Return value:  Size  Location     Type
   539 ;;                  3   27[COMRAM] float 
   540 ;; Registers used:
   541 ;;		wreg, status,2, status,0, cstack
   542 ;; Tracked objects:
   543 ;;		On entry : 0/0
   544 ;;		On exit  : 0/0
   545 ;;		Unchanged: 0/0
   546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   547 ;;      Params:         6       0       0       0       0       0       0
   548 ;;      Locals:         6       0       0       0       0       0       0
   549 ;;      Temps:          3       0       0       0       0       0       0
   550 ;;      Totals:        15       0       0       0       0       0       0
   551 ;;Total ram usage:       15 bytes
   552 ;; Hardware stack levels used:    1
   553 ;; Hardware stack levels required when called:    1
   554 ;; This function calls:
   555 ;;		___ftpack
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text1
   562  000EF4                     __ptext1:
   563                           	opt stack 0
   564  000EF4                     ___ftdiv:
   565                           	opt stack 29
   566                           
   567                           ;incstack = 0
   568  000EF4  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
   569  000EF8  6A23               	clrf	(??___ftdiv+1)& (0+255),c
   570  000EFA  6A24               	clrf	(??___ftdiv+2)& (0+255),c
   571  000EFC  341D               	rlcf	___ftdiv@f1+1,w,c
   572  000EFE  3622               	rlcf	??___ftdiv& (0+255),f,c
   573  000F00  E301               	bnc	u1691
   574  000F02  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
   575  000F04                     u1691:
   576  000F04  5022               	movf	??___ftdiv,w,c
   577  000F06  6E29               	movwf	___ftdiv@exp,c
   578  000F08  5029               	movf	___ftdiv@exp,w,c
   579  000F0A  A4D8               	btfss	status,2,c
   580  000F0C  D007               	goto	l1856
   581  000F0E  0E00               	movlw	0
   582  000F10  6E1C               	movwf	?___ftdiv,c
   583  000F12  0E00               	movlw	0
   584  000F14  6E1D               	movwf	?___ftdiv+1,c
   585  000F16  0E00               	movlw	0
   586  000F18  6E1E               	movwf	?___ftdiv+2,c
   587  000F1A  0012               	return	
   588  000F1C                     l1856:
   589  000F1C  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
   590  000F20  6A23               	clrf	(??___ftdiv+1)& (0+255),c
   591  000F22  6A24               	clrf	(??___ftdiv+2)& (0+255),c
   592  000F24  3420               	rlcf	___ftdiv@f2+1,w,c
   593  000F26  3622               	rlcf	??___ftdiv& (0+255),f,c
   594  000F28  E301               	bnc	u1711
   595  000F2A  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
   596  000F2C                     u1711:
   597  000F2C  5022               	movf	??___ftdiv,w,c
   598  000F2E  6E2A               	movwf	___ftdiv@sign,c
   599  000F30  502A               	movf	___ftdiv@sign,w,c
   600  000F32  A4D8               	btfss	status,2,c
   601  000F34  D007               	goto	l1862
   602  000F36  0E00               	movlw	0
   603  000F38  6E1C               	movwf	?___ftdiv,c
   604  000F3A  0E00               	movlw	0
   605  000F3C  6E1D               	movwf	?___ftdiv+1,c
   606  000F3E  0E00               	movlw	0
   607  000F40  6E1E               	movwf	?___ftdiv+2,c
   608  000F42  0012               	return	
   609  000F44                     l1862:
   610  000F44  0E00               	movlw	0
   611  000F46  6E26               	movwf	___ftdiv@f3,c
   612  000F48  0E00               	movlw	0
   613  000F4A  6E27               	movwf	___ftdiv@f3+1,c
   614  000F4C  0E00               	movlw	0
   615  000F4E  6E28               	movwf	___ftdiv@f3+2,c
   616  000F50  502A               	movf	___ftdiv@sign,w,c
   617  000F52  0F89               	addlw	137
   618  000F54  5E29               	subwf	___ftdiv@exp,f,c
   619  000F56  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
   620  000F5A  5021               	movf	___ftdiv@f2+2,w,c
   621  000F5C  1A2A               	xorwf	___ftdiv@sign,f,c
   622  000F5E  0E80               	movlw	128
   623  000F60  162A               	andwf	___ftdiv@sign,f,c
   624  000F62  8E1D               	bsf	___ftdiv@f1+1,7,c
   625  000F64  0EFF               	movlw	255
   626  000F66  161C               	andwf	___ftdiv@f1,f,c
   627  000F68  0EFF               	movlw	255
   628  000F6A  161D               	andwf	___ftdiv@f1+1,f,c
   629  000F6C  0E00               	movlw	0
   630  000F6E  161E               	andwf	___ftdiv@f1+2,f,c
   631  000F70  8E20               	bsf	___ftdiv@f2+1,7,c
   632  000F72  0EFF               	movlw	255
   633  000F74  161F               	andwf	___ftdiv@f2,f,c
   634  000F76  0EFF               	movlw	255
   635  000F78  1620               	andwf	___ftdiv@f2+1,f,c
   636  000F7A  0E00               	movlw	0
   637  000F7C  1621               	andwf	___ftdiv@f2+2,f,c
   638  000F7E  0E18               	movlw	24
   639  000F80  6E25               	movwf	___ftdiv@cntr,c
   640  000F82                     l1882:
   641  000F82  90D8               	bcf	status,0,c
   642  000F84  3626               	rlcf	___ftdiv@f3,f,c
   643  000F86  3627               	rlcf	___ftdiv@f3+1,f,c
   644  000F88  3628               	rlcf	___ftdiv@f3+2,f,c
   645  000F8A  501F               	movf	___ftdiv@f2,w,c
   646  000F8C  5C1C               	subwf	___ftdiv@f1,w,c
   647  000F8E  5020               	movf	___ftdiv@f2+1,w,c
   648  000F90  581D               	subwfb	___ftdiv@f1+1,w,c
   649  000F92  5021               	movf	___ftdiv@f2+2,w,c
   650  000F94  581E               	subwfb	___ftdiv@f1+2,w,c
   651  000F96  A0D8               	btfss	status,0,c
   652  000F98  D007               	goto	l467
   653  000F9A  501F               	movf	___ftdiv@f2,w,c
   654  000F9C  5E1C               	subwf	___ftdiv@f1,f,c
   655  000F9E  5020               	movf	___ftdiv@f2+1,w,c
   656  000FA0  5A1D               	subwfb	___ftdiv@f1+1,f,c
   657  000FA2  5021               	movf	___ftdiv@f2+2,w,c
   658  000FA4  5A1E               	subwfb	___ftdiv@f1+2,f,c
   659  000FA6  8026               	bsf	___ftdiv@f3,0,c
   660  000FA8                     l467:
   661  000FA8  90D8               	bcf	status,0,c
   662  000FAA  361C               	rlcf	___ftdiv@f1,f,c
   663  000FAC  361D               	rlcf	___ftdiv@f1+1,f,c
   664  000FAE  361E               	rlcf	___ftdiv@f1+2,f,c
   665  000FB0  2E25               	decfsz	___ftdiv@cntr,f,c
   666  000FB2  D7E7               	goto	l1882
   667  000FB4  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
   668  000FB8  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   669  000FBC  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   670  000FC0  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
   671  000FC4  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
   672  000FC8  EC5F  F008         	call	___ftpack	;wreg free
   673  000FCC  C001  F01C         	movff	?___ftpack,?___ftdiv
   674  000FD0  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
   675  000FD4  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
   676  000FD8  0012               	return	
   677  000FDA                     __end_of___ftdiv:
   678                           	opt stack 0
   679                           tblptru	equ	0xFF8
   680                           status	equ	0xFD8
   681                           
   682 ;; *************** function ___awtoft *****************
   683 ;; Defined at:
   684 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\awtoft.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  c               2    8[COMRAM] int 
   687 ;; Auto vars:     Size  Location     Type
   688 ;;  sign            1   11[COMRAM] unsigned char 
   689 ;; Return value:  Size  Location     Type
   690 ;;                  3    8[COMRAM] float 
   691 ;; Registers used:
   692 ;;		wreg, status,2, status,0, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   698 ;;      Params:         3       0       0       0       0       0       0
   699 ;;      Locals:         1       0       0       0       0       0       0
   700 ;;      Temps:          0       0       0       0       0       0       0
   701 ;;      Totals:         4       0       0       0       0       0       0
   702 ;;Total ram usage:        4 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    1
   705 ;; This function calls:
   706 ;;		___ftpack
   707 ;; This function is called by:
   708 ;;		_main
   709 ;; This function uses a non-reentrant model
   710 ;;
   711                           
   712                           	psect	text2
   713  001358                     __ptext2:
   714                           	opt stack 0
   715  001358                     ___awtoft:
   716                           	opt stack 29
   717                           
   718                           ;incstack = 0
   719  001358  0E00               	movlw	0
   720  00135A  6E0C               	movwf	___awtoft@sign,c
   721  00135C  AE0A               	btfss	___awtoft@c+1,7,c
   722  00135E  D006               	goto	l1904
   723  001360  6C09               	negf	___awtoft@c,c
   724  001362  1E0A               	comf	___awtoft@c+1,f,c
   725  001364  B0D8               	btfsc	status,0,c
   726  001366  2A0A               	incf	___awtoft@c+1,f,c
   727  001368  0E01               	movlw	1
   728  00136A  6E0C               	movwf	___awtoft@sign,c
   729  00136C                     l1904:
   730  00136C  C009  F001         	movff	___awtoft@c,___ftpack@arg
   731  001370  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
   732  001374  6A03               	clrf	___ftpack@arg+2,c
   733  001376  0E8E               	movlw	142
   734  001378  6E04               	movwf	___ftpack@exp,c
   735  00137A  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
   736  00137E  EC5F  F008         	call	___ftpack	;wreg free
   737  001382  C001  F009         	movff	?___ftpack,?___awtoft
   738  001386  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
   739  00138A  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
   740  00138E  0012               	return	
   741  001390                     __end_of___awtoft:
   742                           	opt stack 0
   743                           tblptru	equ	0xFF8
   744                           status	equ	0xFD8
   745                           
   746 ;; *************** function _UART_Printf *****************
   747 ;; Defined at:
   748 ;;		line 413 in file "../00-libfiles/uart.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;  argList         2   50[COMRAM] PTR const unsigned char 
   751 ;;		 -> STR_1(40), 
   752 ;; Auto vars:     Size  Location     Type
   753 ;;  v_num_u32       4   68[COMRAM] unsigned long 
   754 ;;  v_num_s32       4   62[COMRAM] long 
   755 ;;  v_floatNum_f    3   57[COMRAM] long 
   756 ;;  argp            2   78[COMRAM] PTR void [1]
   757 ;;		 -> ?_UART_Printf(1), 
   758 ;;  ptr             2   74[COMRAM] PTR const unsigned char 
   759 ;;		 -> STR_1(40), 
   760 ;;  v_num_u16       2   72[COMRAM] unsigned int 
   761 ;;  v_num_s16       2   66[COMRAM] int 
   762 ;;  str             2   60[COMRAM] PTR unsigned char 
   763 ;;  v_numOfDigit    1   77[COMRAM] unsigned char 
   764 ;;  ch              1   76[COMRAM] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   774 ;;      Params:         7       0       0       0       0       0       0
   775 ;;      Locals:        23       0       0       0       0       0       0
   776 ;;      Temps:          0       0       0       0       0       0       0
   777 ;;      Totals:        30       0       0       0       0       0       0
   778 ;;Total ram usage:       30 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    3
   781 ;; This function calls:
   782 ;;		_UART_TxChar
   783 ;;		_UART_TxFloatNumber
   784 ;;		_UART_TxNumber
   785 ;;		_UART_TxString
   786 ;; This function is called by:
   787 ;;		_main
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text3
   792  00062A                     __ptext3:
   793                           	opt stack 0
   794  00062A                     _UART_Printf:
   795                           	opt stack 27
   796                           
   797                           ;uart.c: 415: const char *ptr;
   798                           ;uart.c: 416: va_list argp;
   799                           ;uart.c: 417: sint16_t v_num_s16;
   800                           ;uart.c: 418: sint32_t v_num_s32;
   801                           ;uart.c: 419: uint16_t v_num_u16;
   802                           ;uart.c: 420: uint32_t v_num_u32;
   803                           ;uart.c: 421: char *str;
   804                           ;uart.c: 422: char ch;
   805                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
   806                           ;uart.c: 425: double v_floatNum_f32;
   807                           ;uart.c: 429: *argp = __va_start();
   808                           
   809                           ;incstack = 0
   810  00062A  0E35               	movlw	low (?_UART_Printf+2)
   811  00062C  6E4F               	movwf	UART_Printf@argp,c
   812  00062E  0E00               	movlw	high (?_UART_Printf+2)
   813  000630  6E50               	movwf	UART_Printf@argp+1,c
   814                           
   815                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
   816  000632  C033  F04B         	movff	UART_Printf@argList,UART_Printf@ptr
   817  000636  C034  F04C         	movff	UART_Printf@argList+1,UART_Printf@ptr+1
   818  00063A  D1A0               	goto	l1828
   819  00063C                     l1708:
   820                           
   821                           ;uart.c: 433: {
   822                           ;uart.c: 435: ch= *ptr;
   823  00063C  C04B  FFF6         	movff	UART_Printf@ptr,tblptrl
   824  000640  C04C  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   825  000644                     	if	0	;tblptru may be non-zero
   826  000644                     	endif
   827  000644                     	if	0	;tblptru may be non-zero
   828  000644                     	endif
   829  000644  0008               	tblrd		*
   830  000646  CFF5 F04D          	movff	tablat,UART_Printf@ch
   831                           
   832                           ;uart.c: 436: if(ch == '%')
   833  00064A  0E25               	movlw	37
   834  00064C  184D               	xorwf	UART_Printf@ch,w,c
   835  00064E  A4D8               	btfss	status,2,c
   836  000650  D190               	goto	l1824
   837                           
   838                           ;uart.c: 437: {
   839                           ;uart.c: 438: ptr++;
   840  000652  4A4B               	infsnz	UART_Printf@ptr,f,c
   841  000654  2A4C               	incf	UART_Printf@ptr+1,f,c
   842                           
   843                           ;uart.c: 439: ch = *ptr;
   844  000656  C04B  FFF6         	movff	UART_Printf@ptr,tblptrl
   845  00065A  C04C  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   846  00065E                     	if	0	;tblptru may be non-zero
   847  00065E                     	endif
   848  00065E                     	if	0	;tblptru may be non-zero
   849  00065E                     	endif
   850  00065E  0008               	tblrd		*
   851  000660  CFF5 F04D          	movff	tablat,UART_Printf@ch
   852                           
   853                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
   854  000664  0E2F               	movlw	47
   855  000666  644D               	cpfsgt	UART_Printf@ch,c
   856  000668  D01C               	goto	l95
   857  00066A  0E3A               	movlw	58
   858  00066C  604D               	cpfslt	UART_Printf@ch,c
   859  00066E  D019               	goto	l95
   860                           
   861                           ;uart.c: 441: {
   862                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
   863  000670  0E00               	movlw	0
   864  000672  6E4E               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   865                           
   866                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
   867  000674  D00F               	goto	l1728
   868  000676                     l1722:
   869                           
   870                           ;uart.c: 444: {
   871                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
   872  000676  504E               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   873  000678  0D0A               	mullw	10
   874  00067A  50F3               	movf	prodl,w,c
   875  00067C  244D               	addwf	UART_Printf@ch,w,c
   876  00067E  0FD0               	addlw	208
   877  000680  6E4E               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   878                           
   879                           ;uart.c: 446: ptr++;
   880  000682  4A4B               	infsnz	UART_Printf@ptr,f,c
   881  000684  2A4C               	incf	UART_Printf@ptr+1,f,c
   882                           
   883                           ;uart.c: 447: ch = *ptr;
   884  000686  C04B  FFF6         	movff	UART_Printf@ptr,tblptrl
   885  00068A  C04C  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   886  00068E                     	if	0	;tblptru may be non-zero
   887  00068E                     	endif
   888  00068E                     	if	0	;tblptru may be non-zero
   889  00068E                     	endif
   890  00068E  0008               	tblrd		*
   891  000690  CFF5 F04D          	movff	tablat,UART_Printf@ch
   892  000694                     l1728:
   893  000694  0E2F               	movlw	47
   894  000696  644D               	cpfsgt	UART_Printf@ch,c
   895  000698  D13D               	goto	l1822
   896  00069A  0E39               	movlw	57
   897  00069C  644D               	cpfsgt	UART_Printf@ch,c
   898  00069E  D7EB               	goto	l1722
   899  0006A0  D139               	goto	l1822
   900  0006A2                     l95:
   901                           
   902                           ;uart.c: 450: else
   903                           ;uart.c: 451: {
   904                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
   905  0006A2  684E               	setf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   906                           
   907                           ;uart.c: 453: }
   908                           ;uart.c: 456: switch(ch)
   909  0006A4  D137               	goto	l1822
   910  0006A6                     l1732:
   911                           
   912                           ;uart.c: 459: case 'c':
   913                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
   914  0006A6  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
   915  0006AA  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
   916  0006AE  50DF               	movf	indf2,w,c
   917  0006B0  6E4D               	movwf	UART_Printf@ch,c
   918  0006B2  0E02               	movlw	2
   919  0006B4  264F               	addwf	UART_Printf@argp,f,c
   920  0006B6  0E00               	movlw	0
   921  0006B8  2250               	addwfc	UART_Printf@argp+1,f,c
   922                           
   923                           ;uart.c: 461: UART_TxChar(ch);
   924  0006BA  504D               	movf	UART_Printf@ch,w,c
   925  0006BC  EC1F  F00A         	call	_UART_TxChar
   926                           
   927                           ;uart.c: 462: break;
   928  0006C0  D15B               	goto	l1826
   929  0006C2                     l1738:
   930                           
   931                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   932  0006C2  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
   933  0006C6  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
   934  0006CA  CFDE F043          	movff	postinc2,UART_Printf@v_num_s16
   935  0006CE  CFDD F044          	movff	postdec2,UART_Printf@v_num_s16+1
   936  0006D2  0E02               	movlw	2
   937  0006D4  264F               	addwf	UART_Printf@argp,f,c
   938  0006D6  0E00               	movlw	0
   939  0006D8  2250               	addwfc	UART_Printf@argp+1,f,c
   940                           
   941                           ;uart.c: 466: if(v_num_s16<0)
   942  0006DA  AE44               	btfss	UART_Printf@v_num_s16+1,7,c
   943  0006DC  D007               	goto	l1748
   944                           
   945                           ;uart.c: 467: {
   946                           ;uart.c: 468: v_num_s16 = -v_num_s16;
   947  0006DE  6C43               	negf	UART_Printf@v_num_s16,c
   948  0006E0  1E44               	comf	UART_Printf@v_num_s16+1,f,c
   949  0006E2  B0D8               	btfsc	status,0,c
   950  0006E4  2A44               	incf	UART_Printf@v_num_s16+1,f,c
   951                           
   952                           ;uart.c: 469: UART_TxChar('-');
   953  0006E6  0E2D               	movlw	45
   954  0006E8  EC1F  F00A         	call	_UART_TxChar
   955  0006EC                     l1748:
   956                           
   957                           ;uart.c: 470: }
   958                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
   959  0006EC  C043  F00E         	movff	UART_Printf@v_num_s16,UART_TxNumber@v_number_u32
   960  0006F0  C044  F00F         	movff	UART_Printf@v_num_s16+1,UART_TxNumber@v_number_u32+1
   961  0006F4  0E00               	movlw	0
   962  0006F6  BE0F               	btfsc	UART_TxNumber@v_number_u32+1,7,c
   963  0006F8  0EFF               	movlw	-1
   964  0006FA  6E10               	movwf	UART_TxNumber@v_number_u32+2,c
   965  0006FC  6E11               	movwf	UART_TxNumber@v_number_u32+3,c
   966  0006FE  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   967  000702  0E0A               	movlw	10
   968  000704  ECC8  F004         	call	_UART_TxNumber
   969                           
   970                           ;uart.c: 472: break;
   971  000708  D137               	goto	l1826
   972  00070A                     l1750:
   973                           
   974                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   975  00070A  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
   976  00070E  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
   977  000712  CFDE F03F          	movff	postinc2,UART_Printf@v_num_s32
   978  000716  CFDE F040          	movff	postinc2,UART_Printf@v_num_s32+1
   979  00071A  CFDE F041          	movff	postinc2,UART_Printf@v_num_s32+2
   980  00071E  CFDE F042          	movff	postinc2,UART_Printf@v_num_s32+3
   981  000722  0E04               	movlw	4
   982  000724  264F               	addwf	UART_Printf@argp,f,c
   983  000726  0E00               	movlw	0
   984  000728  2250               	addwfc	UART_Printf@argp+1,f,c
   985                           
   986                           ;uart.c: 476: if(v_num_s32<0)
   987  00072A  AE42               	btfss	UART_Printf@v_num_s32+3,7,c
   988  00072C  D00B               	goto	l1760
   989                           
   990                           ;uart.c: 477: {
   991                           ;uart.c: 478: v_num_s32 = -v_num_s32;
   992  00072E  1E42               	comf	UART_Printf@v_num_s32+3,f,c
   993  000730  1E41               	comf	UART_Printf@v_num_s32+2,f,c
   994  000732  1E40               	comf	UART_Printf@v_num_s32+1,f,c
   995  000734  6C3F               	negf	UART_Printf@v_num_s32,c
   996  000736  0E00               	movlw	0
   997  000738  2240               	addwfc	UART_Printf@v_num_s32+1,f,c
   998  00073A  2241               	addwfc	UART_Printf@v_num_s32+2,f,c
   999  00073C  2242               	addwfc	UART_Printf@v_num_s32+3,f,c
  1000                           
  1001                           ;uart.c: 479: UART_TxChar('-');
  1002  00073E  0E2D               	movlw	45
  1003  000740  EC1F  F00A         	call	_UART_TxChar
  1004  000744                     l1760:
  1005                           
  1006                           ;uart.c: 480: }
  1007                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
  1008  000744  C03F  F00E         	movff	UART_Printf@v_num_s32,UART_TxNumber@v_number_u32
  1009  000748  C040  F00F         	movff	UART_Printf@v_num_s32+1,UART_TxNumber@v_number_u32+1
  1010  00074C  C041  F010         	movff	UART_Printf@v_num_s32+2,UART_TxNumber@v_number_u32+2
  1011  000750  C042  F011         	movff	UART_Printf@v_num_s32+3,UART_TxNumber@v_number_u32+3
  1012  000754  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1013  000758  0E0A               	movlw	10
  1014  00075A  ECC8  F004         	call	_UART_TxNumber
  1015                           
  1016                           ;uart.c: 482: break;
  1017  00075E  D10C               	goto	l1826
  1018  000760                     l1762:
  1019                           
  1020                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1021  000760  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1022  000764  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1023  000768  CFDE F049          	movff	postinc2,UART_Printf@v_num_u16
  1024  00076C  CFDD F04A          	movff	postdec2,UART_Printf@v_num_u16+1
  1025  000770  0E02               	movlw	2
  1026  000772  264F               	addwf	UART_Printf@argp,f,c
  1027  000774  0E00               	movlw	0
  1028  000776  2250               	addwfc	UART_Printf@argp+1,f,c
  1029                           
  1030                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1031  000778  C049  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
  1032  00077C  C04A  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
  1033  000780  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
  1034  000782  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
  1035  000784  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1036  000788  0E0A               	movlw	10
  1037  00078A  ECC8  F004         	call	_UART_TxNumber
  1038                           
  1039                           ;uart.c: 487: break;
  1040  00078E  D0F4               	goto	l1826
  1041  000790                     l1768:
  1042                           
  1043                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1044  000790  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1045  000794  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1046  000798  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32
  1047  00079C  CFDE F046          	movff	postinc2,UART_Printf@v_num_u32+1
  1048  0007A0  CFDE F047          	movff	postinc2,UART_Printf@v_num_u32+2
  1049  0007A4  CFDE F048          	movff	postinc2,UART_Printf@v_num_u32+3
  1050  0007A8  0E04               	movlw	4
  1051  0007AA  264F               	addwf	UART_Printf@argp,f,c
  1052  0007AC  0E00               	movlw	0
  1053  0007AE  2250               	addwfc	UART_Printf@argp+1,f,c
  1054                           
  1055                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1056  0007B0  C045  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
  1057  0007B4  C046  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
  1058  0007B8  C047  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
  1059  0007BC  C048  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
  1060  0007C0  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1061  0007C4  0E0A               	movlw	10
  1062  0007C6  ECC8  F004         	call	_UART_TxNumber
  1063                           
  1064                           ;uart.c: 492: break;
  1065  0007CA  D0D6               	goto	l1826
  1066  0007CC                     l1774:
  1067                           
  1068                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1069  0007CC  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1070  0007D0  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1071  0007D4  CFDE F049          	movff	postinc2,UART_Printf@v_num_u16
  1072  0007D8  CFDD F04A          	movff	postdec2,UART_Printf@v_num_u16+1
  1073  0007DC  0E02               	movlw	2
  1074  0007DE  264F               	addwf	UART_Printf@argp,f,c
  1075  0007E0  0E00               	movlw	0
  1076  0007E2  2250               	addwfc	UART_Printf@argp+1,f,c
  1077                           
  1078                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1079  0007E4  C049  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
  1080  0007E8  C04A  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
  1081  0007EC  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
  1082  0007EE  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
  1083  0007F0  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1084  0007F4  0E10               	movlw	16
  1085  0007F6  ECC8  F004         	call	_UART_TxNumber
  1086                           
  1087                           ;uart.c: 497: break;
  1088  0007FA  D0BE               	goto	l1826
  1089  0007FC                     l1780:
  1090                           
  1091                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1092  0007FC  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1093  000800  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1094  000804  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32
  1095  000808  CFDE F046          	movff	postinc2,UART_Printf@v_num_u32+1
  1096  00080C  CFDE F047          	movff	postinc2,UART_Printf@v_num_u32+2
  1097  000810  CFDE F048          	movff	postinc2,UART_Printf@v_num_u32+3
  1098  000814  0E04               	movlw	4
  1099  000816  264F               	addwf	UART_Printf@argp,f,c
  1100  000818  0E00               	movlw	0
  1101  00081A  2250               	addwfc	UART_Printf@argp+1,f,c
  1102                           
  1103                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1104  00081C  C045  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
  1105  000820  C046  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
  1106  000824  C047  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
  1107  000828  C048  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
  1108  00082C  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1109  000830  0E10               	movlw	16
  1110  000832  ECC8  F004         	call	_UART_TxNumber
  1111                           
  1112                           ;uart.c: 502: break;
  1113  000836  D0A0               	goto	l1826
  1114  000838                     l1786:
  1115                           
  1116                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1117  000838  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1118  00083C  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1119  000840  CFDE F049          	movff	postinc2,UART_Printf@v_num_u16
  1120  000844  CFDD F04A          	movff	postdec2,UART_Printf@v_num_u16+1
  1121  000848  0E02               	movlw	2
  1122  00084A  264F               	addwf	UART_Printf@argp,f,c
  1123  00084C  0E00               	movlw	0
  1124  00084E  2250               	addwfc	UART_Printf@argp+1,f,c
  1125                           
  1126                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1127  000850  284E               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
  1128  000852  A4D8               	btfss	status,2,c
  1129  000854  D002               	goto	l1794
  1130                           
  1131                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  1132  000856  0E10               	movlw	16
  1133  000858  6E4E               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
  1134  00085A                     l1794:
  1135                           
  1136                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1137  00085A  C049  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
  1138  00085E  C04A  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
  1139  000862  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
  1140  000864  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
  1141  000866  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1142  00086A  0E02               	movlw	2
  1143  00086C  ECC8  F004         	call	_UART_TxNumber
  1144                           
  1145                           ;uart.c: 512: break;
  1146  000870  D083               	goto	l1826
  1147  000872                     l1796:
  1148                           
  1149                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1150  000872  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1151  000876  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1152  00087A  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32
  1153  00087E  CFDE F046          	movff	postinc2,UART_Printf@v_num_u32+1
  1154  000882  CFDE F047          	movff	postinc2,UART_Printf@v_num_u32+2
  1155  000886  CFDE F048          	movff	postinc2,UART_Printf@v_num_u32+3
  1156  00088A  0E04               	movlw	4
  1157  00088C  264F               	addwf	UART_Printf@argp,f,c
  1158  00088E  0E00               	movlw	0
  1159  000890  2250               	addwfc	UART_Printf@argp+1,f,c
  1160                           
  1161                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1162  000892  284E               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
  1163  000894  A4D8               	btfss	status,2,c
  1164  000896  D002               	goto	l1804
  1165                           
  1166                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  1167  000898  0E20               	movlw	32
  1168  00089A  6E4E               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
  1169  00089C                     l1804:
  1170                           
  1171                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1172  00089C  C045  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
  1173  0008A0  C046  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
  1174  0008A4  C047  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
  1175  0008A8  C048  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
  1176  0008AC  C04E  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1177  0008B0  0E02               	movlw	2
  1178  0008B2  ECC8  F004         	call	_UART_TxNumber
  1179                           
  1180                           ;uart.c: 521: break;
  1181  0008B6  D060               	goto	l1826
  1182  0008B8                     l1806:
  1183                           
  1184                           ;uart.c: 525: case 'f':
  1185                           ;uart.c: 527: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1186  0008B8  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1187  0008BC  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1188  0008C0  CFDE F03A          	movff	postinc2,UART_Printf@v_floatNum_f32
  1189  0008C4  CFDE F03B          	movff	postinc2,UART_Printf@v_floatNum_f32+1
  1190  0008C8  CFDD F03C          	movff	postdec2,UART_Printf@v_floatNum_f32+2
  1191  0008CC  0E03               	movlw	3
  1192  0008CE  264F               	addwf	UART_Printf@argp,f,c
  1193  0008D0  0E00               	movlw	0
  1194  0008D2  2250               	addwfc	UART_Printf@argp+1,f,c
  1195                           
  1196                           ;uart.c: 528: UART_TxFloatNumber(v_floatNum_f32);
  1197  0008D4  C03A  F02C         	movff	UART_Printf@v_floatNum_f32,UART_TxFloatNumber@v_floatNumber_f32
  1198  0008D8  C03B  F02D         	movff	UART_Printf@v_floatNum_f32+1,UART_TxFloatNumber@v_floatNumber_f32+1
  1199  0008DC  C03C  F02E         	movff	UART_Printf@v_floatNum_f32+2,UART_TxFloatNumber@v_floatNumber_f32+2
  1200  0008E0  ECED  F007         	call	_UART_TxFloatNumber	;wreg free
  1201                           
  1202                           ;uart.c: 530: break;
  1203  0008E4  D049               	goto	l1826
  1204  0008E6                     l1812:
  1205                           
  1206                           ;uart.c: 534: case 's':
  1207                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1208  0008E6  C04F  FFD9         	movff	UART_Printf@argp,fsr2l
  1209  0008EA  C050  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1210  0008EE  CFDE F03D          	movff	postinc2,UART_Printf@str
  1211  0008F2  CFDD F03E          	movff	postdec2,UART_Printf@str+1
  1212  0008F6  0E02               	movlw	2
  1213  0008F8  264F               	addwf	UART_Printf@argp,f,c
  1214  0008FA  0E00               	movlw	0
  1215  0008FC  2250               	addwfc	UART_Printf@argp+1,f,c
  1216                           
  1217                           ;uart.c: 536: UART_TxString(str);
  1218  0008FE  C03D  F002         	movff	UART_Printf@str,UART_TxString@ptr_string
  1219  000902  C03E  F003         	movff	UART_Printf@str+1,UART_TxString@ptr_string+1
  1220  000906  ECE1  F009         	call	_UART_TxString	;wreg free
  1221                           
  1222                           ;uart.c: 537: break;
  1223  00090A  D036               	goto	l1826
  1224  00090C                     l1818:
  1225                           
  1226                           ;uart.c: 540: UART_TxChar('%');
  1227  00090C  0E25               	movlw	37
  1228  00090E  EC1F  F00A         	call	_UART_TxChar
  1229                           
  1230                           ;uart.c: 542: }
  1231                           
  1232                           ;uart.c: 541: break;
  1233  000912  D032               	goto	l1826
  1234  000914                     l1822:
  1235  000914  504D               	movf	UART_Printf@ch,w,c
  1236                           
  1237                           ; Switch size 1, requested type "space"
  1238                           ; Number of cases is 15, Range of values is 37 to 120
  1239                           ; switch strategies available:
  1240                           ; Name         Instructions Cycles
  1241                           ; simple_byte           46    24 (average)
  1242                           ;	Chosen strategy is simple_byte
  1243  000916  0A25               	xorlw	37	; case 37
  1244  000918  B4D8               	btfsc	status,2,c
  1245  00091A  D7F8               	goto	l1818
  1246  00091C  0A67               	xorlw	103	; case 66
  1247  00091E  B4D8               	btfsc	status,2,c
  1248  000920  D7A8               	goto	l1796
  1249  000922  0A01               	xorlw	1	; case 67
  1250  000924  B4D8               	btfsc	status,2,c
  1251  000926  D6BF               	goto	l1732
  1252  000928  0A07               	xorlw	7	; case 68
  1253  00092A  B4D8               	btfsc	status,2,c
  1254  00092C  D6EE               	goto	l1750
  1255  00092E  0A02               	xorlw	2	; case 70
  1256  000930  B4D8               	btfsc	status,2,c
  1257  000932  D7C2               	goto	l1806
  1258  000934  0A15               	xorlw	21	; case 83
  1259  000936  B4D8               	btfsc	status,2,c
  1260  000938  D7D6               	goto	l1812
  1261  00093A  0A06               	xorlw	6	; case 85
  1262  00093C  B4D8               	btfsc	status,2,c
  1263  00093E  D728               	goto	l1768
  1264  000940  0A0D               	xorlw	13	; case 88
  1265  000942  B4D8               	btfsc	status,2,c
  1266  000944  D75B               	goto	l1780
  1267  000946  0A3A               	xorlw	58	; case 98
  1268  000948  B4D8               	btfsc	status,2,c
  1269  00094A  D776               	goto	l1786
  1270  00094C  0A01               	xorlw	1	; case 99
  1271  00094E  B4D8               	btfsc	status,2,c
  1272  000950  D6AA               	goto	l1732
  1273  000952  0A07               	xorlw	7	; case 100
  1274  000954  B4D8               	btfsc	status,2,c
  1275  000956  D6B5               	goto	l1738
  1276  000958  0A02               	xorlw	2	; case 102
  1277  00095A  B4D8               	btfsc	status,2,c
  1278  00095C  D7AD               	goto	l1806
  1279  00095E  0A15               	xorlw	21	; case 115
  1280  000960  B4D8               	btfsc	status,2,c
  1281  000962  D7C1               	goto	l1812
  1282  000964  0A06               	xorlw	6	; case 117
  1283  000966  B4D8               	btfsc	status,2,c
  1284  000968  D6FB               	goto	l1762
  1285  00096A  0A0D               	xorlw	13	; case 120
  1286  00096C  B4D8               	btfsc	status,2,c
  1287  00096E  D72E               	goto	l1774
  1288                           
  1289                           ;uart.c: 543: }
  1290  000970  D003               	goto	l1826
  1291  000972                     l1824:
  1292                           
  1293                           ;uart.c: 544: else
  1294                           ;uart.c: 545: {
  1295                           ;uart.c: 547: UART_TxChar(ch);
  1296  000972  504D               	movf	UART_Printf@ch,w,c
  1297  000974  EC1F  F00A         	call	_UART_TxChar
  1298  000978                     l1826:
  1299  000978  4A4B               	infsnz	UART_Printf@ptr,f,c
  1300  00097A  2A4C               	incf	UART_Printf@ptr+1,f,c
  1301  00097C                     l1828:
  1302  00097C  C04B  FFF6         	movff	UART_Printf@ptr,tblptrl
  1303  000980  C04C  FFF7         	movff	UART_Printf@ptr+1,tblptrh
  1304  000984                     	if	0	;tblptru may be non-zero
  1305  000984                     	endif
  1306  000984                     	if	0	;tblptru may be non-zero
  1307  000984                     	endif
  1308  000984  0008               	tblrd		*
  1309  000986  50F5               	movf	tablat,w,c
  1310  000988  0900               	iorlw	0
  1311  00098A  B4D8               	btfsc	status,2,c
  1312  00098C  0012               	return	
  1313  00098E  D656               	goto	l1708
  1314  000990                     __end_of_UART_Printf:
  1315                           	opt stack 0
  1316                           tblptru	equ	0xFF8
  1317                           tblptrh	equ	0xFF7
  1318                           tblptrl	equ	0xFF6
  1319                           tablat	equ	0xFF5
  1320                           prodl	equ	0xFF3
  1321                           indf2	equ	0xFDF
  1322                           postinc2	equ	0xFDE
  1323                           postdec2	equ	0xFDD
  1324                           fsr2h	equ	0xFDA
  1325                           fsr2l	equ	0xFD9
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _UART_TxString *****************
  1329 ;; Defined at:
  1330 ;;		line 169 in file "../00-libfiles/uart.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  ptr_string      2    1[COMRAM] PTR const unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1344 ;;      Params:         2       0       0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0
  1347 ;;      Totals:         2       0       0       0       0       0       0
  1348 ;;Total ram usage:        2 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; Hardware stack levels required when called:    1
  1351 ;; This function calls:
  1352 ;;		_UART_TxChar
  1353 ;; This function is called by:
  1354 ;;		_UART_Printf
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text4
  1359  0013C2                     __ptext4:
  1360                           	opt stack 0
  1361  0013C2                     _UART_TxString:
  1362                           	opt stack 28
  1363                           
  1364                           ;uart.c: 171: while(*ptr_string)
  1365                           
  1366                           ;incstack = 0
  1367  0013C2  D009               	goto	l1682
  1368  0013C4                     l1678:
  1369                           
  1370                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  1371  0013C4  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
  1372  0013C8  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
  1373  0013CC  50DF               	movf	indf2,w,c
  1374  0013CE  EC1F  F00A         	call	_UART_TxChar
  1375  0013D2  4A02               	infsnz	UART_TxString@ptr_string,f,c
  1376  0013D4  2A03               	incf	UART_TxString@ptr_string+1,f,c
  1377  0013D6                     l1682:
  1378  0013D6  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
  1379  0013DA  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
  1380  0013DE  50DF               	movf	indf2,w,c
  1381  0013E0  B4D8               	btfsc	status,2,c
  1382  0013E2  0012               	return	
  1383  0013E4  D7EF               	goto	l1678
  1384  0013E6                     __end_of_UART_TxString:
  1385                           	opt stack 0
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           prodl	equ	0xFF3
  1391                           indf2	equ	0xFDF
  1392                           postinc2	equ	0xFDE
  1393                           postdec2	equ	0xFDD
  1394                           fsr2h	equ	0xFDA
  1395                           fsr2l	equ	0xFD9
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function _UART_TxFloatNumber *****************
  1399 ;; Defined at:
  1400 ;;		line 350 in file "../00-libfiles/uart.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  v_floatNumbe    3   43[COMRAM] float 
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;  v_decNumber_    4   46[COMRAM] unsigned long 
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1414 ;;      Params:         3       0       0       0       0       0       0
  1415 ;;      Locals:         4       0       0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0       0       0
  1417 ;;      Totals:         7       0       0       0       0       0       0
  1418 ;;Total ram usage:        7 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    2
  1421 ;; This function calls:
  1422 ;;		_UART_TxChar
  1423 ;;		_UART_TxNumber
  1424 ;;		___ftadd
  1425 ;;		___ftmul
  1426 ;;		___ftneg
  1427 ;;		___fttol
  1428 ;;		___lltoft
  1429 ;; This function is called by:
  1430 ;;		_UART_Printf
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text5
  1435  000FDA                     __ptext5:
  1436                           	opt stack 0
  1437  000FDA                     _UART_TxFloatNumber:
  1438                           	opt stack 27
  1439                           
  1440                           ;uart.c: 352: uint32_t v_decNumber_u32;
  1441                           ;uart.c: 359: v_decNumber_u32 = (uint32_t) v_floatNumber_f32;
  1442                           
  1443                           ;incstack = 0
  1444  000FDA  C02C  F01C         	movff	UART_TxFloatNumber@v_floatNumber_f32,___fttol@f1
  1445  000FDE  C02D  F01D         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___fttol@f1+1
  1446  000FE2  C02E  F01E         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___fttol@f1+2
  1447  000FE6  EC86  F006         	call	___fttol	;wreg free
  1448  000FEA  C01C  F02F         	movff	?___fttol,UART_TxFloatNumber@v_decNumber_u32
  1449  000FEE  C01D  F030         	movff	?___fttol+1,UART_TxFloatNumber@v_decNumber_u32+1
  1450  000FF2  C01E  F031         	movff	?___fttol+2,UART_TxFloatNumber@v_decNumber_u32+2
  1451  000FF6  C01F  F032         	movff	?___fttol+3,UART_TxFloatNumber@v_decNumber_u32+3
  1452                           
  1453                           ;uart.c: 360: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  1454  000FFA  C02F  F00E         	movff	UART_TxFloatNumber@v_decNumber_u32,UART_TxNumber@v_number_u32
  1455  000FFE  C030  F00F         	movff	UART_TxFloatNumber@v_decNumber_u32+1,UART_TxNumber@v_number_u32+1
  1456  001002  C031  F010         	movff	UART_TxFloatNumber@v_decNumber_u32+2,UART_TxNumber@v_number_u32+2
  1457  001006  C032  F011         	movff	UART_TxFloatNumber@v_decNumber_u32+3,UART_TxNumber@v_number_u32+3
  1458  00100A  0EFF               	movlw	255
  1459  00100C  6E12               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  1460  00100E  0E0A               	movlw	10
  1461  001010  ECC8  F004         	call	_UART_TxNumber
  1462                           
  1463                           ;uart.c: 362: UART_TxChar('.');
  1464  001014  0E2E               	movlw	46
  1465  001016  EC1F  F00A         	call	_UART_TxChar
  1466                           
  1467                           ;uart.c: 364: v_floatNumber_f32 = v_floatNumber_f32 - v_decNumber_u32;
  1468  00101A  C02F  F009         	movff	UART_TxFloatNumber@v_decNumber_u32,___lltoft@c
  1469  00101E  C030  F00A         	movff	UART_TxFloatNumber@v_decNumber_u32+1,___lltoft@c+1
  1470  001022  C031  F00B         	movff	UART_TxFloatNumber@v_decNumber_u32+2,___lltoft@c+2
  1471  001026  C032  F00C         	movff	UART_TxFloatNumber@v_decNumber_u32+3,___lltoft@c+3
  1472  00102A  EC7E  F009         	call	___lltoft	;wreg free
  1473  00102E  C009  F012         	movff	?___lltoft,___ftneg@f1
  1474  001032  C00A  F013         	movff	?___lltoft+1,___ftneg@f1+1
  1475  001036  C00B  F014         	movff	?___lltoft+2,___ftneg@f1+2
  1476  00103A  ECF3  F009         	call	___ftneg	;wreg free
  1477  00103E  C012  F015         	movff	?___ftneg,___ftadd@f1
  1478  001042  C013  F016         	movff	?___ftneg+1,___ftadd@f1+1
  1479  001046  C014  F017         	movff	?___ftneg+2,___ftadd@f1+2
  1480  00104A  C02C  F018         	movff	UART_TxFloatNumber@v_floatNumber_f32,___ftadd@f2
  1481  00104E  C02D  F019         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___ftadd@f2+1
  1482  001052  C02E  F01A         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___ftadd@f2+2
  1483  001056  ECB0  F005         	call	___ftadd	;wreg free
  1484  00105A  C015  F02C         	movff	?___ftadd,UART_TxFloatNumber@v_floatNumber_f32
  1485  00105E  C016  F02D         	movff	?___ftadd+1,UART_TxFloatNumber@v_floatNumber_f32+1
  1486  001062  C017  F02E         	movff	?___ftadd+2,UART_TxFloatNumber@v_floatNumber_f32+2
  1487                           
  1488                           ;uart.c: 365: v_decNumber_u32 = v_floatNumber_f32 * 1000000;
  1489  001066  0E24               	movlw	36
  1490  001068  6E10               	movwf	___ftmul@f2,c
  1491  00106A  0E74               	movlw	116
  1492  00106C  6E11               	movwf	___ftmul@f2+1,c
  1493  00106E  0E49               	movlw	73
  1494  001070  6E12               	movwf	___ftmul@f2+2,c
  1495  001072  C02C  F00D         	movff	UART_TxFloatNumber@v_floatNumber_f32,___ftmul@f1
  1496  001076  C02D  F00E         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___ftmul@f1+1
  1497  00107A  C02E  F00F         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___ftmul@f1+2
  1498  00107E  EC00  F007         	call	___ftmul	;wreg free
  1499  001082  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1500  001086  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1501  00108A  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1502  00108E  EC86  F006         	call	___fttol	;wreg free
  1503  001092  C01C  F02F         	movff	?___fttol,UART_TxFloatNumber@v_decNumber_u32
  1504  001096  C01D  F030         	movff	?___fttol+1,UART_TxFloatNumber@v_decNumber_u32+1
  1505  00109A  C01E  F031         	movff	?___fttol+2,UART_TxFloatNumber@v_decNumber_u32+2
  1506  00109E  C01F  F032         	movff	?___fttol+3,UART_TxFloatNumber@v_decNumber_u32+3
  1507                           
  1508                           ;uart.c: 366: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  1509  0010A2  C02F  F00E         	movff	UART_TxFloatNumber@v_decNumber_u32,UART_TxNumber@v_number_u32
  1510  0010A6  C030  F00F         	movff	UART_TxFloatNumber@v_decNumber_u32+1,UART_TxNumber@v_number_u32+1
  1511  0010AA  C031  F010         	movff	UART_TxFloatNumber@v_decNumber_u32+2,UART_TxNumber@v_number_u32+2
  1512  0010AE  C032  F011         	movff	UART_TxFloatNumber@v_decNumber_u32+3,UART_TxNumber@v_number_u32+3
  1513  0010B2  0EFF               	movlw	255
  1514  0010B4  6E12               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  1515  0010B6  0E0A               	movlw	10
  1516  0010B8  ECC8  F004         	call	_UART_TxNumber
  1517  0010BC  0012               	return		;funcret
  1518  0010BE                     __end_of_UART_TxFloatNumber:
  1519                           	opt stack 0
  1520                           tblptru	equ	0xFF8
  1521                           tblptrh	equ	0xFF7
  1522                           tblptrl	equ	0xFF6
  1523                           tablat	equ	0xFF5
  1524                           prodl	equ	0xFF3
  1525                           indf2	equ	0xFDF
  1526                           postinc2	equ	0xFDE
  1527                           postdec2	equ	0xFDD
  1528                           fsr2h	equ	0xFDA
  1529                           fsr2l	equ	0xFD9
  1530                           status	equ	0xFD8
  1531                           
  1532 ;; *************** function ___lltoft *****************
  1533 ;; Defined at:
  1534 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  c               4    8[COMRAM] unsigned long 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  exp             1   16[COMRAM] unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  3    8[COMRAM] float 
  1541 ;; Registers used:
  1542 ;;		wreg, status,2, status,0, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1548 ;;      Params:         4       0       0       0       0       0       0
  1549 ;;      Locals:         1       0       0       0       0       0       0
  1550 ;;      Temps:          4       0       0       0       0       0       0
  1551 ;;      Totals:         9       0       0       0       0       0       0
  1552 ;;Total ram usage:        9 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    1
  1555 ;; This function calls:
  1556 ;;		___ftpack
  1557 ;; This function is called by:
  1558 ;;		_UART_TxFloatNumber
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text6
  1563  0012FC                     __ptext6:
  1564                           	opt stack 0
  1565  0012FC                     ___lltoft:
  1566                           	opt stack 27
  1567                           
  1568                           ;incstack = 0
  1569  0012FC  0E8E               	movlw	142
  1570  0012FE  6E11               	movwf	___lltoft@exp,c
  1571  001300  D006               	goto	l1660
  1572  001302                     l1658:
  1573  001302  90D8               	bcf	status,0,c
  1574  001304  320C               	rrcf	___lltoft@c+3,f,c
  1575  001306  320B               	rrcf	___lltoft@c+2,f,c
  1576  001308  320A               	rrcf	___lltoft@c+1,f,c
  1577  00130A  3209               	rrcf	___lltoft@c,f,c
  1578  00130C  2A11               	incf	___lltoft@exp,f,c
  1579  00130E                     l1660:
  1580  00130E  0E00               	movlw	0
  1581  001310  1409               	andwf	___lltoft@c,w,c
  1582  001312  6E0D               	movwf	??___lltoft& (0+255),c
  1583  001314  0E00               	movlw	0
  1584  001316  140A               	andwf	___lltoft@c+1,w,c
  1585  001318  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1586  00131A  0E00               	movlw	0
  1587  00131C  140B               	andwf	___lltoft@c+2,w,c
  1588  00131E  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1589  001320  0EFF               	movlw	255
  1590  001322  140C               	andwf	___lltoft@c+3,w,c
  1591  001324  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1592  001326  500D               	movf	??___lltoft,w,c
  1593  001328  100E               	iorwf	??___lltoft+1,w,c
  1594  00132A  100F               	iorwf	??___lltoft+2,w,c
  1595  00132C  1010               	iorwf	??___lltoft+3,w,c
  1596  00132E  A4D8               	btfss	status,2,c
  1597  001330  D7E8               	goto	l1658
  1598  001332  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1599  001336  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1600  00133A  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1601  00133E  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1602  001342  0E00               	movlw	0
  1603  001344  6E05               	movwf	___ftpack@sign,c
  1604  001346  EC5F  F008         	call	___ftpack	;wreg free
  1605  00134A  C001  F009         	movff	?___ftpack,?___lltoft
  1606  00134E  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1607  001352  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1608  001356  0012               	return	
  1609  001358                     __end_of___lltoft:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           prodl	equ	0xFF3
  1616                           indf2	equ	0xFDF
  1617                           postinc2	equ	0xFDE
  1618                           postdec2	equ	0xFDD
  1619                           fsr2h	equ	0xFDA
  1620                           fsr2l	equ	0xFD9
  1621                           status	equ	0xFD8
  1622                           
  1623 ;; *************** function ___fttol *****************
  1624 ;; Defined at:
  1625 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  f1              3   27[COMRAM] float 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  lval            4   37[COMRAM] unsigned long 
  1630 ;;  exp1            1   41[COMRAM] unsigned char 
  1631 ;;  sign1           1   36[COMRAM] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;                  4   27[COMRAM] long 
  1634 ;; Registers used:
  1635 ;;		wreg, status,2, status,0
  1636 ;; Tracked objects:
  1637 ;;		On entry : 0/0
  1638 ;;		On exit  : 0/0
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1641 ;;      Params:         4       0       0       0       0       0       0
  1642 ;;      Locals:         6       0       0       0       0       0       0
  1643 ;;      Temps:          5       0       0       0       0       0       0
  1644 ;;      Totals:        15       0       0       0       0       0       0
  1645 ;;Total ram usage:       15 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; This function calls:
  1648 ;;		Nothing
  1649 ;; This function is called by:
  1650 ;;		_UART_TxFloatNumber
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text7
  1655  000D0C                     __ptext7:
  1656                           	opt stack 0
  1657  000D0C                     ___fttol:
  1658                           	opt stack 28
  1659                           
  1660                           ;incstack = 0
  1661  000D0C  C01E  F020         	movff	___fttol@f1+2,??___fttol
  1662  000D10  6A21               	clrf	(??___fttol+1)& (0+255),c
  1663  000D12  6A22               	clrf	(??___fttol+2)& (0+255),c
  1664  000D14  341D               	rlcf	___fttol@f1+1,w,c
  1665  000D16  3620               	rlcf	??___fttol& (0+255),f,c
  1666  000D18  E301               	bnc	u1431
  1667  000D1A  8021               	bsf	(??___fttol+1)& (0+255),0,c
  1668  000D1C                     u1431:
  1669  000D1C  5020               	movf	??___fttol,w,c
  1670  000D1E  6E2A               	movwf	___fttol@exp1,c
  1671  000D20  502A               	movf	___fttol@exp1,w,c
  1672  000D22  A4D8               	btfss	status,2,c
  1673  000D24  D009               	goto	l1616
  1674  000D26  0E00               	movlw	0
  1675  000D28  6E1C               	movwf	?___fttol,c
  1676  000D2A  0E00               	movlw	0
  1677  000D2C  6E1D               	movwf	?___fttol+1,c
  1678  000D2E  0E00               	movlw	0
  1679  000D30  6E1E               	movwf	?___fttol+2,c
  1680  000D32  0E00               	movlw	0
  1681  000D34  6E1F               	movwf	?___fttol+3,c
  1682  000D36  0012               	return	
  1683  000D38                     l1616:
  1684  000D38  0E17               	movlw	23
  1685  000D3A  6E20               	movwf	??___fttol& (0+255),c
  1686  000D3C  C01C  F021         	movff	___fttol@f1,??___fttol+1
  1687  000D40  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  1688  000D44  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  1689  000D48  2820               	incf	??___fttol,w,c
  1690  000D4A  6E24               	movwf	(??___fttol+4)& (0+255),c
  1691  000D4C  D004               	goto	u1450
  1692  000D4E                     u1455:
  1693  000D4E  90D8               	bcf	status,0,c
  1694  000D50  3223               	rrcf	??___fttol+3,f,c
  1695  000D52  3222               	rrcf	??___fttol+2,f,c
  1696  000D54  3221               	rrcf	??___fttol+1,f,c
  1697  000D56                     u1450:
  1698  000D56  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  1699  000D58  D7FA               	goto	u1455
  1700  000D5A  5021               	movf	??___fttol+1,w,c
  1701  000D5C  6E25               	movwf	___fttol@sign1,c
  1702  000D5E  8E1D               	bsf	___fttol@f1+1,7,c
  1703  000D60  0EFF               	movlw	255
  1704  000D62  161C               	andwf	___fttol@f1,f,c
  1705  000D64  0EFF               	movlw	255
  1706  000D66  161D               	andwf	___fttol@f1+1,f,c
  1707  000D68  0E00               	movlw	0
  1708  000D6A  161E               	andwf	___fttol@f1+2,f,c
  1709  000D6C  501C               	movf	___fttol@f1,w,c
  1710  000D6E  6E26               	movwf	___fttol@lval,c
  1711  000D70  501D               	movf	___fttol@f1+1,w,c
  1712  000D72  6E27               	movwf	___fttol@lval+1,c
  1713  000D74  501E               	movf	___fttol@f1+2,w,c
  1714  000D76  6E28               	movwf	___fttol@lval+2,c
  1715  000D78  6A29               	clrf	___fttol@lval+3,c
  1716  000D7A  0E8E               	movlw	142
  1717  000D7C  5E2A               	subwf	___fttol@exp1,f,c
  1718  000D7E  AE2A               	btfss	___fttol@exp1,7,c
  1719  000D80  D016               	goto	l1638
  1720  000D82  502A               	movf	___fttol@exp1,w,c
  1721  000D84  0A80               	xorlw	128
  1722  000D86  0F8F               	addlw	143
  1723  000D88  B0D8               	btfsc	status,0,c
  1724  000D8A  D009               	goto	l1634
  1725  000D8C  0E00               	movlw	0
  1726  000D8E  6E1C               	movwf	?___fttol,c
  1727  000D90  0E00               	movlw	0
  1728  000D92  6E1D               	movwf	?___fttol+1,c
  1729  000D94  0E00               	movlw	0
  1730  000D96  6E1E               	movwf	?___fttol+2,c
  1731  000D98  0E00               	movlw	0
  1732  000D9A  6E1F               	movwf	?___fttol+3,c
  1733  000D9C  0012               	return	
  1734  000D9E                     l1634:
  1735  000D9E  90D8               	bcf	status,0,c
  1736  000DA0  3229               	rrcf	___fttol@lval+3,f,c
  1737  000DA2  3228               	rrcf	___fttol@lval+2,f,c
  1738  000DA4  3227               	rrcf	___fttol@lval+1,f,c
  1739  000DA6  3226               	rrcf	___fttol@lval,f,c
  1740  000DA8  3E2A               	incfsz	___fttol@exp1,f,c
  1741  000DAA  D7F9               	goto	l1634
  1742  000DAC  D015               	goto	l1648
  1743  000DAE                     l1638:
  1744  000DAE  0E17               	movlw	23
  1745  000DB0  642A               	cpfsgt	___fttol@exp1,c
  1746  000DB2  D00F               	goto	l1646
  1747  000DB4  0E00               	movlw	0
  1748  000DB6  6E1C               	movwf	?___fttol,c
  1749  000DB8  0E00               	movlw	0
  1750  000DBA  6E1D               	movwf	?___fttol+1,c
  1751  000DBC  0E00               	movlw	0
  1752  000DBE  6E1E               	movwf	?___fttol+2,c
  1753  000DC0  0E00               	movlw	0
  1754  000DC2  6E1F               	movwf	?___fttol+3,c
  1755  000DC4  0012               	return	
  1756  000DC6                     l1644:
  1757  000DC6  90D8               	bcf	status,0,c
  1758  000DC8  3626               	rlcf	___fttol@lval,f,c
  1759  000DCA  3627               	rlcf	___fttol@lval+1,f,c
  1760  000DCC  3628               	rlcf	___fttol@lval+2,f,c
  1761  000DCE  3629               	rlcf	___fttol@lval+3,f,c
  1762  000DD0  062A               	decf	___fttol@exp1,f,c
  1763  000DD2                     l1646:
  1764  000DD2  502A               	movf	___fttol@exp1,w,c
  1765  000DD4  A4D8               	btfss	status,2,c
  1766  000DD6  D7F7               	goto	l1644
  1767  000DD8                     l1648:
  1768  000DD8  5025               	movf	___fttol@sign1,w,c
  1769  000DDA  B4D8               	btfsc	status,2,c
  1770  000DDC  D008               	goto	l1652
  1771  000DDE  1E29               	comf	___fttol@lval+3,f,c
  1772  000DE0  1E28               	comf	___fttol@lval+2,f,c
  1773  000DE2  1E27               	comf	___fttol@lval+1,f,c
  1774  000DE4  6C26               	negf	___fttol@lval,c
  1775  000DE6  0E00               	movlw	0
  1776  000DE8  2227               	addwfc	___fttol@lval+1,f,c
  1777  000DEA  2228               	addwfc	___fttol@lval+2,f,c
  1778  000DEC  2229               	addwfc	___fttol@lval+3,f,c
  1779  000DEE                     l1652:
  1780  000DEE  C026  F01C         	movff	___fttol@lval,?___fttol
  1781  000DF2  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  1782  000DF6  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  1783  000DFA  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  1784  000DFE  0012               	return	
  1785  000E00                     __end_of___fttol:
  1786                           	opt stack 0
  1787                           tblptru	equ	0xFF8
  1788                           tblptrh	equ	0xFF7
  1789                           tblptrl	equ	0xFF6
  1790                           tablat	equ	0xFF5
  1791                           prodl	equ	0xFF3
  1792                           indf2	equ	0xFDF
  1793                           postinc2	equ	0xFDE
  1794                           postdec2	equ	0xFDD
  1795                           fsr2h	equ	0xFDA
  1796                           fsr2l	equ	0xFD9
  1797                           status	equ	0xFD8
  1798                           
  1799 ;; *************** function ___ftneg *****************
  1800 ;; Defined at:
  1801 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  f1              3   17[COMRAM] float 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  3   17[COMRAM] float 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         3       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         3       0       0       0       0       0       0
  1819 ;;Total ram usage:        3 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; This function calls:
  1822 ;;		Nothing
  1823 ;; This function is called by:
  1824 ;;		_UART_TxFloatNumber
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           	psect	text8
  1829  0013E6                     __ptext8:
  1830                           	opt stack 0
  1831  0013E6                     ___ftneg:
  1832                           	opt stack 28
  1833                           
  1834                           ;incstack = 0
  1835  0013E6  5012               	movf	___ftneg@f1,w,c
  1836  0013E8  1013               	iorwf	___ftneg@f1+1,w,c
  1837  0013EA  1014               	iorwf	___ftneg@f1+2,w,c
  1838  0013EC  B4D8               	btfsc	status,2,c
  1839  0013EE  D006               	goto	l489
  1840  0013F0  0E00               	movlw	0
  1841  0013F2  1A12               	xorwf	___ftneg@f1,f,c
  1842  0013F4  0E00               	movlw	0
  1843  0013F6  1A13               	xorwf	___ftneg@f1+1,f,c
  1844  0013F8  0E80               	movlw	128
  1845  0013FA  1A14               	xorwf	___ftneg@f1+2,f,c
  1846  0013FC                     l489:
  1847  0013FC  C012  F012         	movff	___ftneg@f1,?___ftneg
  1848  001400  C013  F013         	movff	___ftneg@f1+1,?___ftneg+1
  1849  001404  C014  F014         	movff	___ftneg@f1+2,?___ftneg+2
  1850  001408  0012               	return		;funcret
  1851  00140A                     __end_of___ftneg:
  1852                           	opt stack 0
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           prodl	equ	0xFF3
  1858                           indf2	equ	0xFDF
  1859                           postinc2	equ	0xFDE
  1860                           postdec2	equ	0xFDD
  1861                           fsr2h	equ	0xFDA
  1862                           fsr2l	equ	0xFD9
  1863                           status	equ	0xFD8
  1864                           
  1865 ;; *************** function ___ftmul *****************
  1866 ;; Defined at:
  1867 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1868 ;; Parameters:    Size  Location     Type
  1869 ;;  f1              3   12[COMRAM] float 
  1870 ;;  f2              3   15[COMRAM] float 
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1873 ;;  sign            1   26[COMRAM] unsigned char 
  1874 ;;  cntr            1   25[COMRAM] unsigned char 
  1875 ;;  exp             1   21[COMRAM] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  3   12[COMRAM] float 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1885 ;;      Params:         6       0       0       0       0       0       0
  1886 ;;      Locals:         6       0       0       0       0       0       0
  1887 ;;      Temps:          3       0       0       0       0       0       0
  1888 ;;      Totals:        15       0       0       0       0       0       0
  1889 ;;Total ram usage:       15 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    1
  1892 ;; This function calls:
  1893 ;;		___ftpack
  1894 ;; This function is called by:
  1895 ;;		_UART_TxFloatNumber
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text9
  1901  000E00                     __ptext9:
  1902                           	opt stack 0
  1903  000E00                     ___ftmul:
  1904                           	opt stack 29
  1905                           
  1906                           ;incstack = 0
  1907  000E00  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1908  000E04  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1909  000E06  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1910  000E08  340E               	rlcf	___ftmul@f1+1,w,c
  1911  000E0A  3613               	rlcf	??___ftmul& (0+255),f,c
  1912  000E0C  E301               	bnc	u1361
  1913  000E0E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1914  000E10                     u1361:
  1915  000E10  5013               	movf	??___ftmul,w,c
  1916  000E12  6E16               	movwf	___ftmul@exp,c
  1917  000E14  5016               	movf	___ftmul@exp,w,c
  1918  000E16  A4D8               	btfss	status,2,c
  1919  000E18  D007               	goto	l1564
  1920  000E1A  0E00               	movlw	0
  1921  000E1C  6E0D               	movwf	?___ftmul,c
  1922  000E1E  0E00               	movlw	0
  1923  000E20  6E0E               	movwf	?___ftmul+1,c
  1924  000E22  0E00               	movlw	0
  1925  000E24  6E0F               	movwf	?___ftmul+2,c
  1926  000E26  0012               	return	
  1927  000E28                     l1564:
  1928  000E28  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1929  000E2C  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1930  000E2E  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1931  000E30  3411               	rlcf	___ftmul@f2+1,w,c
  1932  000E32  3613               	rlcf	??___ftmul& (0+255),f,c
  1933  000E34  E301               	bnc	u1381
  1934  000E36  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1935  000E38                     u1381:
  1936  000E38  5013               	movf	??___ftmul,w,c
  1937  000E3A  6E1B               	movwf	___ftmul@sign,c
  1938  000E3C  501B               	movf	___ftmul@sign,w,c
  1939  000E3E  A4D8               	btfss	status,2,c
  1940  000E40  D007               	goto	l1570
  1941  000E42  0E00               	movlw	0
  1942  000E44  6E0D               	movwf	?___ftmul,c
  1943  000E46  0E00               	movlw	0
  1944  000E48  6E0E               	movwf	?___ftmul+1,c
  1945  000E4A  0E00               	movlw	0
  1946  000E4C  6E0F               	movwf	?___ftmul+2,c
  1947  000E4E  0012               	return	
  1948  000E50                     l1570:
  1949  000E50  501B               	movf	___ftmul@sign,w,c
  1950  000E52  0F7B               	addlw	123
  1951  000E54  2616               	addwf	___ftmul@exp,f,c
  1952  000E56  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1953  000E5A  5012               	movf	___ftmul@f2+2,w,c
  1954  000E5C  1A1B               	xorwf	___ftmul@sign,f,c
  1955  000E5E  0E80               	movlw	128
  1956  000E60  161B               	andwf	___ftmul@sign,f,c
  1957  000E62  8E0E               	bsf	___ftmul@f1+1,7,c
  1958  000E64  8E11               	bsf	___ftmul@f2+1,7,c
  1959  000E66  0EFF               	movlw	255
  1960  000E68  1610               	andwf	___ftmul@f2,f,c
  1961  000E6A  0EFF               	movlw	255
  1962  000E6C  1611               	andwf	___ftmul@f2+1,f,c
  1963  000E6E  0E00               	movlw	0
  1964  000E70  1612               	andwf	___ftmul@f2+2,f,c
  1965  000E72  0E00               	movlw	0
  1966  000E74  6E17               	movwf	___ftmul@f3_as_product,c
  1967  000E76  0E00               	movlw	0
  1968  000E78  6E18               	movwf	___ftmul@f3_as_product+1,c
  1969  000E7A  0E00               	movlw	0
  1970  000E7C  6E19               	movwf	___ftmul@f3_as_product+2,c
  1971  000E7E  0E07               	movlw	7
  1972  000E80  6E1A               	movwf	___ftmul@cntr,c
  1973  000E82                     l1584:
  1974  000E82  A00D               	btfss	___ftmul@f1,0,c
  1975  000E84  D006               	goto	l1588
  1976  000E86  5010               	movf	___ftmul@f2,w,c
  1977  000E88  2617               	addwf	___ftmul@f3_as_product,f,c
  1978  000E8A  5011               	movf	___ftmul@f2+1,w,c
  1979  000E8C  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1980  000E8E  5012               	movf	___ftmul@f2+2,w,c
  1981  000E90  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1982  000E92                     l1588:
  1983  000E92  90D8               	bcf	status,0,c
  1984  000E94  320F               	rrcf	___ftmul@f1+2,f,c
  1985  000E96  320E               	rrcf	___ftmul@f1+1,f,c
  1986  000E98  320D               	rrcf	___ftmul@f1,f,c
  1987  000E9A  90D8               	bcf	status,0,c
  1988  000E9C  3610               	rlcf	___ftmul@f2,f,c
  1989  000E9E  3611               	rlcf	___ftmul@f2+1,f,c
  1990  000EA0  3612               	rlcf	___ftmul@f2+2,f,c
  1991  000EA2  2E1A               	decfsz	___ftmul@cntr,f,c
  1992  000EA4  D7EE               	goto	l1584
  1993  000EA6  0E09               	movlw	9
  1994  000EA8  6E1A               	movwf	___ftmul@cntr,c
  1995  000EAA                     l1594:
  1996  000EAA  A00D               	btfss	___ftmul@f1,0,c
  1997  000EAC  D006               	goto	l1598
  1998  000EAE  5010               	movf	___ftmul@f2,w,c
  1999  000EB0  2617               	addwf	___ftmul@f3_as_product,f,c
  2000  000EB2  5011               	movf	___ftmul@f2+1,w,c
  2001  000EB4  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2002  000EB6  5012               	movf	___ftmul@f2+2,w,c
  2003  000EB8  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2004  000EBA                     l1598:
  2005  000EBA  90D8               	bcf	status,0,c
  2006  000EBC  320F               	rrcf	___ftmul@f1+2,f,c
  2007  000EBE  320E               	rrcf	___ftmul@f1+1,f,c
  2008  000EC0  320D               	rrcf	___ftmul@f1,f,c
  2009  000EC2  90D8               	bcf	status,0,c
  2010  000EC4  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  2011  000EC6  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  2012  000EC8  3217               	rrcf	___ftmul@f3_as_product,f,c
  2013  000ECA  2E1A               	decfsz	___ftmul@cntr,f,c
  2014  000ECC  D7EE               	goto	l1594
  2015  000ECE  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2016  000ED2  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2017  000ED6  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2018  000EDA  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  2019  000EDE  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  2020  000EE2  EC5F  F008         	call	___ftpack	;wreg free
  2021  000EE6  C001  F00D         	movff	?___ftpack,?___ftmul
  2022  000EEA  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  2023  000EEE  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  2024  000EF2  0012               	return	
  2025  000EF4                     __end_of___ftmul:
  2026                           	opt stack 0
  2027                           tblptru	equ	0xFF8
  2028                           tblptrh	equ	0xFF7
  2029                           tblptrl	equ	0xFF6
  2030                           tablat	equ	0xFF5
  2031                           prodl	equ	0xFF3
  2032                           indf2	equ	0xFDF
  2033                           postinc2	equ	0xFDE
  2034                           postdec2	equ	0xFDD
  2035                           fsr2h	equ	0xFDA
  2036                           fsr2l	equ	0xFD9
  2037                           status	equ	0xFD8
  2038                           
  2039 ;; *************** function ___ftadd *****************
  2040 ;; Defined at:
  2041 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  f1              3   20[COMRAM] float 
  2044 ;;  f2              3   23[COMRAM] float 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  exp1            1   31[COMRAM] unsigned char 
  2047 ;;  exp2            1   30[COMRAM] unsigned char 
  2048 ;;  sign            1   29[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  3   20[COMRAM] float 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2058 ;;      Params:         6       0       0       0       0       0       0
  2059 ;;      Locals:         3       0       0       0       0       0       0
  2060 ;;      Temps:          3       0       0       0       0       0       0
  2061 ;;      Totals:        12       0       0       0       0       0       0
  2062 ;;Total ram usage:       12 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    1
  2065 ;; This function calls:
  2066 ;;		___ftpack
  2067 ;; This function is called by:
  2068 ;;		_UART_TxFloatNumber
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text10
  2073  000B60                     __ptext10:
  2074                           	opt stack 0
  2075  000B60                     ___ftadd:
  2076                           	opt stack 27
  2077                           
  2078                           ;incstack = 0
  2079  000B60  C017  F01B         	movff	___ftadd@f1+2,??___ftadd
  2080  000B64  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  2081  000B66  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  2082  000B68  3416               	rlcf	___ftadd@f1+1,w,c
  2083  000B6A  361B               	rlcf	??___ftadd& (0+255),f,c
  2084  000B6C  E301               	bnc	u1151
  2085  000B6E  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  2086  000B70                     u1151:
  2087  000B70  501B               	movf	??___ftadd,w,c
  2088  000B72  6E20               	movwf	___ftadd@exp1,c
  2089  000B74  C01A  F01B         	movff	___ftadd@f2+2,??___ftadd
  2090  000B78  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  2091  000B7A  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  2092  000B7C  3419               	rlcf	___ftadd@f2+1,w,c
  2093  000B7E  361B               	rlcf	??___ftadd& (0+255),f,c
  2094  000B80  E301               	bnc	u1161
  2095  000B82  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  2096  000B84                     u1161:
  2097  000B84  501B               	movf	??___ftadd,w,c
  2098  000B86  6E1F               	movwf	___ftadd@exp2,c
  2099  000B88  5020               	movf	___ftadd@exp1,w,c
  2100  000B8A  B4D8               	btfsc	status,2,c
  2101  000B8C  D00B               	goto	l432
  2102  000B8E  501F               	movf	___ftadd@exp2,w,c
  2103  000B90  5C20               	subwf	___ftadd@exp1,w,c
  2104  000B92  B0D8               	btfsc	status,0,c
  2105  000B94  D00E               	goto	l1496
  2106  000B96  5020               	movf	___ftadd@exp1,w,c
  2107  000B98  0800               	sublw	0
  2108  000B9A  241F               	addwf	___ftadd@exp2,w,c
  2109  000B9C  6E1B               	movwf	??___ftadd& (0+255),c
  2110  000B9E  0E18               	movlw	24
  2111  000BA0  641B               	cpfsgt	??___ftadd,c
  2112  000BA2  D007               	goto	l1496
  2113  000BA4                     l432:
  2114  000BA4  C018  F015         	movff	___ftadd@f2,?___ftadd
  2115  000BA8  C019  F016         	movff	___ftadd@f2+1,?___ftadd+1
  2116  000BAC  C01A  F017         	movff	___ftadd@f2+2,?___ftadd+2
  2117  000BB0  0012               	return	
  2118  000BB2                     l1496:
  2119  000BB2  501F               	movf	___ftadd@exp2,w,c
  2120  000BB4  B4D8               	btfsc	status,2,c
  2121  000BB6  D00B               	goto	l436
  2122  000BB8  5020               	movf	___ftadd@exp1,w,c
  2123  000BBA  5C1F               	subwf	___ftadd@exp2,w,c
  2124  000BBC  B0D8               	btfsc	status,0,c
  2125  000BBE  D00E               	goto	l1502
  2126  000BC0  501F               	movf	___ftadd@exp2,w,c
  2127  000BC2  0800               	sublw	0
  2128  000BC4  2420               	addwf	___ftadd@exp1,w,c
  2129  000BC6  6E1B               	movwf	??___ftadd& (0+255),c
  2130  000BC8  0E18               	movlw	24
  2131  000BCA  641B               	cpfsgt	??___ftadd,c
  2132  000BCC  D007               	goto	l1502
  2133  000BCE                     l436:
  2134  000BCE  C015  F015         	movff	___ftadd@f1,?___ftadd
  2135  000BD2  C016  F016         	movff	___ftadd@f1+1,?___ftadd+1
  2136  000BD6  C017  F017         	movff	___ftadd@f1+2,?___ftadd+2
  2137  000BDA  0012               	return	
  2138  000BDC                     l1502:
  2139  000BDC  0E06               	movlw	6
  2140  000BDE  6E1E               	movwf	___ftadd@sign,c
  2141  000BE0  BE17               	btfsc	___ftadd@f1+2,7,c
  2142  000BE2  8E1E               	bsf	___ftadd@sign,7,c
  2143  000BE4  BE1A               	btfsc	___ftadd@f2+2,7,c
  2144  000BE6  8C1E               	bsf	___ftadd@sign,6,c
  2145  000BE8  8E16               	bsf	___ftadd@f1+1,7,c
  2146  000BEA  0EFF               	movlw	255
  2147  000BEC  1615               	andwf	___ftadd@f1,f,c
  2148  000BEE  0EFF               	movlw	255
  2149  000BF0  1616               	andwf	___ftadd@f1+1,f,c
  2150  000BF2  0E00               	movlw	0
  2151  000BF4  1617               	andwf	___ftadd@f1+2,f,c
  2152  000BF6  8E19               	bsf	___ftadd@f2+1,7,c
  2153  000BF8  0EFF               	movlw	255
  2154  000BFA  1618               	andwf	___ftadd@f2,f,c
  2155  000BFC  0EFF               	movlw	255
  2156  000BFE  1619               	andwf	___ftadd@f2+1,f,c
  2157  000C00  0E00               	movlw	0
  2158  000C02  161A               	andwf	___ftadd@f2+2,f,c
  2159  000C04  501F               	movf	___ftadd@exp2,w,c
  2160  000C06  5C20               	subwf	___ftadd@exp1,w,c
  2161  000C08  B0D8               	btfsc	status,0,c
  2162  000C0A  D01B               	goto	l1528
  2163  000C0C                     l1518:
  2164  000C0C  90D8               	bcf	status,0,c
  2165  000C0E  3618               	rlcf	___ftadd@f2,f,c
  2166  000C10  3619               	rlcf	___ftadd@f2+1,f,c
  2167  000C12  361A               	rlcf	___ftadd@f2+2,f,c
  2168  000C14  061F               	decf	___ftadd@exp2,f,c
  2169  000C16  5020               	movf	___ftadd@exp1,w,c
  2170  000C18  181F               	xorwf	___ftadd@exp2,w,c
  2171  000C1A  B4D8               	btfsc	status,2,c
  2172  000C1C  D00D               	goto	l1526
  2173  000C1E  061E               	decf	___ftadd@sign,f,c
  2174  000C20  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  2175  000C24  0E07               	movlw	7
  2176  000C26  161B               	andwf	??___ftadd,f,c
  2177  000C28  B4D8               	btfsc	status,2,c
  2178  000C2A  D006               	goto	l1526
  2179  000C2C  D7EF               	goto	l1518
  2180  000C2E                     l1524:
  2181  000C2E  90D8               	bcf	status,0,c
  2182  000C30  3217               	rrcf	___ftadd@f1+2,f,c
  2183  000C32  3216               	rrcf	___ftadd@f1+1,f,c
  2184  000C34  3215               	rrcf	___ftadd@f1,f,c
  2185  000C36  2A20               	incf	___ftadd@exp1,f,c
  2186  000C38                     l1526:
  2187  000C38  501F               	movf	___ftadd@exp2,w,c
  2188  000C3A  1820               	xorwf	___ftadd@exp1,w,c
  2189  000C3C  B4D8               	btfsc	status,2,c
  2190  000C3E  D01F               	goto	l447
  2191  000C40  D7F6               	goto	l1524
  2192  000C42                     l1528:
  2193  000C42  5020               	movf	___ftadd@exp1,w,c
  2194  000C44  5C1F               	subwf	___ftadd@exp2,w,c
  2195  000C46  B0D8               	btfsc	status,0,c
  2196  000C48  D01A               	goto	l447
  2197  000C4A                     l1530:
  2198  000C4A  90D8               	bcf	status,0,c
  2199  000C4C  3615               	rlcf	___ftadd@f1,f,c
  2200  000C4E  3616               	rlcf	___ftadd@f1+1,f,c
  2201  000C50  3617               	rlcf	___ftadd@f1+2,f,c
  2202  000C52  0620               	decf	___ftadd@exp1,f,c
  2203  000C54  5020               	movf	___ftadd@exp1,w,c
  2204  000C56  181F               	xorwf	___ftadd@exp2,w,c
  2205  000C58  B4D8               	btfsc	status,2,c
  2206  000C5A  D00D               	goto	l1538
  2207  000C5C  061E               	decf	___ftadd@sign,f,c
  2208  000C5E  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  2209  000C62  0E07               	movlw	7
  2210  000C64  161B               	andwf	??___ftadd,f,c
  2211  000C66  B4D8               	btfsc	status,2,c
  2212  000C68  D006               	goto	l1538
  2213  000C6A  D7EF               	goto	l1530
  2214  000C6C                     l1536:
  2215  000C6C  90D8               	bcf	status,0,c
  2216  000C6E  321A               	rrcf	___ftadd@f2+2,f,c
  2217  000C70  3219               	rrcf	___ftadd@f2+1,f,c
  2218  000C72  3218               	rrcf	___ftadd@f2,f,c
  2219  000C74  2A1F               	incf	___ftadd@exp2,f,c
  2220  000C76                     l1538:
  2221  000C76  501F               	movf	___ftadd@exp2,w,c
  2222  000C78  1820               	xorwf	___ftadd@exp1,w,c
  2223  000C7A  A4D8               	btfss	status,2,c
  2224  000C7C  D7F7               	goto	l1536
  2225  000C7E                     l447:
  2226  000C7E  AE1E               	btfss	___ftadd@sign,7,c
  2227  000C80  D00C               	goto	l456
  2228  000C82  0EFF               	movlw	255
  2229  000C84  1A15               	xorwf	___ftadd@f1,f,c
  2230  000C86  0EFF               	movlw	255
  2231  000C88  1A16               	xorwf	___ftadd@f1+1,f,c
  2232  000C8A  0EFF               	movlw	255
  2233  000C8C  1A17               	xorwf	___ftadd@f1+2,f,c
  2234  000C8E  0E01               	movlw	1
  2235  000C90  2615               	addwf	___ftadd@f1,f,c
  2236  000C92  0E00               	movlw	0
  2237  000C94  2216               	addwfc	___ftadd@f1+1,f,c
  2238  000C96  0E00               	movlw	0
  2239  000C98  2217               	addwfc	___ftadd@f1+2,f,c
  2240  000C9A                     l456:
  2241  000C9A  AC1E               	btfss	___ftadd@sign,6,c
  2242  000C9C  D00C               	goto	l1544
  2243  000C9E  0EFF               	movlw	255
  2244  000CA0  1A18               	xorwf	___ftadd@f2,f,c
  2245  000CA2  0EFF               	movlw	255
  2246  000CA4  1A19               	xorwf	___ftadd@f2+1,f,c
  2247  000CA6  0EFF               	movlw	255
  2248  000CA8  1A1A               	xorwf	___ftadd@f2+2,f,c
  2249  000CAA  0E01               	movlw	1
  2250  000CAC  2618               	addwf	___ftadd@f2,f,c
  2251  000CAE  0E00               	movlw	0
  2252  000CB0  2219               	addwfc	___ftadd@f2+1,f,c
  2253  000CB2  0E00               	movlw	0
  2254  000CB4  221A               	addwfc	___ftadd@f2+2,f,c
  2255  000CB6                     l1544:
  2256  000CB6  0E00               	movlw	0
  2257  000CB8  6E1E               	movwf	___ftadd@sign,c
  2258  000CBA  5015               	movf	___ftadd@f1,w,c
  2259  000CBC  2618               	addwf	___ftadd@f2,f,c
  2260  000CBE  5016               	movf	___ftadd@f1+1,w,c
  2261  000CC0  2219               	addwfc	___ftadd@f2+1,f,c
  2262  000CC2  5017               	movf	___ftadd@f1+2,w,c
  2263  000CC4  221A               	addwfc	___ftadd@f2+2,f,c
  2264  000CC6  AE1A               	btfss	___ftadd@f2+2,7,c
  2265  000CC8  D00E               	goto	l1554
  2266  000CCA  0EFF               	movlw	255
  2267  000CCC  1A18               	xorwf	___ftadd@f2,f,c
  2268  000CCE  0EFF               	movlw	255
  2269  000CD0  1A19               	xorwf	___ftadd@f2+1,f,c
  2270  000CD2  0EFF               	movlw	255
  2271  000CD4  1A1A               	xorwf	___ftadd@f2+2,f,c
  2272  000CD6  0E01               	movlw	1
  2273  000CD8  2618               	addwf	___ftadd@f2,f,c
  2274  000CDA  0E00               	movlw	0
  2275  000CDC  2219               	addwfc	___ftadd@f2+1,f,c
  2276  000CDE  0E00               	movlw	0
  2277  000CE0  221A               	addwfc	___ftadd@f2+2,f,c
  2278  000CE2  0E01               	movlw	1
  2279  000CE4  6E1E               	movwf	___ftadd@sign,c
  2280  000CE6                     l1554:
  2281  000CE6  C018  F001         	movff	___ftadd@f2,___ftpack@arg
  2282  000CEA  C019  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2283  000CEE  C01A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2284  000CF2  C020  F004         	movff	___ftadd@exp1,___ftpack@exp
  2285  000CF6  C01E  F005         	movff	___ftadd@sign,___ftpack@sign
  2286  000CFA  EC5F  F008         	call	___ftpack	;wreg free
  2287  000CFE  C001  F015         	movff	?___ftpack,?___ftadd
  2288  000D02  C002  F016         	movff	?___ftpack+1,?___ftadd+1
  2289  000D06  C003  F017         	movff	?___ftpack+2,?___ftadd+2
  2290  000D0A  0012               	return	
  2291  000D0C                     __end_of___ftadd:
  2292                           	opt stack 0
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           prodl	equ	0xFF3
  2298                           indf2	equ	0xFDF
  2299                           postinc2	equ	0xFDE
  2300                           postdec2	equ	0xFDD
  2301                           fsr2h	equ	0xFDA
  2302                           fsr2l	equ	0xFD9
  2303                           status	equ	0xFD8
  2304                           
  2305 ;; *************** function ___ftpack *****************
  2306 ;; Defined at:
  2307 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  arg             3    0[COMRAM] unsigned um
  2310 ;;  exp             1    3[COMRAM] unsigned char 
  2311 ;;  sign            1    4[COMRAM] unsigned char 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  3    0[COMRAM] float 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2323 ;;      Params:         5       0       0       0       0       0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0
  2325 ;;      Temps:          3       0       0       0       0       0       0
  2326 ;;      Totals:         8       0       0       0       0       0       0
  2327 ;;Total ram usage:        8 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		___awtoft
  2333 ;;		___ftadd
  2334 ;;		___ftdiv
  2335 ;;		___ftmul
  2336 ;;		___lltoft
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text11
  2341  0010BE                     __ptext11:
  2342                           	opt stack 0
  2343  0010BE                     ___ftpack:
  2344                           	opt stack 29
  2345                           
  2346                           ;incstack = 0
  2347  0010BE  5004               	movf	___ftpack@exp,w,c
  2348  0010C0  B4D8               	btfsc	status,2,c
  2349  0010C2  D005               	goto	l1384
  2350  0010C4  5001               	movf	___ftpack@arg,w,c
  2351  0010C6  1002               	iorwf	___ftpack@arg+1,w,c
  2352  0010C8  1003               	iorwf	___ftpack@arg+2,w,c
  2353  0010CA  A4D8               	btfss	status,2,c
  2354  0010CC  D00C               	goto	l1390
  2355  0010CE                     l1384:
  2356  0010CE  0E00               	movlw	0
  2357  0010D0  6E01               	movwf	?___ftpack,c
  2358  0010D2  0E00               	movlw	0
  2359  0010D4  6E02               	movwf	?___ftpack+1,c
  2360  0010D6  0E00               	movlw	0
  2361  0010D8  6E03               	movwf	?___ftpack+2,c
  2362  0010DA  0012               	return	
  2363  0010DC                     l1388:
  2364  0010DC  2A04               	incf	___ftpack@exp,f,c
  2365  0010DE  90D8               	bcf	status,0,c
  2366  0010E0  3203               	rrcf	___ftpack@arg+2,f,c
  2367  0010E2  3202               	rrcf	___ftpack@arg+1,f,c
  2368  0010E4  3201               	rrcf	___ftpack@arg,f,c
  2369  0010E6                     l1390:
  2370  0010E6  0E00               	movlw	0
  2371  0010E8  1401               	andwf	___ftpack@arg,w,c
  2372  0010EA  6E06               	movwf	??___ftpack& (0+255),c
  2373  0010EC  0E00               	movlw	0
  2374  0010EE  1402               	andwf	___ftpack@arg+1,w,c
  2375  0010F0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2376  0010F2  0EFE               	movlw	254
  2377  0010F4  1403               	andwf	___ftpack@arg+2,w,c
  2378  0010F6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2379  0010F8  5006               	movf	??___ftpack,w,c
  2380  0010FA  1007               	iorwf	??___ftpack+1,w,c
  2381  0010FC  1008               	iorwf	??___ftpack+2,w,c
  2382  0010FE  B4D8               	btfsc	status,2,c
  2383  001100  D00C               	goto	l1396
  2384  001102  D7EC               	goto	l1388
  2385  001104                     l1392:
  2386  001104  2A04               	incf	___ftpack@exp,f,c
  2387  001106  0E01               	movlw	1
  2388  001108  2601               	addwf	___ftpack@arg,f,c
  2389  00110A  0E00               	movlw	0
  2390  00110C  2202               	addwfc	___ftpack@arg+1,f,c
  2391  00110E  0E00               	movlw	0
  2392  001110  2203               	addwfc	___ftpack@arg+2,f,c
  2393  001112  90D8               	bcf	status,0,c
  2394  001114  3203               	rrcf	___ftpack@arg+2,f,c
  2395  001116  3202               	rrcf	___ftpack@arg+1,f,c
  2396  001118  3201               	rrcf	___ftpack@arg,f,c
  2397  00111A                     l1396:
  2398  00111A  0E00               	movlw	0
  2399  00111C  1401               	andwf	___ftpack@arg,w,c
  2400  00111E  6E06               	movwf	??___ftpack& (0+255),c
  2401  001120  0E00               	movlw	0
  2402  001122  1402               	andwf	___ftpack@arg+1,w,c
  2403  001124  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2404  001126  0EFF               	movlw	255
  2405  001128  1403               	andwf	___ftpack@arg+2,w,c
  2406  00112A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2407  00112C  5006               	movf	??___ftpack,w,c
  2408  00112E  1007               	iorwf	??___ftpack+1,w,c
  2409  001130  1008               	iorwf	??___ftpack+2,w,c
  2410  001132  B4D8               	btfsc	status,2,c
  2411  001134  D006               	goto	l1400
  2412  001136  D7E6               	goto	l1392
  2413  001138                     l1398:
  2414  001138  0604               	decf	___ftpack@exp,f,c
  2415  00113A  90D8               	bcf	status,0,c
  2416  00113C  3601               	rlcf	___ftpack@arg,f,c
  2417  00113E  3602               	rlcf	___ftpack@arg+1,f,c
  2418  001140  3603               	rlcf	___ftpack@arg+2,f,c
  2419  001142                     l1400:
  2420  001142  BE02               	btfsc	___ftpack@arg+1,7,c
  2421  001144  D003               	goto	l409
  2422  001146  0E02               	movlw	2
  2423  001148  6004               	cpfslt	___ftpack@exp,c
  2424  00114A  D7F6               	goto	l1398
  2425  00114C                     l409:
  2426  00114C  A004               	btfss	___ftpack@exp,0,c
  2427  00114E  9E02               	bcf	___ftpack@arg+1,7,c
  2428  001150  90D8               	bcf	status,0,c
  2429  001152  3204               	rrcf	___ftpack@exp,f,c
  2430  001154  5004               	movf	___ftpack@exp,w,c
  2431  001156  1203               	iorwf	___ftpack@arg+2,f,c
  2432  001158  5005               	movf	___ftpack@sign,w,c
  2433  00115A  A4D8               	btfss	status,2,c
  2434  00115C  8E03               	bsf	___ftpack@arg+2,7,c
  2435  00115E  C001  F001         	movff	___ftpack@arg,?___ftpack
  2436  001162  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2437  001166  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2438  00116A  0012               	return	
  2439  00116C                     __end_of___ftpack:
  2440                           	opt stack 0
  2441                           tblptru	equ	0xFF8
  2442                           tblptrh	equ	0xFF7
  2443                           tblptrl	equ	0xFF6
  2444                           tablat	equ	0xFF5
  2445                           prodl	equ	0xFF3
  2446                           indf2	equ	0xFDF
  2447                           postinc2	equ	0xFDE
  2448                           postdec2	equ	0xFDD
  2449                           fsr2h	equ	0xFDA
  2450                           fsr2l	equ	0xFD9
  2451                           status	equ	0xFD8
  2452                           
  2453 ;; *************** function _UART_TxNumber *****************
  2454 ;; Defined at:
  2455 ;;		line 260 in file "../00-libfiles/uart.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  v_numericSys    1    wreg     unsigned char 
  2458 ;;  v_number_u32    4   13[COMRAM] unsigned long 
  2459 ;;  v_numOfDigit    1   17[COMRAM] unsigned char 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  v_numericSys    1   41[COMRAM] unsigned char 
  2462 ;;  a              10   29[COMRAM] unsigned char [10]
  2463 ;;  i               1   42[COMRAM] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  1    wreg      void 
  2466 ;; Registers used:
  2467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2473 ;;      Params:         5       0       0       0       0       0       0
  2474 ;;      Locals:        14       0       0       0       0       0       0
  2475 ;;      Temps:         11       0       0       0       0       0       0
  2476 ;;      Totals:        30       0       0       0       0       0       0
  2477 ;;Total ram usage:       30 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    1
  2480 ;; This function calls:
  2481 ;;		_UART_TxChar
  2482 ;;		___lldiv
  2483 ;; This function is called by:
  2484 ;;		_UART_TxFloatNumber
  2485 ;;		_UART_Printf
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text12
  2490  000990                     __ptext12:
  2491                           	opt stack 0
  2492  000990                     _UART_TxNumber:
  2493                           	opt stack 28
  2494                           
  2495                           ;incstack = 0
  2496                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  2497  000990  6E2A               	movwf	UART_TxNumber@v_numericSystem_u8,c
  2498                           
  2499                           ;uart.c: 262: uint8_t i=0,a[10];
  2500  000992  0E00               	movlw	0
  2501  000994  6E2B               	movwf	UART_TxNumber@i,c
  2502                           
  2503                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  2504  000996  0E02               	movlw	2
  2505  000998  182A               	xorwf	UART_TxNumber@v_numericSystem_u8,w,c
  2506  00099A  B4D8               	btfsc	status,2,c
  2507  00099C  D034               	goto	l1450
  2508  00099E  D037               	goto	l1452
  2509  0009A0                     l1444:
  2510                           
  2511                           ;uart.c: 267: {
  2512                           ;uart.c: 270: i = (((v_number_u32)&(((uint8_t)1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u
      +                          );
  2513  0009A0  C012  F013         	movff	UART_TxNumber@v_numOfDigitsToTransmit_u8,??_UART_TxNumber
  2514  0009A4  0EFF               	movlw	-1
  2515  0009A6  2613               	addwf	??_UART_TxNumber,f,c
  2516  0009A8  0E01               	movlw	1
  2517  0009AA  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2518  0009AC  0E00               	movlw	0
  2519  0009AE  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2520  0009B0  2A13               	incf	??_UART_TxNumber,f,c
  2521  0009B2  D003               	goto	u1044
  2522  0009B4                     u1045:
  2523  0009B4  90D8               	bcf	status,0,c
  2524  0009B6  3614               	rlcf	??_UART_TxNumber+1,f,c
  2525  0009B8  3615               	rlcf	??_UART_TxNumber+2,f,c
  2526  0009BA                     u1044:
  2527  0009BA  2E13               	decfsz	??_UART_TxNumber,f,c
  2528  0009BC  D7FB               	goto	u1045
  2529  0009BE  C014  F016         	movff	??_UART_TxNumber+1,??_UART_TxNumber+3
  2530  0009C2  C015  F017         	movff	??_UART_TxNumber+2,??_UART_TxNumber+4
  2531  0009C6  0E00               	movlw	0
  2532  0009C8  BE17               	btfsc	(??_UART_TxNumber+4)& (0+255),7,c
  2533  0009CA  0EFF               	movlw	255
  2534  0009CC  6E18               	movwf	(??_UART_TxNumber+5)& (0+255),c
  2535  0009CE  6E19               	movwf	(??_UART_TxNumber+6)& (0+255),c
  2536  0009D0  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2537  0009D2  1416               	andwf	??_UART_TxNumber+3,w,c
  2538  0009D4  6E1A               	movwf	(??_UART_TxNumber+7)& (0+255),c
  2539  0009D6  500F               	movf	UART_TxNumber@v_number_u32+1,w,c
  2540  0009D8  1417               	andwf	??_UART_TxNumber+4,w,c
  2541  0009DA  6E1B               	movwf	(??_UART_TxNumber+8)& (0+255),c
  2542  0009DC  5010               	movf	UART_TxNumber@v_number_u32+2,w,c
  2543  0009DE  1418               	andwf	??_UART_TxNumber+5,w,c
  2544  0009E0  6E1C               	movwf	(??_UART_TxNumber+9)& (0+255),c
  2545  0009E2  5011               	movf	UART_TxNumber@v_number_u32+3,w,c
  2546  0009E4  1419               	andwf	??_UART_TxNumber+6,w,c
  2547  0009E6  6E1D               	movwf	(??_UART_TxNumber+10)& (0+255),c
  2548  0009E8  501A               	movf	??_UART_TxNumber+7,w,c
  2549  0009EA  101B               	iorwf	??_UART_TxNumber+8,w,c
  2550  0009EC  101C               	iorwf	??_UART_TxNumber+9,w,c
  2551  0009EE  101D               	iorwf	??_UART_TxNumber+10,w,c
  2552  0009F0  B4D8               	btfsc	status,2,c
  2553  0009F2  D002               	goto	u1050
  2554  0009F4  0E01               	movlw	1
  2555  0009F6  D001               	goto	u1060
  2556  0009F8                     u1050:
  2557  0009F8  0E00               	movlw	0
  2558  0009FA                     u1060:
  2559  0009FA  6E2B               	movwf	UART_TxNumber@i,c
  2560                           
  2561                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  2562  0009FC  502B               	movf	UART_TxNumber@i,w,c
  2563  0009FE  0F30               	addlw	48
  2564  000A00  EC1F  F00A         	call	_UART_TxChar
  2565                           
  2566                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  2567  000A04  0612               	decf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f,c
  2568  000A06                     l1450:
  2569  000A06  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2570  000A08  B4D8               	btfsc	status,2,c
  2571  000A0A  0012               	return	
  2572  000A0C  D7C9               	goto	l1444
  2573  000A0E                     l1452:
  2574                           
  2575                           ;uart.c: 275: else if(v_number_u32==0)
  2576  000A0E  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2577  000A10  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  2578  000A12  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  2579  000A14  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  2580  000A16  A4D8               	btfss	status,2,c
  2581  000A18  D004               	goto	l1456
  2582                           
  2583                           ;uart.c: 276: {
  2584                           ;uart.c: 280: UART_TxChar('0');
  2585  000A1A  0E30               	movlw	48
  2586  000A1C  EC1F  F00A         	call	_UART_TxChar
  2587                           
  2588                           ;uart.c: 281: }
  2589  000A20  0012               	return	
  2590  000A22                     l1456:
  2591                           
  2592                           ;uart.c: 282: else
  2593                           ;uart.c: 283: {
  2594                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  2595  000A22  0E00               	movlw	0
  2596  000A24  6E2B               	movwf	UART_TxNumber@i,c
  2597  000A26  D04D               	goto	l1474
  2598  000A28                     l1458:
  2599                           
  2600                           ;uart.c: 285: {
  2601                           ;uart.c: 288: if(v_number_u32!=0)
  2602  000A28  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2603  000A2A  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  2604  000A2C  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  2605  000A2E  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  2606  000A30  B4D8               	btfsc	status,2,c
  2607  000A32  D035               	goto	l1464
  2608                           
  2609                           ;uart.c: 289: {
  2610                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  2611  000A34  502B               	movf	UART_TxNumber@i,w,c
  2612  000A36  0D01               	mullw	1
  2613  000A38  0E1E               	movlw	low UART_TxNumber@a
  2614  000A3A  24F3               	addwf	prodl,w,c
  2615  000A3C  6ED9               	movwf	fsr2l,c
  2616  000A3E  0E00               	movlw	high UART_TxNumber@a
  2617  000A40  20F4               	addwfc	prodh,w,c
  2618  000A42  6EDA               	movwf	fsr2h,c
  2619  000A44  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  2620  000A48  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  2621  000A4C  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  2622  000A50  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  2623  000A54  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  2624  000A56  6E05               	movwf	___lldiv@divisor,c
  2625  000A58  6A06               	clrf	___lldiv@divisor+1,c
  2626  000A5A  6A07               	clrf	___lldiv@divisor+2,c
  2627  000A5C  6A08               	clrf	___lldiv@divisor+3,c
  2628  000A5E  EC02  F009         	call	___lldiv	;wreg free
  2629  000A62  5001               	movf	?___lldiv,w,c
  2630  000A64  022A               	mulwf	UART_TxNumber@v_numericSystem_u8,c
  2631  000A66  50F3               	movf	prodl,w,c
  2632  000A68  0800               	sublw	0
  2633  000A6A  240E               	addwf	UART_TxNumber@v_number_u32,w,c
  2634  000A6C  6EDF               	movwf	indf2,c
  2635                           
  2636                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  2637  000A6E  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  2638  000A72  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  2639  000A76  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  2640  000A7A  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  2641  000A7E  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  2642  000A80  6E05               	movwf	___lldiv@divisor,c
  2643  000A82  6A06               	clrf	___lldiv@divisor+1,c
  2644  000A84  6A07               	clrf	___lldiv@divisor+2,c
  2645  000A86  6A08               	clrf	___lldiv@divisor+3,c
  2646  000A88  EC02  F009         	call	___lldiv	;wreg free
  2647  000A8C  C001  F00E         	movff	?___lldiv,UART_TxNumber@v_number_u32
  2648  000A90  C002  F00F         	movff	?___lldiv+1,UART_TxNumber@v_number_u32+1
  2649  000A94  C003  F010         	movff	?___lldiv+2,UART_TxNumber@v_number_u32+2
  2650  000A98  C004  F011         	movff	?___lldiv+3,UART_TxNumber@v_number_u32+3
  2651                           
  2652                           ;uart.c: 298: }
  2653  000A9C  D011               	goto	l1472
  2654  000A9E                     l1464:
  2655                           
  2656                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  2657                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  2658  000A9E  2812               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2659  000AA0  B4D8               	btfsc	status,2,c
  2660  000AA2  D05A               	goto	l1486
  2661  000AA4  0E0A               	movlw	10
  2662  000AA6  6412               	cpfsgt	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  2663  000AA8  D001               	goto	l1470
  2664  000AAA  D056               	goto	l1486
  2665  000AAC                     l1470:
  2666                           
  2667                           ;uart.c: 306: else
  2668                           ;uart.c: 307: {
  2669                           ;uart.c: 311: a[i]=0;
  2670  000AAC  502B               	movf	UART_TxNumber@i,w,c
  2671  000AAE  0D01               	mullw	1
  2672  000AB0  0E1E               	movlw	low UART_TxNumber@a
  2673  000AB2  24F3               	addwf	prodl,w,c
  2674  000AB4  6ED9               	movwf	fsr2l,c
  2675  000AB6  0E00               	movlw	high UART_TxNumber@a
  2676  000AB8  20F4               	addwfc	prodh,w,c
  2677  000ABA  6EDA               	movwf	fsr2h,c
  2678  000ABC  0E00               	movlw	0
  2679  000ABE  6EDF               	movwf	indf2,c
  2680  000AC0                     l1472:
  2681  000AC0  2A2B               	incf	UART_TxNumber@i,f,c
  2682  000AC2                     l1474:
  2683  000AC2  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2684  000AC4  5C2B               	subwf	UART_TxNumber@i,w,c
  2685  000AC6  B0D8               	btfsc	status,0,c
  2686  000AC8  D047               	goto	l1486
  2687  000ACA  D7AE               	goto	l1458
  2688  000ACC                     l1476:
  2689                           
  2690                           ;uart.c: 316: {
  2691                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  2692  000ACC  0EFF               	movlw	255
  2693  000ACE  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2694  000AD0  0EFF               	movlw	255
  2695  000AD2  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2696  000AD4  502B               	movf	UART_TxNumber@i,w,c
  2697  000AD6  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2698  000AD8  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2699  000ADA  5013               	movf	??_UART_TxNumber,w,c
  2700  000ADC  2615               	addwf	??_UART_TxNumber+2,f,c
  2701  000ADE  5014               	movf	??_UART_TxNumber+1,w,c
  2702  000AE0  2216               	addwfc	??_UART_TxNumber+3,f,c
  2703  000AE2  0E1E               	movlw	low UART_TxNumber@a
  2704  000AE4  2415               	addwf	??_UART_TxNumber+2,w,c
  2705  000AE6  6ED9               	movwf	fsr2l,c
  2706  000AE8  0E00               	movlw	high UART_TxNumber@a
  2707  000AEA  2016               	addwfc	??_UART_TxNumber+3,w,c
  2708  000AEC  6EDA               	movwf	fsr2h,c
  2709  000AEE  0E0A               	movlw	10
  2710  000AF0  60DF               	cpfslt	indf2,c
  2711  000AF2  D015               	goto	l1480
  2712  000AF4  0EFF               	movlw	255
  2713  000AF6  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2714  000AF8  0EFF               	movlw	255
  2715  000AFA  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2716  000AFC  502B               	movf	UART_TxNumber@i,w,c
  2717  000AFE  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2718  000B00  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2719  000B02  5013               	movf	??_UART_TxNumber,w,c
  2720  000B04  2615               	addwf	??_UART_TxNumber+2,f,c
  2721  000B06  5014               	movf	??_UART_TxNumber+1,w,c
  2722  000B08  2216               	addwfc	??_UART_TxNumber+3,f,c
  2723  000B0A  0E1E               	movlw	low UART_TxNumber@a
  2724  000B0C  2415               	addwf	??_UART_TxNumber+2,w,c
  2725  000B0E  6ED9               	movwf	fsr2l,c
  2726  000B10  0E00               	movlw	high UART_TxNumber@a
  2727  000B12  2016               	addwfc	??_UART_TxNumber+3,w,c
  2728  000B14  6EDA               	movwf	fsr2h,c
  2729  000B16  50DF               	movf	indf2,w,c
  2730  000B18  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  2731  000B1A  0E30               	movlw	48
  2732  000B1C  D014               	goto	L1
  2733  000B1E                     l1480:
  2734  000B1E  0EFF               	movlw	255
  2735  000B20  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2736  000B22  0EFF               	movlw	255
  2737  000B24  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2738  000B26  502B               	movf	UART_TxNumber@i,w,c
  2739  000B28  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2740  000B2A  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2741  000B2C  5013               	movf	??_UART_TxNumber,w,c
  2742  000B2E  2615               	addwf	??_UART_TxNumber+2,f,c
  2743  000B30  5014               	movf	??_UART_TxNumber+1,w,c
  2744  000B32  2216               	addwfc	??_UART_TxNumber+3,f,c
  2745  000B34  0E1E               	movlw	low UART_TxNumber@a
  2746  000B36  2415               	addwf	??_UART_TxNumber+2,w,c
  2747  000B38  6ED9               	movwf	fsr2l,c
  2748  000B3A  0E00               	movlw	high UART_TxNumber@a
  2749  000B3C  2016               	addwfc	??_UART_TxNumber+3,w,c
  2750  000B3E  6EDA               	movwf	fsr2h,c
  2751  000B40  50DF               	movf	indf2,w,c
  2752  000B42  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  2753  000B44  0E37               	movlw	55
  2754  000B46                     L1:
  2755  000B46  2417               	addwf	??_UART_TxNumber+4,w,c
  2756  000B48  6E28               	movwf	_UART_TxNumber$65,c
  2757  000B4A  6A29               	clrf	_UART_TxNumber$65+1,c
  2758  000B4C  0E00               	movlw	0
  2759  000B4E  2229               	addwfc	_UART_TxNumber$65+1,f,c
  2760  000B50  5028               	movf	_UART_TxNumber$65,w,c
  2761  000B52  EC1F  F00A         	call	_UART_TxChar
  2762                           
  2763                           ;uart.c: 319: i--;
  2764  000B56  062B               	decf	UART_TxNumber@i,f,c
  2765  000B58                     l1486:
  2766  000B58  502B               	movf	UART_TxNumber@i,w,c
  2767  000B5A  B4D8               	btfsc	status,2,c
  2768  000B5C  0012               	return	
  2769  000B5E  D7B6               	goto	l1476
  2770  000B60                     __end_of_UART_TxNumber:
  2771                           	opt stack 0
  2772                           tblptru	equ	0xFF8
  2773                           tblptrh	equ	0xFF7
  2774                           tblptrl	equ	0xFF6
  2775                           tablat	equ	0xFF5
  2776                           prodh	equ	0xFF4
  2777                           prodl	equ	0xFF3
  2778                           indf2	equ	0xFDF
  2779                           postinc2	equ	0xFDE
  2780                           postdec2	equ	0xFDD
  2781                           fsr2h	equ	0xFDA
  2782                           fsr2l	equ	0xFD9
  2783                           status	equ	0xFD8
  2784                           
  2785 ;; *************** function _UART_TxChar *****************
  2786 ;; Defined at:
  2787 ;;		line 145 in file "../00-libfiles/uart.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  v_uartData_u    1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  v_uartData_u    1    0[COMRAM] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2801 ;;      Params:         0       0       0       0       0       0       0
  2802 ;;      Locals:         1       0       0       0       0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0
  2804 ;;      Totals:         1       0       0       0       0       0       0
  2805 ;;Total ram usage:        1 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_UART_TxString
  2811 ;;		_UART_TxNumber
  2812 ;;		_UART_TxFloatNumber
  2813 ;;		_UART_Printf
  2814 ;;		_UART_RxString
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text13
  2819  00143E                     __ptext13:
  2820                           	opt stack 0
  2821  00143E                     _UART_TxChar:
  2822                           	opt stack 28
  2823                           
  2824                           ;incstack = 0
  2825                           ;UART_TxChar@v_uartData_u8 stored from wreg
  2826  00143E  6E01               	movwf	UART_TxChar@v_uartData_u8,c
  2827  001440                     l39:
  2828  001440  A89E               	btfss	3998,4,c	;volatile
  2829  001442  D7FE               	goto	l39
  2830                           
  2831                           ;uart.c: 148: TXIF=0;
  2832  001444  989E               	bcf	3998,4,c	;volatile
  2833                           
  2834                           ;uart.c: 149: TXREG=v_uartData_u8;
  2835  001446  C001  FFAD         	movff	UART_TxChar@v_uartData_u8,4013	;volatile
  2836  00144A  0012               	return		;funcret
  2837  00144C                     __end_of_UART_TxChar:
  2838                           	opt stack 0
  2839                           tblptru	equ	0xFF8
  2840                           tblptrh	equ	0xFF7
  2841                           tblptrl	equ	0xFF6
  2842                           tablat	equ	0xFF5
  2843                           prodh	equ	0xFF4
  2844                           prodl	equ	0xFF3
  2845                           indf2	equ	0xFDF
  2846                           postinc2	equ	0xFDE
  2847                           postdec2	equ	0xFDD
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function _UART_Init *****************
  2853 ;; Defined at:
  2854 ;;		line 66 in file "../00-libfiles/uart.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  v_baudRate_u    4   22[COMRAM] unsigned long 
  2857 ;; Auto vars:     Size  Location     Type
  2858 ;;		None
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  1    wreg      void 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0, cstack
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2868 ;;      Params:         4       0       0       0       0       0       0
  2869 ;;      Locals:         0       0       0       0       0       0       0
  2870 ;;      Temps:          0       0       0       0       0       0       0
  2871 ;;      Totals:         4       0       0       0       0       0       0
  2872 ;;Total ram usage:        4 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    2
  2875 ;; This function calls:
  2876 ;;		_UART_SetBaudRate
  2877 ;; This function is called by:
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text14
  2883  00140A                     __ptext14:
  2884                           	opt stack 0
  2885  00140A                     _UART_Init:
  2886                           	opt stack 28
  2887                           
  2888                           ;uart.c: 68: TRISC=0x80;
  2889                           
  2890                           ;incstack = 0
  2891  00140A  0E80               	movlw	128
  2892  00140C  6E94               	movwf	3988,c	;volatile
  2893                           
  2894                           ;uart.c: 69: TXSTA=0x20;
  2895  00140E  0E20               	movlw	32
  2896  001410  6EAC               	movwf	4012,c	;volatile
  2897                           
  2898                           ;uart.c: 70: RCSTA=0x90;
  2899  001412  0E90               	movlw	144
  2900  001414  6EAB               	movwf	4011,c	;volatile
  2901                           
  2902                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  2903  001416  C017  F00E         	movff	UART_Init@v_baudRate_u32,UART_SetBaudRate@v_baudRate_u32
  2904  00141A  C018  F00F         	movff	UART_Init@v_baudRate_u32+1,UART_SetBaudRate@v_baudRate_u32+1
  2905  00141E  C019  F010         	movff	UART_Init@v_baudRate_u32+2,UART_SetBaudRate@v_baudRate_u32+2
  2906  001422  C01A  F011         	movff	UART_Init@v_baudRate_u32+3,UART_SetBaudRate@v_baudRate_u32+3
  2907  001426  EC43  F009         	call	_UART_SetBaudRate	;wreg free
  2908  00142A  0012               	return		;funcret
  2909  00142C                     __end_of_UART_Init:
  2910                           	opt stack 0
  2911                           tblptru	equ	0xFF8
  2912                           tblptrh	equ	0xFF7
  2913                           tblptrl	equ	0xFF6
  2914                           tablat	equ	0xFF5
  2915                           prodh	equ	0xFF4
  2916                           prodl	equ	0xFF3
  2917                           indf2	equ	0xFDF
  2918                           postinc2	equ	0xFDE
  2919                           postdec2	equ	0xFDD
  2920                           fsr2h	equ	0xFDA
  2921                           fsr2l	equ	0xFD9
  2922                           status	equ	0xFD8
  2923                           
  2924 ;; *************** function _UART_SetBaudRate *****************
  2925 ;; Defined at:
  2926 ;;		line 91 in file "../00-libfiles/uart.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;  v_baudRate_u    4   13[COMRAM] unsigned long 
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  RegValue        1   21[COMRAM] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2940 ;;      Params:         4       0       0       0       0       0       0
  2941 ;;      Locals:         1       0       0       0       0       0       0
  2942 ;;      Temps:          4       0       0       0       0       0       0
  2943 ;;      Totals:         9       0       0       0       0       0       0
  2944 ;;Total ram usage:        9 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    1
  2947 ;; This function calls:
  2948 ;;		___lldiv
  2949 ;; This function is called by:
  2950 ;;		_UART_Init
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text15
  2955  001286                     __ptext15:
  2956                           	opt stack 0
  2957  001286                     _UART_SetBaudRate:
  2958                           	opt stack 28
  2959                           
  2960                           ;uart.c: 93: uint8_t RegValue;
  2961                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  2962                           
  2963                           ;incstack = 0
  2964  001286  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  2965  001288  1010               	iorwf	UART_SetBaudRate@v_baudRate_u32+2,w,c
  2966  00128A  E106               	bnz	u1520
  2967  00128C  0E60               	movlw	96
  2968  00128E  5C0E               	subwf	UART_SetBaudRate@v_baudRate_u32,w,c
  2969  001290  0E09               	movlw	9
  2970  001292  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  2971  001294  A0D8               	btfss	status,0,c
  2972  001296  D02D               	goto	l1672
  2973  001298                     u1520:
  2974  001298  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  2975  00129A  E12B               	bnz	l1672
  2976  00129C  040E               	decf	UART_SetBaudRate@v_baudRate_u32,w,c
  2977  00129E  0EC2               	movlw	194
  2978  0012A0  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  2979  0012A2  0E01               	movlw	1
  2980  0012A4  5810               	subwfb	UART_SetBaudRate@v_baudRate_u32+2,w,c
  2981  0012A6  B0D8               	btfsc	status,0,c
  2982  0012A8  D024               	goto	l1672
  2983                           
  2984                           ;uart.c: 96: {
  2985                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  2986  0012AA  0E00               	movlw	0
  2987  0012AC  6E01               	movwf	___lldiv@dividend,c
  2988  0012AE  0E2D               	movlw	45
  2989  0012B0  6E02               	movwf	___lldiv@dividend+1,c
  2990  0012B2  0E31               	movlw	49
  2991  0012B4  6E03               	movwf	___lldiv@dividend+2,c
  2992  0012B6  0E01               	movlw	1
  2993  0012B8  6E04               	movwf	___lldiv@dividend+3,c
  2994  0012BA  C00E  F012         	movff	UART_SetBaudRate@v_baudRate_u32,??_UART_SetBaudRate
  2995  0012BE  C00F  F013         	movff	UART_SetBaudRate@v_baudRate_u32+1,??_UART_SetBaudRate+1
  2996  0012C2  C010  F014         	movff	UART_SetBaudRate@v_baudRate_u32+2,??_UART_SetBaudRate+2
  2997  0012C6  C011  F015         	movff	UART_SetBaudRate@v_baudRate_u32+3,??_UART_SetBaudRate+3
  2998  0012CA  0E06               	movlw	6
  2999  0012CC                     u1545:
  3000  0012CC  90D8               	bcf	status,0,c
  3001  0012CE  3612               	rlcf	??_UART_SetBaudRate,f,c
  3002  0012D0  3613               	rlcf	??_UART_SetBaudRate+1,f,c
  3003  0012D2  3614               	rlcf	??_UART_SetBaudRate+2,f,c
  3004  0012D4  3615               	rlcf	??_UART_SetBaudRate+3,f,c
  3005  0012D6  2EE8               	decfsz	wreg,f,c
  3006  0012D8  D7F9               	goto	u1545
  3007  0012DA  C012  F005         	movff	??_UART_SetBaudRate,___lldiv@divisor
  3008  0012DE  C013  F006         	movff	??_UART_SetBaudRate+1,___lldiv@divisor+1
  3009  0012E2  C014  F007         	movff	??_UART_SetBaudRate+2,___lldiv@divisor+2
  3010  0012E6  C015  F008         	movff	??_UART_SetBaudRate+3,___lldiv@divisor+3
  3011  0012EA  EC02  F009         	call	___lldiv	;wreg free
  3012  0012EE  0401               	decf	?___lldiv,w,c
  3013  0012F0  D001               	goto	L2
  3014  0012F2                     l1672:
  3015                           
  3016                           ;uart.c: 101: else
  3017                           ;uart.c: 102: {
  3018                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  3019  0012F2  0E1F               	movlw	31
  3020  0012F4                     L2:
  3021  0012F4  6E16               	movwf	UART_SetBaudRate@RegValue,c
  3022                           
  3023                           ;uart.c: 105: }
  3024                           ;uart.c: 107: SPBRG = RegValue;
  3025  0012F6  C016  FFAF         	movff	UART_SetBaudRate@RegValue,4015	;volatile
  3026  0012FA  0012               	return		;funcret
  3027  0012FC                     __end_of_UART_SetBaudRate:
  3028                           	opt stack 0
  3029                           tblptru	equ	0xFF8
  3030                           tblptrh	equ	0xFF7
  3031                           tblptrl	equ	0xFF6
  3032                           tablat	equ	0xFF5
  3033                           prodh	equ	0xFF4
  3034                           prodl	equ	0xFF3
  3035                           wreg	equ	0xFE8
  3036                           indf2	equ	0xFDF
  3037                           postinc2	equ	0xFDE
  3038                           postdec2	equ	0xFDD
  3039                           fsr2h	equ	0xFDA
  3040                           fsr2l	equ	0xFD9
  3041                           status	equ	0xFD8
  3042                           
  3043 ;; *************** function ___lldiv *****************
  3044 ;; Defined at:
  3045 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3046 ;; Parameters:    Size  Location     Type
  3047 ;;  dividend        4    0[COMRAM] unsigned long 
  3048 ;;  divisor         4    4[COMRAM] unsigned long 
  3049 ;; Auto vars:     Size  Location     Type
  3050 ;;  quotient        4    8[COMRAM] unsigned long 
  3051 ;;  counter         1   12[COMRAM] unsigned char 
  3052 ;; Return value:  Size  Location     Type
  3053 ;;                  4    0[COMRAM] unsigned long 
  3054 ;; Registers used:
  3055 ;;		wreg, status,2, status,0
  3056 ;; Tracked objects:
  3057 ;;		On entry : 0/0
  3058 ;;		On exit  : 0/0
  3059 ;;		Unchanged: 0/0
  3060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3061 ;;      Params:         8       0       0       0       0       0       0
  3062 ;;      Locals:         5       0       0       0       0       0       0
  3063 ;;      Temps:          0       0       0       0       0       0       0
  3064 ;;      Totals:        13       0       0       0       0       0       0
  3065 ;;Total ram usage:       13 bytes
  3066 ;; Hardware stack levels used:    1
  3067 ;; This function calls:
  3068 ;;		Nothing
  3069 ;; This function is called by:
  3070 ;;		_UART_SetBaudRate
  3071 ;;		_UART_TxNumber
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text16
  3076  001204                     __ptext16:
  3077                           	opt stack 0
  3078  001204                     ___lldiv:
  3079                           	opt stack 28
  3080                           
  3081                           ;incstack = 0
  3082  001204  0E00               	movlw	0
  3083  001206  6E09               	movwf	___lldiv@quotient,c
  3084  001208  0E00               	movlw	0
  3085  00120A  6E0A               	movwf	___lldiv@quotient+1,c
  3086  00120C  0E00               	movlw	0
  3087  00120E  6E0B               	movwf	___lldiv@quotient+2,c
  3088  001210  0E00               	movlw	0
  3089  001212  6E0C               	movwf	___lldiv@quotient+3,c
  3090  001214  5005               	movf	___lldiv@divisor,w,c
  3091  001216  1006               	iorwf	___lldiv@divisor+1,w,c
  3092  001218  1007               	iorwf	___lldiv@divisor+2,w,c
  3093  00121A  1008               	iorwf	___lldiv@divisor+3,w,c
  3094  00121C  B4D8               	btfsc	status,2,c
  3095  00121E  D02A               	goto	l534
  3096  001220  0E01               	movlw	1
  3097  001222  6E0D               	movwf	___lldiv@counter,c
  3098  001224  D006               	goto	l1424
  3099  001226                     l1422:
  3100  001226  90D8               	bcf	status,0,c
  3101  001228  3605               	rlcf	___lldiv@divisor,f,c
  3102  00122A  3606               	rlcf	___lldiv@divisor+1,f,c
  3103  00122C  3607               	rlcf	___lldiv@divisor+2,f,c
  3104  00122E  3608               	rlcf	___lldiv@divisor+3,f,c
  3105  001230  2A0D               	incf	___lldiv@counter,f,c
  3106  001232                     l1424:
  3107  001232  AE08               	btfss	___lldiv@divisor+3,7,c
  3108  001234  D7F8               	goto	l1422
  3109  001236                     l1426:
  3110  001236  90D8               	bcf	status,0,c
  3111  001238  3609               	rlcf	___lldiv@quotient,f,c
  3112  00123A  360A               	rlcf	___lldiv@quotient+1,f,c
  3113  00123C  360B               	rlcf	___lldiv@quotient+2,f,c
  3114  00123E  360C               	rlcf	___lldiv@quotient+3,f,c
  3115  001240  5005               	movf	___lldiv@divisor,w,c
  3116  001242  5C01               	subwf	___lldiv@dividend,w,c
  3117  001244  5006               	movf	___lldiv@divisor+1,w,c
  3118  001246  5802               	subwfb	___lldiv@dividend+1,w,c
  3119  001248  5007               	movf	___lldiv@divisor+2,w,c
  3120  00124A  5803               	subwfb	___lldiv@dividend+2,w,c
  3121  00124C  5008               	movf	___lldiv@divisor+3,w,c
  3122  00124E  5804               	subwfb	___lldiv@dividend+3,w,c
  3123  001250  A0D8               	btfss	status,0,c
  3124  001252  D009               	goto	l1434
  3125  001254  5005               	movf	___lldiv@divisor,w,c
  3126  001256  5E01               	subwf	___lldiv@dividend,f,c
  3127  001258  5006               	movf	___lldiv@divisor+1,w,c
  3128  00125A  5A02               	subwfb	___lldiv@dividend+1,f,c
  3129  00125C  5007               	movf	___lldiv@divisor+2,w,c
  3130  00125E  5A03               	subwfb	___lldiv@dividend+2,f,c
  3131  001260  5008               	movf	___lldiv@divisor+3,w,c
  3132  001262  5A04               	subwfb	___lldiv@dividend+3,f,c
  3133  001264  8009               	bsf	___lldiv@quotient,0,c
  3134  001266                     l1434:
  3135  001266  90D8               	bcf	status,0,c
  3136  001268  3208               	rrcf	___lldiv@divisor+3,f,c
  3137  00126A  3207               	rrcf	___lldiv@divisor+2,f,c
  3138  00126C  3206               	rrcf	___lldiv@divisor+1,f,c
  3139  00126E  3205               	rrcf	___lldiv@divisor,f,c
  3140  001270  2E0D               	decfsz	___lldiv@counter,f,c
  3141  001272  D7E1               	goto	l1426
  3142  001274                     l534:
  3143  001274  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3144  001278  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3145  00127C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3146  001280  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3147  001284  0012               	return		;funcret
  3148  001286                     __end_of___lldiv:
  3149                           	opt stack 0
  3150                           tblptru	equ	0xFF8
  3151                           tblptrh	equ	0xFF7
  3152                           tblptrl	equ	0xFF6
  3153                           tablat	equ	0xFF5
  3154                           prodh	equ	0xFF4
  3155                           prodl	equ	0xFF3
  3156                           wreg	equ	0xFE8
  3157                           indf2	equ	0xFDF
  3158                           postinc2	equ	0xFDE
  3159                           postdec2	equ	0xFDD
  3160                           fsr2h	equ	0xFDA
  3161                           fsr2l	equ	0xFD9
  3162                           status	equ	0xFD8
  3163                           
  3164 ;; *************** function _ADC_Init *****************
  3165 ;; Defined at:
  3166 ;;		line 54 in file "../00-libfiles/adc.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;		None
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  1    wreg      void 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3180 ;;      Params:         0       0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0
  3183 ;;      Totals:         0       0       0       0       0       0       0
  3184 ;;Total ram usage:        0 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text17
  3194  00144C                     __ptext17:
  3195                           	opt stack 0
  3196  00144C                     _ADC_Init:
  3197                           	opt stack 30
  3198                           
  3199                           ;adc.c: 56: ADCON0 = 0x00;
  3200                           
  3201                           ;incstack = 0
  3202  00144C  0E00               	movlw	0
  3203  00144E  6EC2               	movwf	4034,c	;volatile
  3204                           
  3205                           ;adc.c: 57: ADCON1 = 0x00;
  3206  001450  0E00               	movlw	0
  3207  001452  6EC1               	movwf	4033,c	;volatile
  3208                           
  3209                           ;adc.c: 58: ADCON2 = 0x82;
  3210  001454  0E82               	movlw	130
  3211  001456  6EC0               	movwf	4032,c	;volatile
  3212  001458  0012               	return		;funcret
  3213  00145A                     __end_of_ADC_Init:
  3214                           	opt stack 0
  3215                           tblptru	equ	0xFF8
  3216                           tblptrh	equ	0xFF7
  3217                           tblptrl	equ	0xFF6
  3218                           tablat	equ	0xFF5
  3219                           prodh	equ	0xFF4
  3220                           prodl	equ	0xFF3
  3221                           wreg	equ	0xFE8
  3222                           indf2	equ	0xFDF
  3223                           postinc2	equ	0xFDE
  3224                           postdec2	equ	0xFDD
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229 ;; *************** function _ADC_GetAdcValue *****************
  3230 ;; Defined at:
  3231 ;;		line 76 in file "../00-libfiles/adc.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;  var_adcChann    1    wreg     unsigned char 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  var_adcChann    1    6[COMRAM] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  2    2[COMRAM] unsigned int 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3245 ;;      Params:         2       0       0       0       0       0       0
  3246 ;;      Locals:         1       0       0       0       0       0       0
  3247 ;;      Temps:          2       0       0       0       0       0       0
  3248 ;;      Totals:         5       0       0       0       0       0       0
  3249 ;;Total ram usage:        5 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    1
  3252 ;; This function calls:
  3253 ;;		_DELAY_us
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text18
  3260  001390                     __ptext18:
  3261                           	opt stack 0
  3262  001390                     _ADC_GetAdcValue:
  3263                           	opt stack 29
  3264                           
  3265                           ;incstack = 0
  3266                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  3267  001390  6E07               	movwf	ADC_GetAdcValue@var_adcChannel_u8,c
  3268                           
  3269                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<2);
  3270  001392  4407               	rlncf	ADC_GetAdcValue@var_adcChannel_u8,w,c
  3271  001394  46E8               	rlncf	wreg,f,c
  3272  001396  0BFC               	andlw	252
  3273  001398  6EC2               	movwf	4034,c	;volatile
  3274                           
  3275                           ;adc.c: 80: ADON = 1;
  3276  00139A  80C2               	bsf	4034,0,c	;volatile
  3277                           
  3278                           ;adc.c: 81: DELAY_us(10);
  3279  00139C  0E00               	movlw	0
  3280  00139E  6E02               	movwf	DELAY_us@us_count+1,c
  3281  0013A0  0E0A               	movlw	10
  3282  0013A2  6E01               	movwf	DELAY_us@us_count,c
  3283  0013A4  EC16  F00A         	call	_DELAY_us	;wreg free
  3284                           
  3285                           ;adc.c: 83: GO=1;
  3286  0013A8  82C2               	bsf	4034,1,c	;volatile
  3287  0013AA                     l167:
  3288  0013AA  B2C2               	btfsc	4034,1,c	;volatile
  3289  0013AC  D7FE               	goto	l167
  3290                           
  3291                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  3292  0013AE  50C4               	movf	4036,w,c	;volatile
  3293  0013B0  6E06               	movwf	(??_ADC_GetAdcValue+1)& (0+255),c
  3294  0013B2  6A05               	clrf	??_ADC_GetAdcValue& (0+255),c
  3295  0013B4  50C3               	movf	4035,w,c	;volatile
  3296  0013B6  2405               	addwf	??_ADC_GetAdcValue,w,c
  3297  0013B8  6E03               	movwf	?_ADC_GetAdcValue,c
  3298  0013BA  0E00               	movlw	0
  3299  0013BC  2006               	addwfc	??_ADC_GetAdcValue+1,w,c
  3300  0013BE  6E04               	movwf	?_ADC_GetAdcValue+1,c
  3301  0013C0  0012               	return	
  3302  0013C2                     __end_of_ADC_GetAdcValue:
  3303                           	opt stack 0
  3304                           tblptru	equ	0xFF8
  3305                           tblptrh	equ	0xFF7
  3306                           tblptrl	equ	0xFF6
  3307                           tablat	equ	0xFF5
  3308                           prodh	equ	0xFF4
  3309                           prodl	equ	0xFF3
  3310                           wreg	equ	0xFE8
  3311                           indf2	equ	0xFDF
  3312                           postinc2	equ	0xFDE
  3313                           postdec2	equ	0xFDD
  3314                           fsr2h	equ	0xFDA
  3315                           fsr2l	equ	0xFD9
  3316                           status	equ	0xFD8
  3317                           
  3318 ;; *************** function _DELAY_us *****************
  3319 ;; Defined at:
  3320 ;;		line 56 in file "../00-libfiles/delay.c"
  3321 ;; Parameters:    Size  Location     Type
  3322 ;;  us_count        2    0[COMRAM] unsigned int 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  1    wreg      void 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3334 ;;      Params:         2       0       0       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0       0       0
  3336 ;;      Temps:          0       0       0       0       0       0       0
  3337 ;;      Totals:         2       0       0       0       0       0       0
  3338 ;;Total ram usage:        2 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		_ADC_GetAdcValue
  3344 ;;		_DELAY_ms
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           	psect	text19
  3349  00142C                     __ptext19:
  3350                           	opt stack 0
  3351  00142C                     _DELAY_us:
  3352                           	opt stack 29
  3353                           
  3354                           ;delay.c: 58: while (us_count != 0)
  3355                           
  3356                           ;incstack = 0
  3357  00142C  D003               	goto	l1700
  3358  00142E                     l1698:
  3359                           
  3360                           ;delay.c: 59: {
  3361                           ;delay.c: 60: us_count--;
  3362  00142E  0601               	decf	DELAY_us@us_count,f,c
  3363  001430  A0D8               	btfss	status,0,c
  3364  001432  0602               	decf	DELAY_us@us_count+1,f,c
  3365  001434                     l1700:
  3366  001434  5001               	movf	DELAY_us@us_count,w,c
  3367  001436  1002               	iorwf	DELAY_us@us_count+1,w,c
  3368  001438  B4D8               	btfsc	status,2,c
  3369  00143A  0012               	return	
  3370  00143C  D7F8               	goto	l1698
  3371  00143E                     __end_of_DELAY_us:
  3372                           	opt stack 0
  3373                           tblptru	equ	0xFF8
  3374                           tblptrh	equ	0xFF7
  3375                           tblptrl	equ	0xFF6
  3376                           tablat	equ	0xFF5
  3377                           prodh	equ	0xFF4
  3378                           prodl	equ	0xFF3
  3379                           wreg	equ	0xFE8
  3380                           indf2	equ	0xFDF
  3381                           postinc2	equ	0xFDE
  3382                           postdec2	equ	0xFDD
  3383                           fsr2h	equ	0xFDA
  3384                           fsr2l	equ	0xFD9
  3385                           status	equ	0xFD8
  3386                           tblptru	equ	0xFF8
  3387                           tblptrh	equ	0xFF7
  3388                           tblptrl	equ	0xFF6
  3389                           tablat	equ	0xFF5
  3390                           prodh	equ	0xFF4
  3391                           prodl	equ	0xFF3
  3392                           wreg	equ	0xFE8
  3393                           indf2	equ	0xFDF
  3394                           postinc2	equ	0xFDE
  3395                           postdec2	equ	0xFDD
  3396                           fsr2h	equ	0xFDA
  3397                           fsr2l	equ	0xFD9
  3398                           status	equ	0xFD8
  3399                           
  3400                           	psect	rparam
  3401  0000                     tblptru	equ	0xFF8
  3402                           tblptrh	equ	0xFF7
  3403                           tblptrl	equ	0xFF6
  3404                           tablat	equ	0xFF5
  3405                           prodh	equ	0xFF4
  3406                           prodl	equ	0xFF3
  3407                           wreg	equ	0xFE8
  3408                           indf2	equ	0xFDF
  3409                           postinc2	equ	0xFDE
  3410                           postdec2	equ	0xFDD
  3411                           fsr2h	equ	0xFDA
  3412                           fsr2l	equ	0xFD9
  3413                           status	equ	0xFD8


Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     85      85
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(2) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_1(CODE[40]), 

    UART_Printf@ptr	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_1(CODE[40]), 

    UART_Printf@argp	PTR void [1] size(2) Largest target is 1
		 -> ?_UART_Printf(COMRAM[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_UART_Printf
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->_UART_TxNumber
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___awtoft
    ___ftadd->___ftneg
    _UART_TxNumber->___lldiv
    _UART_Init->_UART_SetBaudRate
    _UART_SetBaudRate->___lldiv
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   24087
                                             80 COMRAM     5     5      0
                    _ADC_GetAdcValue
                           _ADC_Init
                          _UART_Init
                        _UART_Printf
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2619
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2264
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         30    23      7   15384
                                             50 COMRAM    30    23      7
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2     131
                                              1 COMRAM     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   7     4      3   11528
                                             43 COMRAM     7     4      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2242
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     380
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             17 COMRAM     3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2793
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3281
                                             20 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2109
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       30    25      5    2502
                                             13 COMRAM    30    25      5
                        _UART_TxChar
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     786
                                             22 COMRAM     4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                     9     5      4     700
                                             13 COMRAM     9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     546
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      5     3      2     173
                                              2 COMRAM     5     3      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     151
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___lldiv
     _UART_TxString
       _UART_TxChar
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     55      55       1       66.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 13 19:53:10 2016

                                     l39 1440                                       l95 06A2  
                                     _GO 007E11                              __CFG_BORV$2 000000  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                            __CFG_OSC$HS 000000                             ___ftadd@exp1 0020  
                           ___ftadd@exp2 001F                             ___ftadd@sign 001E  
                                    l167 13AA                                      l432 0BA4  
                                    l409 114C                                      l436 0BCE  
                                    l534 1274                                      l447 0C7E  
                                    l456 0C9A                                      l467 0FA8  
                                    l489 13FC                             __CFG_CPB$OFF 000000  
                           __CFG_CPD$OFF 000000                                      prod 000FF3  
                                    wreg 000FE8                  __end_of_ADC_GetAdcValue 13C2  
                           __CFG_LVP$OFF 000000                             ___ftdiv@cntr 0025  
                           ___ftdiv@sign 002A                             __CFG_WDT$OFF 000000  
                                   l1400 1142                                     l1422 1226  
                                   l1502 0BDC                                     l1424 1232  
                                   l1434 1266                                     l1426 1236  
                                   l1450 0A06                                     l1530 0C4A  
                                   l1700 1434                                     l1444 09A0  
                                   l1452 0A0E                                     l1524 0C2E  
                                   l1470 0AAC                                     l1390 10E6  
                                   l1526 0C38                                     l1518 0C0C  
                                   l1480 0B1E                                     l1472 0AC0  
                                   l1464 0A9E                                     l1456 0A22  
                                   l1392 1104                                     l1384 10CE  
                                   l1544 0CB6                                     l1536 0C6C  
                                   l1528 0C42                                     l1616 0D38  
                                   l1458 0A28                                     l1474 0AC2  
                                   l1554 0CE6                                     l1538 0C76  
                                   l1570 0E50                                     l1634 0D9E  
                                   l1722 0676                                     l1476 0ACC  
                                   l1396 111A                                     l1388 10DC  
                                   l1564 0E28                                     l1652 0DEE  
                                   l1644 0DC6                                     l1660 130E  
                                   l1812 08E6                                     l1804 089C  
                                   l1732 06A6                                     l1708 063C  
                                   l1486 0B58                                     l1398 1138  
                                   l1646 0DD2                                     l1638 0DAE  
                                   l1806 08B8                                     l1750 070A  
                                   l1822 0914                                     l1672 12F2  
                                   l1496 0BB2                                     l1584 0E82  
                                   l1648 0DD8                                     l1760 0744  
                                   l1728 0694                                     l1824 0972  
                                   l1904 136C                                     l1594 0EAA  
                                   l1658 1302                                     l1682 13D6  
                                   l1818 090C                                     l1762 0760  
                                   l1738 06C2                                     l1826 0978  
                                   l1588 0E92                                     l1780 07FC  
                                   l1748 06EC                                     l1828 097C  
                                   l1940 1184                                     l1598 0EBA  
                                   l1678 13C4                                     l1774 07CC  
                                   l1862 0F44                                     l1768 0790  
                                   l1856 0F1C                                     l1698 142E  
                                   l1794 085A                                     l1786 0838  
                                   l1882 0F82                                     l1796 0872  
                                   _ADON 007E10                                     STR_1 0601  
                                   u1050 09F8                                     u1060 09FA  
                                   u1044 09BA                                     u1045 09B4  
                                   u1151 0B70                                     u1161 0B84  
                                   u1431 0D1C                                     u1520 1298  
                                   u1361 0E10                                     u1450 0D56  
                                   u1381 0E38                                     u1455 0D4E  
                                   u1711 0F2C                                     u1545 12CC  
                                   u1691 0F04                                     _RCIF 007CF5  
                                   _TXIF 007CF4                       _UART_TxFloatNumber 0FDA  
                                   _main 116C                             ___ftpack@arg 0001  
                           ___ftpack@exp 0004                                     fsr2h 000FDA  
                                   indf2 000FDF                                     fsr2l 000FD9  
                       __end_of_ADC_Init 145A                             main@adcValue 0054  
                                   prodl 000FF3                                     start 0000  
                          __CFG_IESO$OFF 000000                         __end_of_DELAY_us 143E  
                    ?_UART_TxFloatNumber 002C                            __CFG_MCLRE$ON 000000  
                           ___ftmul@cntr 001A                             ___param_bank 000010  
                           ___ftmul@sign 001B      UART_TxFloatNumber@v_floatNumber_f32 002C  
                           ___fttol@exp1 002A                             ___fttol@lval 0026  
                                  ?_main 0001                          __end_of___ftadd 0D0C  
                        __end_of___ftdiv 0FDA                          __end_of___ftneg 140A  
                        __end_of___lldiv 1286                          __end_of___ftmul 0EF4  
                        __end_of___fttol 0E00                                    _RCREG 000FAE  
                                  _RCSTA 000FAB                                    _SPBRG 000FAF  
                                  _TRISC 000F94                                    _TXREG 000FAD  
                                  _TXSTA 000FAC                            __CFG_PWRT$OFF 000000  
                          __CFG_WRT0$OFF 000000                            __CFG_WRT1$OFF 000000  
                          __CFG_WRT2$OFF 000000                            __CFG_WRT3$OFF 000000  
                   ??_UART_TxFloatNumber 002F                             ___lltoft@exp 0011  
                         __CFG_EBTR0$OFF 000000                           __CFG_FCMEN$OFF 000000  
                         __CFG_EBTR1$OFF 000000                           __CFG_EBTR2$OFF 000000  
                         __CFG_EBTR3$OFF 000000                       __size_of_UART_Init 0022  
                          __CFG_WRTB$OFF 000000                            __CFG_WRTC$OFF 000000  
                          __CFG_WRTD$OFF 000000                           __CFG_EBTRB$OFF 000000  
                          ___awtoft@sign 000C                            ___ftpack@sign 0005  
                         __CFG_BOREN$OFF 000000                                    tablat 000FF5  
                                  status 000FD8                          __initialization 145A  
                           __end_of_main 1204                                   ??_main 0051  
                          ___fttol@sign1 0025                            __activetblptr 000002  
                       ?_ADC_GetAdcValue 0003                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                       __end_of___awtoft 1390                         __end_of___ftpack 116C  
                       __end_of___lltoft 1358                        ?_UART_SetBaudRate 000E  
                     ??_UART_SetBaudRate 0012                             ?_UART_TxChar 0001  
                           ?_UART_Printf 0033                           __CFG_XINST$OFF 000000  
                      __end_of_UART_Init 142C                                ??___ftadd 001B  
                              ??___ftdiv 0022                                ??___ftneg 0015  
                              ??___lldiv 0009                                ??___ftmul 0013  
                              ??___fttol 0020  UART_TxNumber@v_numOfDigitsToTransmit_u8 0012  
                  ___ftmul@f3_as_product 0017                                ?_ADC_Init 0001  
                           __mediumconst 0000                                   tblptrh 000FF7  
                                 tblptrl 000FF6                                   tblptru 000FF8  
                              ?_DELAY_us 0001                               __accesstop 0080  
                __end_of__initialization 145A                          __CFG_PBADEN$OFF 000000  
                             ___ftadd@f1 0015                               ___ftadd@f2 0018  
                  __end_of_UART_TxNumber 0B60                            ___rparam_used 000001  
                             ___ftdiv@f1 001C                               ___ftdiv@f2 001F  
                             ___ftdiv@f3 0026                    __end_of_UART_TxString 13E6  
              UART_Printf@v_floatNum_f32 003A                               ___ftneg@f1 0012  
                             ___awtoft@c 0009                               ___ftmul@f1 000D  
                             ___ftmul@f2 0010                               ___fttol@f1 001C  
                         __pcstackCOMRAM 0001                               ___lltoft@c 0009  
      UART_TxFloatNumber@v_decNumber_u32 002F                               ??_ADC_Init 0001  
                             ??_DELAY_us 0003                                ?___awtoft 0009  
                              ?___ftpack 0001                                ?___lltoft 0009  
                                _GO_DONE 007E11                         DELAY_us@us_count 0001  
                                __Hparam 0000                                  __Lparam 0000  
                   __size_of_UART_TxChar 000E                     __size_of_UART_Printf 0366  
                                ___ftadd 0B60                                  ___ftdiv 0EF4  
                                ___ftneg 13E6                                  ___lldiv 1204  
                                ___ftmul 0E00                                  ___fttol 0D0C  
                           __psmallconst 0600                          __CFG_STVREN$OFF 000000  
                                __pcinit 145A                               ??___awtoft 000C  
                             ??___ftpack 0006                                  __ramtop 0600  
                             ??___lltoft 000D                                  __ptext0 116C  
                                __ptext1 0EF4                                  __ptext2 1358  
                                __ptext3 062A                                  __ptext4 13C2  
                                __ptext5 0FDA                                  __ptext6 12FC  
                                __ptext7 0D0C                                  __ptext8 13E6  
                                __ptext9 0E00              __size_of_UART_TxFloatNumber 00E4  
                         UART_Printf@ptr 004B                           UART_Printf@str 003D  
                   end_of_initialization 145A                           UART_TxNumber@a 001E  
                         UART_TxNumber@i 002B                            __Lmediumconst 0000  
                        ___lldiv@divisor 0005                          ___lldiv@counter 000D  
         UART_SetBaudRate@v_baudRate_u32 000E                                  postdec2 000FDD  
                                postinc2 000FDE                                _UART_Init 140A  
              __size_of_UART_SetBaudRate 0076         ADC_GetAdcValue@var_adcChannel_u8 0007  
                      __size_of_ADC_Init 000E                        __size_of_DELAY_us 0012  
                            ___ftdiv@exp 0029                 __size_of_ADC_GetAdcValue 0032  
        UART_TxNumber@v_numericSystem_u8 002A                              ___ftmul@exp 0016  
                             ?_UART_Init 0017                      start_initialization 145A  
                       __CFG_LPT1OSC$OFF 000000                        __size_of___awtoft 0038  
                      __size_of___ftpack 00AE                   __size_of_UART_TxNumber 01D0  
                      __size_of___lltoft 005C                   __size_of_UART_TxString 0024  
                      __CFG_CCP2MX$PORTC 000000                                 ?___ftadd 0015  
                               ?___ftdiv 001C                                 ?___ftneg 0012  
                               ?___lldiv 0001                        ??_ADC_GetAdcValue 0005  
                               ?___ftmul 000D                                 ?___fttol 001C  
                            ??_UART_Init 001B                         _UART_SetBaudRate 1286  
                            __smallconst 0600                                 _ADC_Init 144C  
                               _DELAY_us 142C                            UART_Printf@ch 004D  
                          ??_UART_TxChar 0001                            _UART_TxNumber 0990  
                          ??_UART_Printf 003A                            _UART_TxString 13C2  
                       __CFG_WDTPS$32768 000000                  UART_Init@v_baudRate_u32 0017  
                UART_TxString@ptr_string 0002               __end_of_UART_TxFloatNumber 10BE  
              UART_TxNumber@v_number_u32 000E                           ?_UART_TxNumber 000E  
                         ?_UART_TxString 0002                                 __Hrparam 0000  
               UART_TxChar@v_uartData_u8 0001                                 __Lrparam 0000  
                       _UART_TxNumber$65 0028                      __end_of_UART_TxChar 144C  
                       __size_of___ftadd 01AC                         __size_of___ftdiv 00E6  
                       __size_of___ftneg 0024                         __size_of___lldiv 0082  
                       __size_of___ftmul 00F4                         __size_of___fttol 00F4  
                    __end_of_UART_Printf 0990                                 ___awtoft 1358  
                               ___ftpack 10BE                                 ___lltoft 12FC  
                               __ptext10 0B60                                 __ptext11 10BE  
                               __ptext12 0990                                 __ptext13 143E  
                               __ptext14 140A                                 __ptext15 1286  
                               __ptext16 1204                                 __ptext17 144C  
                               __ptext18 1390                                 __ptext19 142C  
                          __size_of_main 0098                          UART_Printf@argp 004F  
               UART_SetBaudRate@RegValue 0016                                 main@volt 0051  
                        ??_UART_TxNumber 0013                 __end_of_UART_SetBaudRate 12FC  
                        _ADC_GetAdcValue 1390                          ??_UART_TxString 0004  
                       ___lldiv@dividend 0001                              _UART_TxChar 143E  
                            _UART_Printf 062A                         ___lldiv@quotient 0009  
  UART_Printf@v_numOfDigitsToTransmit_u8 004E                       UART_Printf@argList 0033  
                   UART_Printf@v_num_s16 0043                     UART_Printf@v_num_s32 003F  
                   UART_Printf@v_num_u16 0049                     UART_Printf@v_num_u32 0045  
