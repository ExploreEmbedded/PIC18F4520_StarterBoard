

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 13 19:59:09 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27  0000                     _EEADR	set	4009
    28  0000                     _EECON1	set	4006
    29  0000                     _EECON2	set	4007
    30  0000                     _EEDATA	set	4008
    31  0000                     _RCREG	set	4014
    32  0000                     _RCSTA	set	4011
    33  0000                     _SPBRG	set	4015
    34  0000                     _TRISC	set	3988
    35  0000                     _TXREG	set	4013
    36  0000                     _TXSTA	set	4012
    37  0000                     _GIE	set	32663
    38  0000                     _RCIF	set	31989
    39  0000                     _TXIF	set	31988
    40                           
    41                           	psect	smallconst
    42  000600                     __psmallconst:
    43                           	opt stack 0
    44  000600  00                 	db	0
    45  000601                     STR_1:
    46  000601  0A                 	db	10
    47  000602  0D                 	db	13
    48  000603  45                 	db	69	;'E'
    49  000604  65                 	db	101	;'e'
    50  000605  70                 	db	112	;'p'
    51  000606  72                 	db	114	;'r'
    52  000607  6F                 	db	111	;'o'
    53  000608  6D                 	db	109	;'m'
    54  000609  20                 	db	32
    55  00060A  57                 	db	87	;'W'
    56  00060B  72                 	db	114	;'r'
    57  00060C  69                 	db	105	;'i'
    58  00060D  74                 	db	116	;'t'
    59  00060E  65                 	db	101	;'e'
    60  00060F  3A                 	db	58	;':'
    61  000610  20                 	db	32
    62  000611  25                 	db	37
    63  000612  63                 	db	99	;'c'
    64  000613  20                 	db	32
    65  000614  20                 	db	32
    66  000615  20                 	db	32
    67  000616  20                 	db	32
    68  000617  00                 	db	0
    69  000618                     STR_2:
    70  000618  45                 	db	69	;'E'
    71  000619  65                 	db	101	;'e'
    72  00061A  70                 	db	112	;'p'
    73  00061B  72                 	db	114	;'r'
    74  00061C  6F                 	db	111	;'o'
    75  00061D  6D                 	db	109	;'m'
    76  00061E  20                 	db	32
    77  00061F  52                 	db	82	;'R'
    78  000620  65                 	db	101	;'e'
    79  000621  61                 	db	97	;'a'
    80  000622  64                 	db	100	;'d'
    81  000623  3A                 	db	58	;':'
    82  000624  20                 	db	32
    83  000625  25                 	db	37
    84  000626  63                 	db	99	;'c'
    85  000627  00                 	db	0
    86                           
    87                           ; #config settings
    88  000628  00                 	db	0	; dummy byte at the end
    89  0000                     
    90                           	psect	cinit
    91  0012F8                     __pcinit:
    92                           	opt stack 0
    93  0012F8                     start_initialization:
    94                           	opt stack 0
    95  0012F8                     __initialization:
    96                           	opt stack 0
    97  0012F8                     end_of_initialization:
    98                           	opt stack 0
    99  0012F8                     __end_of__initialization:
   100                           	opt stack 0
   101  0012F8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   102  0012FA  6EF8               	movwf	tblptru,c
   103  0012FC  0100               	movlb	0
   104  0012FE  EFBF  F008         	goto	_main	;jump to C main() function
   105                           tblptru	equ	0xFF8
   106                           
   107                           	psect	cstackCOMRAM
   108  000001                     __pcstackCOMRAM:
   109                           	opt stack 0
   110  000001                     ?___ftpack:
   111                           	opt stack 0
   112  000001                     ?___lldiv:
   113                           	opt stack 0
   114  000001                     UART_TxChar@v_uartData_u8:
   115                           	opt stack 0
   116  000001                     EEPROM_WriteByte@v_eepromAddress_u16:
   117                           	opt stack 0
   118  000001                     EEPROM_ReadByte@v_eepromAddress_u16:
   119                           	opt stack 0
   120  000001                     ___ftpack@arg:
   121                           	opt stack 0
   122  000001                     ___lldiv@dividend:
   123                           	opt stack 0
   124                           
   125                           ; 4 bytes @ 0x0
   126  000001                     	ds	1
   127  000002                     UART_TxString@ptr_string:
   128                           	opt stack 0
   129                           
   130                           ; 2 bytes @ 0x1
   131  000002                     	ds	1
   132  000003                     EEPROM_WriteByte@v_eepromData_u8:
   133                           	opt stack 0
   134                           
   135                           ; 1 bytes @ 0x2
   136  000003                     	ds	1
   137  000004                     EEPROM_WriteByte@gie_value:
   138                           	opt stack 0
   139  000004                     ___ftpack@exp:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x3
   143  000004                     	ds	1
   144  000005                     ___ftpack@sign:
   145                           	opt stack 0
   146  000005                     ___lldiv@divisor:
   147                           	opt stack 0
   148                           
   149                           ; 4 bytes @ 0x4
   150  000005                     	ds	1
   151  000006                     ??___ftpack:
   152                           
   153                           ; 1 bytes @ 0x5
   154  000006                     	ds	3
   155  000009                     ?___ftmul:
   156                           	opt stack 0
   157  000009                     ?___lltoft:
   158                           	opt stack 0
   159  000009                     ___ftmul@f1:
   160                           	opt stack 0
   161  000009                     ___lldiv@quotient:
   162                           	opt stack 0
   163  000009                     ___lltoft@c:
   164                           	opt stack 0
   165                           
   166                           ; 4 bytes @ 0x8
   167  000009                     	ds	3
   168  00000C                     ___ftmul@f2:
   169                           	opt stack 0
   170                           
   171                           ; 3 bytes @ 0xB
   172  00000C                     	ds	1
   173  00000D                     ??___lltoft:
   174  00000D                     ___lldiv@counter:
   175                           	opt stack 0
   176                           
   177                           ; 1 bytes @ 0xC
   178  00000D                     	ds	1
   179  00000E                     UART_SetBaudRate@v_baudRate_u32:
   180                           	opt stack 0
   181  00000E                     UART_TxNumber@v_number_u32:
   182                           	opt stack 0
   183                           
   184                           ; 4 bytes @ 0xD
   185  00000E                     	ds	1
   186  00000F                     ??___ftmul:
   187                           
   188                           ; 1 bytes @ 0xE
   189  00000F                     	ds	2
   190  000011                     ___lltoft@exp:
   191                           	opt stack 0
   192                           
   193                           ; 1 bytes @ 0x10
   194  000011                     	ds	1
   195  000012                     ??_UART_SetBaudRate:
   196  000012                     ?___ftneg:
   197                           	opt stack 0
   198  000012                     UART_TxNumber@v_numOfDigitsToTransmit_u8:
   199                           	opt stack 0
   200  000012                     ___ftmul@exp:
   201                           	opt stack 0
   202  000012                     ___ftneg@f1:
   203                           	opt stack 0
   204                           
   205                           ; 3 bytes @ 0x11
   206  000012                     	ds	1
   207  000013                     ??_UART_TxNumber:
   208  000013                     ___ftmul@f3_as_product:
   209                           	opt stack 0
   210                           
   211                           ; 3 bytes @ 0x12
   212  000013                     	ds	2
   213  000015                     ?___ftadd:
   214                           	opt stack 0
   215  000015                     ___ftadd@f1:
   216                           	opt stack 0
   217                           
   218                           ; 3 bytes @ 0x14
   219  000015                     	ds	1
   220  000016                     UART_SetBaudRate@RegValue:
   221                           	opt stack 0
   222  000016                     ___ftmul@cntr:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x15
   226  000016                     	ds	1
   227  000017                     ___ftmul@sign:
   228                           	opt stack 0
   229  000017                     UART_Init@v_baudRate_u32:
   230                           	opt stack 0
   231                           
   232                           ; 4 bytes @ 0x16
   233  000017                     	ds	1
   234  000018                     ?___fttol:
   235                           	opt stack 0
   236  000018                     ___ftadd@f2:
   237                           	opt stack 0
   238  000018                     ___fttol@f1:
   239                           	opt stack 0
   240                           
   241                           ; 3 bytes @ 0x17
   242  000018                     	ds	3
   243  00001B                     ??___ftadd:
   244  00001B                     
   245                           ; 1 bytes @ 0x1A
   246  00001B                     	ds	1
   247  00001C                     ??___fttol:
   248                           
   249                           ; 1 bytes @ 0x1B
   250  00001C                     	ds	2
   251  00001E                     ___ftadd@sign:
   252                           	opt stack 0
   253  00001E                     UART_TxNumber@a:
   254                           	opt stack 0
   255                           
   256                           ; 10 bytes @ 0x1D
   257  00001E                     	ds	1
   258  00001F                     ___ftadd@exp2:
   259                           	opt stack 0
   260                           
   261                           ; 1 bytes @ 0x1E
   262  00001F                     	ds	1
   263  000020                     ___ftadd@exp1:
   264                           	opt stack 0
   265                           
   266                           ; 1 bytes @ 0x1F
   267  000020                     	ds	1
   268  000021                     ___fttol@sign1:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x20
   272  000021                     	ds	1
   273  000022                     ___fttol@lval:
   274                           	opt stack 0
   275                           
   276                           ; 4 bytes @ 0x21
   277  000022                     	ds	4
   278  000026                     ___fttol@exp1:
   279                           	opt stack 0
   280                           
   281                           ; 1 bytes @ 0x25
   282  000026                     	ds	2
   283  000028                     _UART_TxNumber$76:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x27
   287  000028                     	ds	2
   288  00002A                     UART_TxNumber@v_numericSystem_u8:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x29
   292  00002A                     	ds	1
   293  00002B                     UART_TxNumber@i:
   294                           	opt stack 0
   295                           
   296                           ; 1 bytes @ 0x2A
   297  00002B                     	ds	1
   298  00002C                     UART_TxFloatNumber@v_floatNumber_f32:
   299                           	opt stack 0
   300                           
   301                           ; 3 bytes @ 0x2B
   302  00002C                     	ds	3
   303  00002F                     UART_TxFloatNumber@v_decNumber_u32:
   304                           	opt stack 0
   305                           
   306                           ; 4 bytes @ 0x2E
   307  00002F                     	ds	4
   308  000033                     ?_UART_Printf:
   309                           	opt stack 0
   310  000033                     UART_Printf@argList:
   311                           	opt stack 0
   312                           
   313                           ; 2 bytes @ 0x32
   314  000033                     	ds	4
   315  000037                     UART_Printf@v_floatNum_f32:
   316                           	opt stack 0
   317                           
   318                           ; 3 bytes @ 0x36
   319  000037                     	ds	3
   320  00003A                     UART_Printf@str:
   321                           	opt stack 0
   322                           
   323                           ; 2 bytes @ 0x39
   324  00003A                     	ds	2
   325  00003C                     UART_Printf@v_num_s32:
   326                           	opt stack 0
   327                           
   328                           ; 4 bytes @ 0x3B
   329  00003C                     	ds	4
   330  000040                     UART_Printf@v_num_s16:
   331                           	opt stack 0
   332                           
   333                           ; 2 bytes @ 0x3F
   334  000040                     	ds	2
   335  000042                     UART_Printf@v_num_u32:
   336                           	opt stack 0
   337                           
   338                           ; 4 bytes @ 0x41
   339  000042                     	ds	4
   340  000046                     UART_Printf@v_num_u16:
   341                           	opt stack 0
   342                           
   343                           ; 2 bytes @ 0x45
   344  000046                     	ds	2
   345  000048                     UART_Printf@ptr:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x47
   349  000048                     	ds	2
   350  00004A                     UART_Printf@ch:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x49
   354  00004A                     	ds	1
   355  00004B                     UART_Printf@v_numOfDigitsToTransmit_u8:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x4A
   359  00004B                     	ds	1
   360  00004C                     UART_Printf@argp:
   361                           	opt stack 0
   362                           
   363                           ; 2 bytes @ 0x4B
   364  00004C                     	ds	2
   365  00004E                     main@read_char:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x4D
   369  00004E                     	ds	1
   370  00004F                     main@eeprom_address:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x4E
   374  00004F                     	ds	1
   375  000050                     main@write_char:
   376                           	opt stack 0
   377                           
   378                           ; 1 bytes @ 0x4F
   379  000050                     	ds	1
   380                           tblptru	equ	0xFF8
   381                           
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 42 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  write_char      1   79[COMRAM] unsigned char 
   392 ;;  eeprom_addre    1   78[COMRAM] unsigned char 
   393 ;;  read_char       1   77[COMRAM] unsigned char 
   394 ;; Return value:  Size  Location     Type
   395 ;;                  2  175[None  ] int 
   396 ;; Registers used:
   397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   403 ;;      Params:         0       0       0       0       0       0       0
   404 ;;      Locals:         3       0       0       0       0       0       0
   405 ;;      Temps:          0       0       0       0       0       0       0
   406 ;;      Totals:         3       0       0       0       0       0       0
   407 ;;Total ram usage:        3 bytes
   408 ;; Hardware stack levels required when called:    4
   409 ;; This function calls:
   410 ;;		_EEPROM_ReadByte
   411 ;;		_EEPROM_WriteByte
   412 ;;		_UART_Init
   413 ;;		_UART_Printf
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text0
   420  00117E                     __ptext0:
   421                           	opt stack 0
   422  00117E                     _main:
   423                           	opt stack 27
   424                           
   425                           ;main.c: 44: unsigned char eeprom_address = 0x00, write_char = 'A', read_char;
   426                           
   427                           ;incstack = 0
   428  00117E  0E00               	movlw	0
   429  001180  6E4F               	movwf	main@eeprom_address,c
   430  001182  0E41               	movlw	65
   431  001184  6E50               	movwf	main@write_char,c
   432                           
   433                           ;main.c: 46: UART_Init(9600);
   434  001186  0E80               	movlw	128
   435  001188  6E17               	movwf	UART_Init@v_baudRate_u32,c
   436  00118A  0E25               	movlw	37
   437  00118C  6E18               	movwf	UART_Init@v_baudRate_u32+1,c
   438  00118E  0E00               	movlw	0
   439  001190  6E19               	movwf	UART_Init@v_baudRate_u32+2,c
   440  001192  0E00               	movlw	0
   441  001194  6E1A               	movwf	UART_Init@v_baudRate_u32+3,c
   442  001196  EC5C  F009         	call	_UART_Init	;wreg free
   443                           
   444                           ;main.c: 48: while(write_char<='Z')
   445  00119A  D020               	goto	l1842
   446  00119C                     l1834:
   447                           
   448                           ;main.c: 49: {
   449                           ;main.c: 50: UART_Printf("\n\rEeprom Write: %c    ",write_char);
   450  00119C  0E01               	movlw	low STR_1
   451  00119E  6E33               	movwf	UART_Printf@argList,c
   452  0011A0  0E06               	movlw	high STR_1
   453  0011A2  6E34               	movwf	UART_Printf@argList+1,c
   454  0011A4  C050  F035         	movff	main@write_char,?_UART_Printf+2
   455  0011A8  6A36               	clrf	?_UART_Printf+3,c
   456  0011AA  EC15  F003         	call	_UART_Printf	;wreg free
   457                           
   458                           ;main.c: 51: EEPROM_WriteByte(eeprom_address, write_char);
   459  0011AE  C04F  F001         	movff	main@eeprom_address,EEPROM_WriteByte@v_eepromAddress_u16
   460  0011B2  6A02               	clrf	EEPROM_WriteByte@v_eepromAddress_u16+1,c
   461  0011B4  C050  F003         	movff	main@write_char,EEPROM_WriteByte@v_eepromData_u8
   462  0011B8  EC20  F009         	call	_EEPROM_WriteByte	;wreg free
   463                           
   464                           ;main.c: 54: read_char = EEPROM_ReadByte(eeprom_address);
   465  0011BC  C04F  F001         	movff	main@eeprom_address,EEPROM_ReadByte@v_eepromAddress_u16
   466  0011C0  6A02               	clrf	EEPROM_ReadByte@v_eepromAddress_u16+1,c
   467  0011C2  EC6D  F009         	call	_EEPROM_ReadByte	;wreg free
   468  0011C6  6E4E               	movwf	main@read_char,c
   469                           
   470                           ;main.c: 55: UART_Printf("Eeprom Read: %c",read_char);
   471  0011C8  0E18               	movlw	low STR_2
   472  0011CA  6E33               	movwf	UART_Printf@argList,c
   473  0011CC  0E06               	movlw	high STR_2
   474  0011CE  6E34               	movwf	UART_Printf@argList+1,c
   475  0011D0  C04E  F035         	movff	main@read_char,?_UART_Printf+2
   476  0011D4  6A36               	clrf	?_UART_Printf+3,c
   477  0011D6  EC15  F003         	call	_UART_Printf	;wreg free
   478                           
   479                           ;main.c: 57: write_char++;
   480  0011DA  2A50               	incf	main@write_char,f,c
   481  0011DC                     l1842:
   482  0011DC  0E5A               	movlw	90
   483  0011DE  6450               	cpfsgt	main@write_char,c
   484  0011E0  D7DD               	goto	l1834
   485  0011E2                     l179:
   486  0011E2  D7FF               	goto	l179
   487  0011E4                     __end_of_main:
   488                           	opt stack 0
   489                           tblptru	equ	0xFF8
   490                           
   491 ;; *************** function _UART_Printf *****************
   492 ;; Defined at:
   493 ;;		line 413 in file "../00-libfiles/uart.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;  argList         2   50[COMRAM] PTR const unsigned char 
   496 ;;		 -> STR_2(16), STR_1(23), 
   497 ;; Auto vars:     Size  Location     Type
   498 ;;  v_num_u32       4   65[COMRAM] unsigned long 
   499 ;;  v_num_s32       4   59[COMRAM] long 
   500 ;;  v_floatNum_f    3   54[COMRAM] long 
   501 ;;  argp            2   75[COMRAM] PTR void [1]
   502 ;;		 -> ?_UART_Printf(1), 
   503 ;;  ptr             2   71[COMRAM] PTR const unsigned char 
   504 ;;		 -> STR_2(16), STR_1(23), 
   505 ;;  v_num_u16       2   69[COMRAM] unsigned int 
   506 ;;  v_num_s16       2   63[COMRAM] int 
   507 ;;  str             2   57[COMRAM] PTR unsigned char 
   508 ;;  v_numOfDigit    1   74[COMRAM] unsigned char 
   509 ;;  ch              1   73[COMRAM] unsigned char 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   519 ;;      Params:         4       0       0       0       0       0       0
   520 ;;      Locals:        23       0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0
   522 ;;      Totals:        27       0       0       0       0       0       0
   523 ;;Total ram usage:       27 bytes
   524 ;; Hardware stack levels used:    1
   525 ;; Hardware stack levels required when called:    3
   526 ;; This function calls:
   527 ;;		_UART_TxChar
   528 ;;		_UART_TxFloatNumber
   529 ;;		_UART_TxNumber
   530 ;;		_UART_TxString
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text1
   537  00062A                     __ptext1:
   538                           	opt stack 0
   539  00062A                     _UART_Printf:
   540                           	opt stack 27
   541                           
   542                           ;uart.c: 415: const char *ptr;
   543                           ;uart.c: 416: va_list argp;
   544                           ;uart.c: 417: sint16_t v_num_s16;
   545                           ;uart.c: 418: sint32_t v_num_s32;
   546                           ;uart.c: 419: uint16_t v_num_u16;
   547                           ;uart.c: 420: uint32_t v_num_u32;
   548                           ;uart.c: 421: char *str;
   549                           ;uart.c: 422: char ch;
   550                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
   551                           ;uart.c: 425: double v_floatNum_f32;
   552                           ;uart.c: 429: *argp = __va_start();
   553                           
   554                           ;incstack = 0
   555  00062A  0E35               	movlw	low (?_UART_Printf+2)
   556  00062C  6E4C               	movwf	UART_Printf@argp,c
   557  00062E  0E00               	movlw	high (?_UART_Printf+2)
   558  000630  6E4D               	movwf	UART_Printf@argp+1,c
   559                           
   560                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
   561  000632  C033  F048         	movff	UART_Printf@argList,UART_Printf@ptr
   562  000636  C034  F049         	movff	UART_Printf@argList+1,UART_Printf@ptr+1
   563  00063A  D1A0               	goto	l1808
   564  00063C                     l1688:
   565                           
   566                           ;uart.c: 433: {
   567                           ;uart.c: 435: ch= *ptr;
   568  00063C  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
   569  000640  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   570  000644                     	if	0	;tblptru may be non-zero
   571  000644                     	endif
   572  000644                     	if	0	;tblptru may be non-zero
   573  000644                     	endif
   574  000644  0008               	tblrd		*
   575  000646  CFF5 F04A          	movff	tablat,UART_Printf@ch
   576                           
   577                           ;uart.c: 436: if(ch == '%')
   578  00064A  0E25               	movlw	37
   579  00064C  184A               	xorwf	UART_Printf@ch,w,c
   580  00064E  A4D8               	btfss	status,2,c
   581  000650  D190               	goto	l1804
   582                           
   583                           ;uart.c: 437: {
   584                           ;uart.c: 438: ptr++;
   585  000652  4A48               	infsnz	UART_Printf@ptr,f,c
   586  000654  2A49               	incf	UART_Printf@ptr+1,f,c
   587                           
   588                           ;uart.c: 439: ch = *ptr;
   589  000656  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
   590  00065A  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   591  00065E                     	if	0	;tblptru may be non-zero
   592  00065E                     	endif
   593  00065E                     	if	0	;tblptru may be non-zero
   594  00065E                     	endif
   595  00065E  0008               	tblrd		*
   596  000660  CFF5 F04A          	movff	tablat,UART_Printf@ch
   597                           
   598                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
   599  000664  0E2F               	movlw	47
   600  000666  644A               	cpfsgt	UART_Printf@ch,c
   601  000668  D01C               	goto	l117
   602  00066A  0E3A               	movlw	58
   603  00066C  604A               	cpfslt	UART_Printf@ch,c
   604  00066E  D019               	goto	l117
   605                           
   606                           ;uart.c: 441: {
   607                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
   608  000670  0E00               	movlw	0
   609  000672  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   610                           
   611                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
   612  000674  D00F               	goto	l1708
   613  000676                     l1702:
   614                           
   615                           ;uart.c: 444: {
   616                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
   617  000676  504B               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   618  000678  0D0A               	mullw	10
   619  00067A  50F3               	movf	prodl,w,c
   620  00067C  244A               	addwf	UART_Printf@ch,w,c
   621  00067E  0FD0               	addlw	208
   622  000680  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   623                           
   624                           ;uart.c: 446: ptr++;
   625  000682  4A48               	infsnz	UART_Printf@ptr,f,c
   626  000684  2A49               	incf	UART_Printf@ptr+1,f,c
   627                           
   628                           ;uart.c: 447: ch = *ptr;
   629  000686  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
   630  00068A  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   631  00068E                     	if	0	;tblptru may be non-zero
   632  00068E                     	endif
   633  00068E                     	if	0	;tblptru may be non-zero
   634  00068E                     	endif
   635  00068E  0008               	tblrd		*
   636  000690  CFF5 F04A          	movff	tablat,UART_Printf@ch
   637  000694                     l1708:
   638  000694  0E2F               	movlw	47
   639  000696  644A               	cpfsgt	UART_Printf@ch,c
   640  000698  D13D               	goto	l1802
   641  00069A  0E39               	movlw	57
   642  00069C  644A               	cpfsgt	UART_Printf@ch,c
   643  00069E  D7EB               	goto	l1702
   644  0006A0  D139               	goto	l1802
   645  0006A2                     l117:
   646                           
   647                           ;uart.c: 450: else
   648                           ;uart.c: 451: {
   649                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
   650  0006A2  684B               	setf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   651                           
   652                           ;uart.c: 453: }
   653                           ;uart.c: 456: switch(ch)
   654  0006A4  D137               	goto	l1802
   655  0006A6                     l1712:
   656                           
   657                           ;uart.c: 459: case 'c':
   658                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
   659  0006A6  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   660  0006AA  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   661  0006AE  50DF               	movf	indf2,w,c
   662  0006B0  6E4A               	movwf	UART_Printf@ch,c
   663  0006B2  0E02               	movlw	2
   664  0006B4  264C               	addwf	UART_Printf@argp,f,c
   665  0006B6  0E00               	movlw	0
   666  0006B8  224D               	addwfc	UART_Printf@argp+1,f,c
   667                           
   668                           ;uart.c: 461: UART_TxChar(ch);
   669  0006BA  504A               	movf	UART_Printf@ch,w,c
   670  0006BC  EC75  F009         	call	_UART_TxChar
   671                           
   672                           ;uart.c: 462: break;
   673  0006C0  D15B               	goto	l1806
   674  0006C2                     l1718:
   675                           
   676                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   677  0006C2  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   678  0006C6  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   679  0006CA  CFDE F040          	movff	postinc2,UART_Printf@v_num_s16
   680  0006CE  CFDD F041          	movff	postdec2,UART_Printf@v_num_s16+1
   681  0006D2  0E02               	movlw	2
   682  0006D4  264C               	addwf	UART_Printf@argp,f,c
   683  0006D6  0E00               	movlw	0
   684  0006D8  224D               	addwfc	UART_Printf@argp+1,f,c
   685                           
   686                           ;uart.c: 466: if(v_num_s16<0)
   687  0006DA  AE41               	btfss	UART_Printf@v_num_s16+1,7,c
   688  0006DC  D007               	goto	l1728
   689                           
   690                           ;uart.c: 467: {
   691                           ;uart.c: 468: v_num_s16 = -v_num_s16;
   692  0006DE  6C40               	negf	UART_Printf@v_num_s16,c
   693  0006E0  1E41               	comf	UART_Printf@v_num_s16+1,f,c
   694  0006E2  B0D8               	btfsc	status,0,c
   695  0006E4  2A41               	incf	UART_Printf@v_num_s16+1,f,c
   696                           
   697                           ;uart.c: 469: UART_TxChar('-');
   698  0006E6  0E2D               	movlw	45
   699  0006E8  EC75  F009         	call	_UART_TxChar
   700  0006EC                     l1728:
   701                           
   702                           ;uart.c: 470: }
   703                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
   704  0006EC  C040  F00E         	movff	UART_Printf@v_num_s16,UART_TxNumber@v_number_u32
   705  0006F0  C041  F00F         	movff	UART_Printf@v_num_s16+1,UART_TxNumber@v_number_u32+1
   706  0006F4  0E00               	movlw	0
   707  0006F6  BE0F               	btfsc	UART_TxNumber@v_number_u32+1,7,c
   708  0006F8  0EFF               	movlw	-1
   709  0006FA  6E10               	movwf	UART_TxNumber@v_number_u32+2,c
   710  0006FC  6E11               	movwf	UART_TxNumber@v_number_u32+3,c
   711  0006FE  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   712  000702  0E0A               	movlw	10
   713  000704  ECC8  F004         	call	_UART_TxNumber
   714                           
   715                           ;uart.c: 472: break;
   716  000708  D137               	goto	l1806
   717  00070A                     l1730:
   718                           
   719                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   720  00070A  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   721  00070E  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   722  000712  CFDE F03C          	movff	postinc2,UART_Printf@v_num_s32
   723  000716  CFDE F03D          	movff	postinc2,UART_Printf@v_num_s32+1
   724  00071A  CFDE F03E          	movff	postinc2,UART_Printf@v_num_s32+2
   725  00071E  CFDE F03F          	movff	postinc2,UART_Printf@v_num_s32+3
   726  000722  0E04               	movlw	4
   727  000724  264C               	addwf	UART_Printf@argp,f,c
   728  000726  0E00               	movlw	0
   729  000728  224D               	addwfc	UART_Printf@argp+1,f,c
   730                           
   731                           ;uart.c: 476: if(v_num_s32<0)
   732  00072A  AE3F               	btfss	UART_Printf@v_num_s32+3,7,c
   733  00072C  D00B               	goto	l1740
   734                           
   735                           ;uart.c: 477: {
   736                           ;uart.c: 478: v_num_s32 = -v_num_s32;
   737  00072E  1E3F               	comf	UART_Printf@v_num_s32+3,f,c
   738  000730  1E3E               	comf	UART_Printf@v_num_s32+2,f,c
   739  000732  1E3D               	comf	UART_Printf@v_num_s32+1,f,c
   740  000734  6C3C               	negf	UART_Printf@v_num_s32,c
   741  000736  0E00               	movlw	0
   742  000738  223D               	addwfc	UART_Printf@v_num_s32+1,f,c
   743  00073A  223E               	addwfc	UART_Printf@v_num_s32+2,f,c
   744  00073C  223F               	addwfc	UART_Printf@v_num_s32+3,f,c
   745                           
   746                           ;uart.c: 479: UART_TxChar('-');
   747  00073E  0E2D               	movlw	45
   748  000740  EC75  F009         	call	_UART_TxChar
   749  000744                     l1740:
   750                           
   751                           ;uart.c: 480: }
   752                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
   753  000744  C03C  F00E         	movff	UART_Printf@v_num_s32,UART_TxNumber@v_number_u32
   754  000748  C03D  F00F         	movff	UART_Printf@v_num_s32+1,UART_TxNumber@v_number_u32+1
   755  00074C  C03E  F010         	movff	UART_Printf@v_num_s32+2,UART_TxNumber@v_number_u32+2
   756  000750  C03F  F011         	movff	UART_Printf@v_num_s32+3,UART_TxNumber@v_number_u32+3
   757  000754  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   758  000758  0E0A               	movlw	10
   759  00075A  ECC8  F004         	call	_UART_TxNumber
   760                           
   761                           ;uart.c: 482: break;
   762  00075E  D10C               	goto	l1806
   763  000760                     l1742:
   764                           
   765                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   766  000760  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   767  000764  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   768  000768  CFDE F046          	movff	postinc2,UART_Printf@v_num_u16
   769  00076C  CFDD F047          	movff	postdec2,UART_Printf@v_num_u16+1
   770  000770  0E02               	movlw	2
   771  000772  264C               	addwf	UART_Printf@argp,f,c
   772  000774  0E00               	movlw	0
   773  000776  224D               	addwfc	UART_Printf@argp+1,f,c
   774                           
   775                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
   776  000778  C046  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   777  00077C  C047  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   778  000780  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   779  000782  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   780  000784  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   781  000788  0E0A               	movlw	10
   782  00078A  ECC8  F004         	call	_UART_TxNumber
   783                           
   784                           ;uart.c: 487: break;
   785  00078E  D0F4               	goto	l1806
   786  000790                     l1748:
   787                           
   788                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   789  000790  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   790  000794  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   791  000798  CFDE F042          	movff	postinc2,UART_Printf@v_num_u32
   792  00079C  CFDE F043          	movff	postinc2,UART_Printf@v_num_u32+1
   793  0007A0  CFDE F044          	movff	postinc2,UART_Printf@v_num_u32+2
   794  0007A4  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32+3
   795  0007A8  0E04               	movlw	4
   796  0007AA  264C               	addwf	UART_Printf@argp,f,c
   797  0007AC  0E00               	movlw	0
   798  0007AE  224D               	addwfc	UART_Printf@argp+1,f,c
   799                           
   800                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
   801  0007B0  C042  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
   802  0007B4  C043  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
   803  0007B8  C044  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
   804  0007BC  C045  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
   805  0007C0  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   806  0007C4  0E0A               	movlw	10
   807  0007C6  ECC8  F004         	call	_UART_TxNumber
   808                           
   809                           ;uart.c: 492: break;
   810  0007CA  D0D6               	goto	l1806
   811  0007CC                     l1754:
   812                           
   813                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   814  0007CC  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   815  0007D0  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   816  0007D4  CFDE F046          	movff	postinc2,UART_Printf@v_num_u16
   817  0007D8  CFDD F047          	movff	postdec2,UART_Printf@v_num_u16+1
   818  0007DC  0E02               	movlw	2
   819  0007DE  264C               	addwf	UART_Printf@argp,f,c
   820  0007E0  0E00               	movlw	0
   821  0007E2  224D               	addwfc	UART_Printf@argp+1,f,c
   822                           
   823                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
   824  0007E4  C046  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   825  0007E8  C047  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   826  0007EC  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   827  0007EE  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   828  0007F0  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   829  0007F4  0E10               	movlw	16
   830  0007F6  ECC8  F004         	call	_UART_TxNumber
   831                           
   832                           ;uart.c: 497: break;
   833  0007FA  D0BE               	goto	l1806
   834  0007FC                     l1760:
   835                           
   836                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   837  0007FC  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   838  000800  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   839  000804  CFDE F042          	movff	postinc2,UART_Printf@v_num_u32
   840  000808  CFDE F043          	movff	postinc2,UART_Printf@v_num_u32+1
   841  00080C  CFDE F044          	movff	postinc2,UART_Printf@v_num_u32+2
   842  000810  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32+3
   843  000814  0E04               	movlw	4
   844  000816  264C               	addwf	UART_Printf@argp,f,c
   845  000818  0E00               	movlw	0
   846  00081A  224D               	addwfc	UART_Printf@argp+1,f,c
   847                           
   848                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
   849  00081C  C042  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
   850  000820  C043  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
   851  000824  C044  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
   852  000828  C045  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
   853  00082C  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   854  000830  0E10               	movlw	16
   855  000832  ECC8  F004         	call	_UART_TxNumber
   856                           
   857                           ;uart.c: 502: break;
   858  000836  D0A0               	goto	l1806
   859  000838                     l1766:
   860                           
   861                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   862  000838  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   863  00083C  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   864  000840  CFDE F046          	movff	postinc2,UART_Printf@v_num_u16
   865  000844  CFDD F047          	movff	postdec2,UART_Printf@v_num_u16+1
   866  000848  0E02               	movlw	2
   867  00084A  264C               	addwf	UART_Printf@argp,f,c
   868  00084C  0E00               	movlw	0
   869  00084E  224D               	addwfc	UART_Printf@argp+1,f,c
   870                           
   871                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
   872  000850  284B               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   873  000852  A4D8               	btfss	status,2,c
   874  000854  D002               	goto	l1774
   875                           
   876                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
   877  000856  0E10               	movlw	16
   878  000858  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   879  00085A                     l1774:
   880                           
   881                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
   882  00085A  C046  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   883  00085E  C047  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   884  000862  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   885  000864  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   886  000866  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   887  00086A  0E02               	movlw	2
   888  00086C  ECC8  F004         	call	_UART_TxNumber
   889                           
   890                           ;uart.c: 512: break;
   891  000870  D083               	goto	l1806
   892  000872                     l1776:
   893                           
   894                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   895  000872  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   896  000876  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   897  00087A  CFDE F042          	movff	postinc2,UART_Printf@v_num_u32
   898  00087E  CFDE F043          	movff	postinc2,UART_Printf@v_num_u32+1
   899  000882  CFDE F044          	movff	postinc2,UART_Printf@v_num_u32+2
   900  000886  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32+3
   901  00088A  0E04               	movlw	4
   902  00088C  264C               	addwf	UART_Printf@argp,f,c
   903  00088E  0E00               	movlw	0
   904  000890  224D               	addwfc	UART_Printf@argp+1,f,c
   905                           
   906                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
   907  000892  284B               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   908  000894  A4D8               	btfss	status,2,c
   909  000896  D002               	goto	l1784
   910                           
   911                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
   912  000898  0E20               	movlw	32
   913  00089A  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   914  00089C                     l1784:
   915                           
   916                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
   917  00089C  C042  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
   918  0008A0  C043  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
   919  0008A4  C044  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
   920  0008A8  C045  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
   921  0008AC  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   922  0008B0  0E02               	movlw	2
   923  0008B2  ECC8  F004         	call	_UART_TxNumber
   924                           
   925                           ;uart.c: 521: break;
   926  0008B6  D060               	goto	l1806
   927  0008B8                     l1786:
   928                           
   929                           ;uart.c: 525: case 'f':
   930                           ;uart.c: 527: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
   931  0008B8  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   932  0008BC  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   933  0008C0  CFDE F037          	movff	postinc2,UART_Printf@v_floatNum_f32
   934  0008C4  CFDE F038          	movff	postinc2,UART_Printf@v_floatNum_f32+1
   935  0008C8  CFDD F039          	movff	postdec2,UART_Printf@v_floatNum_f32+2
   936  0008CC  0E03               	movlw	3
   937  0008CE  264C               	addwf	UART_Printf@argp,f,c
   938  0008D0  0E00               	movlw	0
   939  0008D2  224D               	addwfc	UART_Printf@argp+1,f,c
   940                           
   941                           ;uart.c: 528: UART_TxFloatNumber(v_floatNum_f32);
   942  0008D4  C037  F02C         	movff	UART_Printf@v_floatNum_f32,UART_TxFloatNumber@v_floatNumber_f32
   943  0008D8  C038  F02D         	movff	UART_Printf@v_floatNum_f32+1,UART_TxFloatNumber@v_floatNumber_f32+1
   944  0008DC  C039  F02E         	movff	UART_Printf@v_floatNum_f32+2,UART_TxFloatNumber@v_floatNumber_f32+2
   945  0008E0  EC7A  F007         	call	_UART_TxFloatNumber	;wreg free
   946                           
   947                           ;uart.c: 530: break;
   948  0008E4  D049               	goto	l1806
   949  0008E6                     l1792:
   950                           
   951                           ;uart.c: 534: case 's':
   952                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
   953  0008E6  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   954  0008EA  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   955  0008EE  CFDE F03A          	movff	postinc2,UART_Printf@str
   956  0008F2  CFDD F03B          	movff	postdec2,UART_Printf@str+1
   957  0008F6  0E02               	movlw	2
   958  0008F8  264C               	addwf	UART_Printf@argp,f,c
   959  0008FA  0E00               	movlw	0
   960  0008FC  224D               	addwfc	UART_Printf@argp+1,f,c
   961                           
   962                           ;uart.c: 536: UART_TxString(str);
   963  0008FE  C03A  F002         	movff	UART_Printf@str,UART_TxString@ptr_string
   964  000902  C03B  F003         	movff	UART_Printf@str+1,UART_TxString@ptr_string+1
   965  000906  EC38  F009         	call	_UART_TxString	;wreg free
   966                           
   967                           ;uart.c: 537: break;
   968  00090A  D036               	goto	l1806
   969  00090C                     l1798:
   970                           
   971                           ;uart.c: 540: UART_TxChar('%');
   972  00090C  0E25               	movlw	37
   973  00090E  EC75  F009         	call	_UART_TxChar
   974                           
   975                           ;uart.c: 542: }
   976                           
   977                           ;uart.c: 541: break;
   978  000912  D032               	goto	l1806
   979  000914                     l1802:
   980  000914  504A               	movf	UART_Printf@ch,w,c
   981                           
   982                           ; Switch size 1, requested type "space"
   983                           ; Number of cases is 15, Range of values is 37 to 120
   984                           ; switch strategies available:
   985                           ; Name         Instructions Cycles
   986                           ; simple_byte           46    24 (average)
   987                           ;	Chosen strategy is simple_byte
   988  000916  0A25               	xorlw	37	; case 37
   989  000918  B4D8               	btfsc	status,2,c
   990  00091A  D7F8               	goto	l1798
   991  00091C  0A67               	xorlw	103	; case 66
   992  00091E  B4D8               	btfsc	status,2,c
   993  000920  D7A8               	goto	l1776
   994  000922  0A01               	xorlw	1	; case 67
   995  000924  B4D8               	btfsc	status,2,c
   996  000926  D6BF               	goto	l1712
   997  000928  0A07               	xorlw	7	; case 68
   998  00092A  B4D8               	btfsc	status,2,c
   999  00092C  D6EE               	goto	l1730
  1000  00092E  0A02               	xorlw	2	; case 70
  1001  000930  B4D8               	btfsc	status,2,c
  1002  000932  D7C2               	goto	l1786
  1003  000934  0A15               	xorlw	21	; case 83
  1004  000936  B4D8               	btfsc	status,2,c
  1005  000938  D7D6               	goto	l1792
  1006  00093A  0A06               	xorlw	6	; case 85
  1007  00093C  B4D8               	btfsc	status,2,c
  1008  00093E  D728               	goto	l1748
  1009  000940  0A0D               	xorlw	13	; case 88
  1010  000942  B4D8               	btfsc	status,2,c
  1011  000944  D75B               	goto	l1760
  1012  000946  0A3A               	xorlw	58	; case 98
  1013  000948  B4D8               	btfsc	status,2,c
  1014  00094A  D776               	goto	l1766
  1015  00094C  0A01               	xorlw	1	; case 99
  1016  00094E  B4D8               	btfsc	status,2,c
  1017  000950  D6AA               	goto	l1712
  1018  000952  0A07               	xorlw	7	; case 100
  1019  000954  B4D8               	btfsc	status,2,c
  1020  000956  D6B5               	goto	l1718
  1021  000958  0A02               	xorlw	2	; case 102
  1022  00095A  B4D8               	btfsc	status,2,c
  1023  00095C  D7AD               	goto	l1786
  1024  00095E  0A15               	xorlw	21	; case 115
  1025  000960  B4D8               	btfsc	status,2,c
  1026  000962  D7C1               	goto	l1792
  1027  000964  0A06               	xorlw	6	; case 117
  1028  000966  B4D8               	btfsc	status,2,c
  1029  000968  D6FB               	goto	l1742
  1030  00096A  0A0D               	xorlw	13	; case 120
  1031  00096C  B4D8               	btfsc	status,2,c
  1032  00096E  D72E               	goto	l1754
  1033                           
  1034                           ;uart.c: 543: }
  1035  000970  D003               	goto	l1806
  1036  000972                     l1804:
  1037                           
  1038                           ;uart.c: 544: else
  1039                           ;uart.c: 545: {
  1040                           ;uart.c: 547: UART_TxChar(ch);
  1041  000972  504A               	movf	UART_Printf@ch,w,c
  1042  000974  EC75  F009         	call	_UART_TxChar
  1043  000978                     l1806:
  1044  000978  4A48               	infsnz	UART_Printf@ptr,f,c
  1045  00097A  2A49               	incf	UART_Printf@ptr+1,f,c
  1046  00097C                     l1808:
  1047  00097C  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
  1048  000980  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
  1049  000984                     	if	0	;tblptru may be non-zero
  1050  000984                     	endif
  1051  000984                     	if	0	;tblptru may be non-zero
  1052  000984                     	endif
  1053  000984  0008               	tblrd		*
  1054  000986  50F5               	movf	tablat,w,c
  1055  000988  0900               	iorlw	0
  1056  00098A  B4D8               	btfsc	status,2,c
  1057  00098C  0012               	return	
  1058  00098E  D656               	goto	l1688
  1059  000990                     __end_of_UART_Printf:
  1060                           	opt stack 0
  1061                           tblptru	equ	0xFF8
  1062                           tblptrh	equ	0xFF7
  1063                           tblptrl	equ	0xFF6
  1064                           tablat	equ	0xFF5
  1065                           prodl	equ	0xFF3
  1066                           indf2	equ	0xFDF
  1067                           postinc2	equ	0xFDE
  1068                           postdec2	equ	0xFDD
  1069                           fsr2h	equ	0xFDA
  1070                           fsr2l	equ	0xFD9
  1071                           status	equ	0xFD8
  1072                           
  1073 ;; *************** function _UART_TxString *****************
  1074 ;; Defined at:
  1075 ;;		line 169 in file "../00-libfiles/uart.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  ptr_string      2    1[COMRAM] PTR const unsigned char 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;		None
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1089 ;;      Params:         2       0       0       0       0       0       0
  1090 ;;      Locals:         0       0       0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0
  1092 ;;      Totals:         2       0       0       0       0       0       0
  1093 ;;Total ram usage:        2 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    1
  1096 ;; This function calls:
  1097 ;;		_UART_TxChar
  1098 ;; This function is called by:
  1099 ;;		_UART_Printf
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text2
  1104  001270                     __ptext2:
  1105                           	opt stack 0
  1106  001270                     _UART_TxString:
  1107                           	opt stack 28
  1108                           
  1109                           ;uart.c: 171: while(*ptr_string)
  1110                           
  1111                           ;incstack = 0
  1112  001270  D009               	goto	l1640
  1113  001272                     l1636:
  1114                           
  1115                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  1116  001272  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
  1117  001276  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
  1118  00127A  50DF               	movf	indf2,w,c
  1119  00127C  EC75  F009         	call	_UART_TxChar
  1120  001280  4A02               	infsnz	UART_TxString@ptr_string,f,c
  1121  001282  2A03               	incf	UART_TxString@ptr_string+1,f,c
  1122  001284                     l1640:
  1123  001284  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
  1124  001288  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
  1125  00128C  50DF               	movf	indf2,w,c
  1126  00128E  B4D8               	btfsc	status,2,c
  1127  001290  0012               	return	
  1128  001292  D7EF               	goto	l1636
  1129  001294                     __end_of_UART_TxString:
  1130                           	opt stack 0
  1131                           tblptru	equ	0xFF8
  1132                           tblptrh	equ	0xFF7
  1133                           tblptrl	equ	0xFF6
  1134                           tablat	equ	0xFF5
  1135                           prodl	equ	0xFF3
  1136                           indf2	equ	0xFDF
  1137                           postinc2	equ	0xFDE
  1138                           postdec2	equ	0xFDD
  1139                           fsr2h	equ	0xFDA
  1140                           fsr2l	equ	0xFD9
  1141                           status	equ	0xFD8
  1142                           
  1143 ;; *************** function _UART_TxFloatNumber *****************
  1144 ;; Defined at:
  1145 ;;		line 350 in file "../00-libfiles/uart.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  v_floatNumbe    3   43[COMRAM] float 
  1148 ;; Auto vars:     Size  Location     Type
  1149 ;;  v_decNumber_    4   46[COMRAM] unsigned long 
  1150 ;; Return value:  Size  Location     Type
  1151 ;;                  1    wreg      void 
  1152 ;; Registers used:
  1153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1154 ;; Tracked objects:
  1155 ;;		On entry : 0/0
  1156 ;;		On exit  : 0/0
  1157 ;;		Unchanged: 0/0
  1158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1159 ;;      Params:         3       0       0       0       0       0       0
  1160 ;;      Locals:         4       0       0       0       0       0       0
  1161 ;;      Temps:          0       0       0       0       0       0       0
  1162 ;;      Totals:         7       0       0       0       0       0       0
  1163 ;;Total ram usage:        7 bytes
  1164 ;; Hardware stack levels used:    1
  1165 ;; Hardware stack levels required when called:    2
  1166 ;; This function calls:
  1167 ;;		_UART_TxChar
  1168 ;;		_UART_TxNumber
  1169 ;;		___ftadd
  1170 ;;		___ftmul
  1171 ;;		___ftneg
  1172 ;;		___fttol
  1173 ;;		___lltoft
  1174 ;; This function is called by:
  1175 ;;		_UART_Printf
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           	psect	text3
  1180  000EF4                     __ptext3:
  1181                           	opt stack 0
  1182  000EF4                     _UART_TxFloatNumber:
  1183                           	opt stack 27
  1184                           
  1185                           ;uart.c: 352: uint32_t v_decNumber_u32;
  1186                           ;uart.c: 359: v_decNumber_u32 = (uint32_t) v_floatNumber_f32;
  1187                           
  1188                           ;incstack = 0
  1189  000EF4  C02C  F018         	movff	UART_TxFloatNumber@v_floatNumber_f32,___fttol@f1
  1190  000EF8  C02D  F019         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___fttol@f1+1
  1191  000EFC  C02E  F01A         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___fttol@f1+2
  1192  000F00  EC86  F006         	call	___fttol	;wreg free
  1193  000F04  C018  F02F         	movff	?___fttol,UART_TxFloatNumber@v_decNumber_u32
  1194  000F08  C019  F030         	movff	?___fttol+1,UART_TxFloatNumber@v_decNumber_u32+1
  1195  000F0C  C01A  F031         	movff	?___fttol+2,UART_TxFloatNumber@v_decNumber_u32+2
  1196  000F10  C01B  F032         	movff	?___fttol+3,UART_TxFloatNumber@v_decNumber_u32+3
  1197                           
  1198                           ;uart.c: 360: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  1199  000F14  C02F  F00E         	movff	UART_TxFloatNumber@v_decNumber_u32,UART_TxNumber@v_number_u32
  1200  000F18  C030  F00F         	movff	UART_TxFloatNumber@v_decNumber_u32+1,UART_TxNumber@v_number_u32+1
  1201  000F1C  C031  F010         	movff	UART_TxFloatNumber@v_decNumber_u32+2,UART_TxNumber@v_number_u32+2
  1202  000F20  C032  F011         	movff	UART_TxFloatNumber@v_decNumber_u32+3,UART_TxNumber@v_number_u32+3
  1203  000F24  0EFF               	movlw	255
  1204  000F26  6E12               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  1205  000F28  0E0A               	movlw	10
  1206  000F2A  ECC8  F004         	call	_UART_TxNumber
  1207                           
  1208                           ;uart.c: 362: UART_TxChar('.');
  1209  000F2E  0E2E               	movlw	46
  1210  000F30  EC75  F009         	call	_UART_TxChar
  1211                           
  1212                           ;uart.c: 364: v_floatNumber_f32 = v_floatNumber_f32 - v_decNumber_u32;
  1213  000F34  C02F  F009         	movff	UART_TxFloatNumber@v_decNumber_u32,___lltoft@c
  1214  000F38  C030  F00A         	movff	UART_TxFloatNumber@v_decNumber_u32+1,___lltoft@c+1
  1215  000F3C  C031  F00B         	movff	UART_TxFloatNumber@v_decNumber_u32+2,___lltoft@c+2
  1216  000F40  C032  F00C         	movff	UART_TxFloatNumber@v_decNumber_u32+3,___lltoft@c+3
  1217  000F44  ECF2  F008         	call	___lltoft	;wreg free
  1218  000F48  C009  F012         	movff	?___lltoft,___ftneg@f1
  1219  000F4C  C00A  F013         	movff	?___lltoft+1,___ftneg@f1+1
  1220  000F50  C00B  F014         	movff	?___lltoft+2,___ftneg@f1+2
  1221  000F54  EC4A  F009         	call	___ftneg	;wreg free
  1222  000F58  C012  F015         	movff	?___ftneg,___ftadd@f1
  1223  000F5C  C013  F016         	movff	?___ftneg+1,___ftadd@f1+1
  1224  000F60  C014  F017         	movff	?___ftneg+2,___ftadd@f1+2
  1225  000F64  C02C  F018         	movff	UART_TxFloatNumber@v_floatNumber_f32,___ftadd@f2
  1226  000F68  C02D  F019         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___ftadd@f2+1
  1227  000F6C  C02E  F01A         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___ftadd@f2+2
  1228  000F70  ECB0  F005         	call	___ftadd	;wreg free
  1229  000F74  C015  F02C         	movff	?___ftadd,UART_TxFloatNumber@v_floatNumber_f32
  1230  000F78  C016  F02D         	movff	?___ftadd+1,UART_TxFloatNumber@v_floatNumber_f32+1
  1231  000F7C  C017  F02E         	movff	?___ftadd+2,UART_TxFloatNumber@v_floatNumber_f32+2
  1232                           
  1233                           ;uart.c: 365: v_decNumber_u32 = v_floatNumber_f32 * 1000000;
  1234  000F80  0E24               	movlw	36
  1235  000F82  6E0C               	movwf	___ftmul@f2,c
  1236  000F84  0E74               	movlw	116
  1237  000F86  6E0D               	movwf	___ftmul@f2+1,c
  1238  000F88  0E49               	movlw	73
  1239  000F8A  6E0E               	movwf	___ftmul@f2+2,c
  1240  000F8C  C02C  F009         	movff	UART_TxFloatNumber@v_floatNumber_f32,___ftmul@f1
  1241  000F90  C02D  F00A         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___ftmul@f1+1
  1242  000F94  C02E  F00B         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___ftmul@f1+2
  1243  000F98  EC00  F007         	call	___ftmul	;wreg free
  1244  000F9C  C009  F018         	movff	?___ftmul,___fttol@f1
  1245  000FA0  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  1246  000FA4  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  1247  000FA8  EC86  F006         	call	___fttol	;wreg free
  1248  000FAC  C018  F02F         	movff	?___fttol,UART_TxFloatNumber@v_decNumber_u32
  1249  000FB0  C019  F030         	movff	?___fttol+1,UART_TxFloatNumber@v_decNumber_u32+1
  1250  000FB4  C01A  F031         	movff	?___fttol+2,UART_TxFloatNumber@v_decNumber_u32+2
  1251  000FB8  C01B  F032         	movff	?___fttol+3,UART_TxFloatNumber@v_decNumber_u32+3
  1252                           
  1253                           ;uart.c: 366: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  1254  000FBC  C02F  F00E         	movff	UART_TxFloatNumber@v_decNumber_u32,UART_TxNumber@v_number_u32
  1255  000FC0  C030  F00F         	movff	UART_TxFloatNumber@v_decNumber_u32+1,UART_TxNumber@v_number_u32+1
  1256  000FC4  C031  F010         	movff	UART_TxFloatNumber@v_decNumber_u32+2,UART_TxNumber@v_number_u32+2
  1257  000FC8  C032  F011         	movff	UART_TxFloatNumber@v_decNumber_u32+3,UART_TxNumber@v_number_u32+3
  1258  000FCC  0EFF               	movlw	255
  1259  000FCE  6E12               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  1260  000FD0  0E0A               	movlw	10
  1261  000FD2  ECC8  F004         	call	_UART_TxNumber
  1262  000FD6  0012               	return		;funcret
  1263  000FD8                     __end_of_UART_TxFloatNumber:
  1264                           	opt stack 0
  1265                           tblptru	equ	0xFF8
  1266                           tblptrh	equ	0xFF7
  1267                           tblptrl	equ	0xFF6
  1268                           tablat	equ	0xFF5
  1269                           prodl	equ	0xFF3
  1270                           indf2	equ	0xFDF
  1271                           postinc2	equ	0xFDE
  1272                           postdec2	equ	0xFDD
  1273                           fsr2h	equ	0xFDA
  1274                           fsr2l	equ	0xFD9
  1275                           status	equ	0xFD8
  1276                           
  1277 ;; *************** function ___lltoft *****************
  1278 ;; Defined at:
  1279 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  c               4    8[COMRAM] unsigned long 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  exp             1   16[COMRAM] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  3    8[COMRAM] float 
  1286 ;; Registers used:
  1287 ;;		wreg, status,2, status,0, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1293 ;;      Params:         4       0       0       0       0       0       0
  1294 ;;      Locals:         1       0       0       0       0       0       0
  1295 ;;      Temps:          4       0       0       0       0       0       0
  1296 ;;      Totals:         9       0       0       0       0       0       0
  1297 ;;Total ram usage:        9 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    1
  1300 ;; This function calls:
  1301 ;;		___ftpack
  1302 ;; This function is called by:
  1303 ;;		_UART_TxFloatNumber
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text4
  1308  0011E4                     __ptext4:
  1309                           	opt stack 0
  1310  0011E4                     ___lltoft:
  1311                           	opt stack 27
  1312                           
  1313                           ;incstack = 0
  1314  0011E4  0E8E               	movlw	142
  1315  0011E6  6E11               	movwf	___lltoft@exp,c
  1316  0011E8  D006               	goto	l1618
  1317  0011EA                     l1616:
  1318  0011EA  90D8               	bcf	status,0,c
  1319  0011EC  320C               	rrcf	___lltoft@c+3,f,c
  1320  0011EE  320B               	rrcf	___lltoft@c+2,f,c
  1321  0011F0  320A               	rrcf	___lltoft@c+1,f,c
  1322  0011F2  3209               	rrcf	___lltoft@c,f,c
  1323  0011F4  2A11               	incf	___lltoft@exp,f,c
  1324  0011F6                     l1618:
  1325  0011F6  0E00               	movlw	0
  1326  0011F8  1409               	andwf	___lltoft@c,w,c
  1327  0011FA  6E0D               	movwf	??___lltoft& (0+255),c
  1328  0011FC  0E00               	movlw	0
  1329  0011FE  140A               	andwf	___lltoft@c+1,w,c
  1330  001200  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1331  001202  0E00               	movlw	0
  1332  001204  140B               	andwf	___lltoft@c+2,w,c
  1333  001206  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1334  001208  0EFF               	movlw	255
  1335  00120A  140C               	andwf	___lltoft@c+3,w,c
  1336  00120C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1337  00120E  500D               	movf	??___lltoft,w,c
  1338  001210  100E               	iorwf	??___lltoft+1,w,c
  1339  001212  100F               	iorwf	??___lltoft+2,w,c
  1340  001214  1010               	iorwf	??___lltoft+3,w,c
  1341  001216  A4D8               	btfss	status,2,c
  1342  001218  D7E8               	goto	l1616
  1343  00121A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1344  00121E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1345  001222  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1346  001226  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1347  00122A  0E00               	movlw	0
  1348  00122C  6E05               	movwf	___ftpack@sign,c
  1349  00122E  ECEC  F007         	call	___ftpack	;wreg free
  1350  001232  C001  F009         	movff	?___ftpack,?___lltoft
  1351  001236  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1352  00123A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1353  00123E  0012               	return	
  1354  001240                     __end_of___lltoft:
  1355                           	opt stack 0
  1356                           tblptru	equ	0xFF8
  1357                           tblptrh	equ	0xFF7
  1358                           tblptrl	equ	0xFF6
  1359                           tablat	equ	0xFF5
  1360                           prodl	equ	0xFF3
  1361                           indf2	equ	0xFDF
  1362                           postinc2	equ	0xFDE
  1363                           postdec2	equ	0xFDD
  1364                           fsr2h	equ	0xFDA
  1365                           fsr2l	equ	0xFD9
  1366                           status	equ	0xFD8
  1367                           
  1368 ;; *************** function ___fttol *****************
  1369 ;; Defined at:
  1370 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  f1              3   23[COMRAM] float 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  lval            4   33[COMRAM] unsigned long 
  1375 ;;  exp1            1   37[COMRAM] unsigned char 
  1376 ;;  sign1           1   32[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  4   23[COMRAM] long 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1386 ;;      Params:         4       0       0       0       0       0       0
  1387 ;;      Locals:         6       0       0       0       0       0       0
  1388 ;;      Temps:          5       0       0       0       0       0       0
  1389 ;;      Totals:        15       0       0       0       0       0       0
  1390 ;;Total ram usage:       15 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_UART_TxFloatNumber
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text5
  1400  000D0C                     __ptext5:
  1401                           	opt stack 0
  1402  000D0C                     ___fttol:
  1403                           	opt stack 28
  1404                           
  1405                           ;incstack = 0
  1406  000D0C  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  1407  000D10  6A1D               	clrf	(??___fttol+1)& (0+255),c
  1408  000D12  6A1E               	clrf	(??___fttol+2)& (0+255),c
  1409  000D14  3419               	rlcf	___fttol@f1+1,w,c
  1410  000D16  361C               	rlcf	??___fttol& (0+255),f,c
  1411  000D18  E301               	bnc	u1421
  1412  000D1A  801D               	bsf	(??___fttol+1)& (0+255),0,c
  1413  000D1C                     u1421:
  1414  000D1C  501C               	movf	??___fttol,w,c
  1415  000D1E  6E26               	movwf	___fttol@exp1,c
  1416  000D20  5026               	movf	___fttol@exp1,w,c
  1417  000D22  A4D8               	btfss	status,2,c
  1418  000D24  D009               	goto	l1574
  1419  000D26  0E00               	movlw	0
  1420  000D28  6E18               	movwf	?___fttol,c
  1421  000D2A  0E00               	movlw	0
  1422  000D2C  6E19               	movwf	?___fttol+1,c
  1423  000D2E  0E00               	movlw	0
  1424  000D30  6E1A               	movwf	?___fttol+2,c
  1425  000D32  0E00               	movlw	0
  1426  000D34  6E1B               	movwf	?___fttol+3,c
  1427  000D36  0012               	return	
  1428  000D38                     l1574:
  1429  000D38  0E17               	movlw	23
  1430  000D3A  6E1C               	movwf	??___fttol& (0+255),c
  1431  000D3C  C018  F01D         	movff	___fttol@f1,??___fttol+1
  1432  000D40  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  1433  000D44  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  1434  000D48  281C               	incf	??___fttol,w,c
  1435  000D4A  6E20               	movwf	(??___fttol+4)& (0+255),c
  1436  000D4C  D004               	goto	u1440
  1437  000D4E                     u1445:
  1438  000D4E  90D8               	bcf	status,0,c
  1439  000D50  321F               	rrcf	??___fttol+3,f,c
  1440  000D52  321E               	rrcf	??___fttol+2,f,c
  1441  000D54  321D               	rrcf	??___fttol+1,f,c
  1442  000D56                     u1440:
  1443  000D56  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  1444  000D58  D7FA               	goto	u1445
  1445  000D5A  501D               	movf	??___fttol+1,w,c
  1446  000D5C  6E21               	movwf	___fttol@sign1,c
  1447  000D5E  8E19               	bsf	___fttol@f1+1,7,c
  1448  000D60  0EFF               	movlw	255
  1449  000D62  1618               	andwf	___fttol@f1,f,c
  1450  000D64  0EFF               	movlw	255
  1451  000D66  1619               	andwf	___fttol@f1+1,f,c
  1452  000D68  0E00               	movlw	0
  1453  000D6A  161A               	andwf	___fttol@f1+2,f,c
  1454  000D6C  5018               	movf	___fttol@f1,w,c
  1455  000D6E  6E22               	movwf	___fttol@lval,c
  1456  000D70  5019               	movf	___fttol@f1+1,w,c
  1457  000D72  6E23               	movwf	___fttol@lval+1,c
  1458  000D74  501A               	movf	___fttol@f1+2,w,c
  1459  000D76  6E24               	movwf	___fttol@lval+2,c
  1460  000D78  6A25               	clrf	___fttol@lval+3,c
  1461  000D7A  0E8E               	movlw	142
  1462  000D7C  5E26               	subwf	___fttol@exp1,f,c
  1463  000D7E  AE26               	btfss	___fttol@exp1,7,c
  1464  000D80  D016               	goto	l1596
  1465  000D82  5026               	movf	___fttol@exp1,w,c
  1466  000D84  0A80               	xorlw	128
  1467  000D86  0F8F               	addlw	143
  1468  000D88  B0D8               	btfsc	status,0,c
  1469  000D8A  D009               	goto	l1592
  1470  000D8C  0E00               	movlw	0
  1471  000D8E  6E18               	movwf	?___fttol,c
  1472  000D90  0E00               	movlw	0
  1473  000D92  6E19               	movwf	?___fttol+1,c
  1474  000D94  0E00               	movlw	0
  1475  000D96  6E1A               	movwf	?___fttol+2,c
  1476  000D98  0E00               	movlw	0
  1477  000D9A  6E1B               	movwf	?___fttol+3,c
  1478  000D9C  0012               	return	
  1479  000D9E                     l1592:
  1480  000D9E  90D8               	bcf	status,0,c
  1481  000DA0  3225               	rrcf	___fttol@lval+3,f,c
  1482  000DA2  3224               	rrcf	___fttol@lval+2,f,c
  1483  000DA4  3223               	rrcf	___fttol@lval+1,f,c
  1484  000DA6  3222               	rrcf	___fttol@lval,f,c
  1485  000DA8  3E26               	incfsz	___fttol@exp1,f,c
  1486  000DAA  D7F9               	goto	l1592
  1487  000DAC  D015               	goto	l1606
  1488  000DAE                     l1596:
  1489  000DAE  0E17               	movlw	23
  1490  000DB0  6426               	cpfsgt	___fttol@exp1,c
  1491  000DB2  D00F               	goto	l1604
  1492  000DB4  0E00               	movlw	0
  1493  000DB6  6E18               	movwf	?___fttol,c
  1494  000DB8  0E00               	movlw	0
  1495  000DBA  6E19               	movwf	?___fttol+1,c
  1496  000DBC  0E00               	movlw	0
  1497  000DBE  6E1A               	movwf	?___fttol+2,c
  1498  000DC0  0E00               	movlw	0
  1499  000DC2  6E1B               	movwf	?___fttol+3,c
  1500  000DC4  0012               	return	
  1501  000DC6                     l1602:
  1502  000DC6  90D8               	bcf	status,0,c
  1503  000DC8  3622               	rlcf	___fttol@lval,f,c
  1504  000DCA  3623               	rlcf	___fttol@lval+1,f,c
  1505  000DCC  3624               	rlcf	___fttol@lval+2,f,c
  1506  000DCE  3625               	rlcf	___fttol@lval+3,f,c
  1507  000DD0  0626               	decf	___fttol@exp1,f,c
  1508  000DD2                     l1604:
  1509  000DD2  5026               	movf	___fttol@exp1,w,c
  1510  000DD4  A4D8               	btfss	status,2,c
  1511  000DD6  D7F7               	goto	l1602
  1512  000DD8                     l1606:
  1513  000DD8  5021               	movf	___fttol@sign1,w,c
  1514  000DDA  B4D8               	btfsc	status,2,c
  1515  000DDC  D008               	goto	l1610
  1516  000DDE  1E25               	comf	___fttol@lval+3,f,c
  1517  000DE0  1E24               	comf	___fttol@lval+2,f,c
  1518  000DE2  1E23               	comf	___fttol@lval+1,f,c
  1519  000DE4  6C22               	negf	___fttol@lval,c
  1520  000DE6  0E00               	movlw	0
  1521  000DE8  2223               	addwfc	___fttol@lval+1,f,c
  1522  000DEA  2224               	addwfc	___fttol@lval+2,f,c
  1523  000DEC  2225               	addwfc	___fttol@lval+3,f,c
  1524  000DEE                     l1610:
  1525  000DEE  C022  F018         	movff	___fttol@lval,?___fttol
  1526  000DF2  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  1527  000DF6  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  1528  000DFA  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  1529  000DFE  0012               	return	
  1530  000E00                     __end_of___fttol:
  1531                           	opt stack 0
  1532                           tblptru	equ	0xFF8
  1533                           tblptrh	equ	0xFF7
  1534                           tblptrl	equ	0xFF6
  1535                           tablat	equ	0xFF5
  1536                           prodl	equ	0xFF3
  1537                           indf2	equ	0xFDF
  1538                           postinc2	equ	0xFDE
  1539                           postdec2	equ	0xFDD
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function ___ftneg *****************
  1545 ;; Defined at:
  1546 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  f1              3   17[COMRAM] float 
  1549 ;; Auto vars:     Size  Location     Type
  1550 ;;		None
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  3   17[COMRAM] float 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1560 ;;      Params:         3       0       0       0       0       0       0
  1561 ;;      Locals:         0       0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0
  1563 ;;      Totals:         3       0       0       0       0       0       0
  1564 ;;Total ram usage:        3 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_UART_TxFloatNumber
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text6
  1574  001294                     __ptext6:
  1575                           	opt stack 0
  1576  001294                     ___ftneg:
  1577                           	opt stack 28
  1578                           
  1579                           ;incstack = 0
  1580  001294  5012               	movf	___ftneg@f1,w,c
  1581  001296  1013               	iorwf	___ftneg@f1+1,w,c
  1582  001298  1014               	iorwf	___ftneg@f1+2,w,c
  1583  00129A  B4D8               	btfsc	status,2,c
  1584  00129C  D006               	goto	l487
  1585  00129E  0E00               	movlw	0
  1586  0012A0  1A12               	xorwf	___ftneg@f1,f,c
  1587  0012A2  0E00               	movlw	0
  1588  0012A4  1A13               	xorwf	___ftneg@f1+1,f,c
  1589  0012A6  0E80               	movlw	128
  1590  0012A8  1A14               	xorwf	___ftneg@f1+2,f,c
  1591  0012AA                     l487:
  1592  0012AA  C012  F012         	movff	___ftneg@f1,?___ftneg
  1593  0012AE  C013  F013         	movff	___ftneg@f1+1,?___ftneg+1
  1594  0012B2  C014  F014         	movff	___ftneg@f1+2,?___ftneg+2
  1595  0012B6  0012               	return		;funcret
  1596  0012B8                     __end_of___ftneg:
  1597                           	opt stack 0
  1598                           tblptru	equ	0xFF8
  1599                           tblptrh	equ	0xFF7
  1600                           tblptrl	equ	0xFF6
  1601                           tablat	equ	0xFF5
  1602                           prodl	equ	0xFF3
  1603                           indf2	equ	0xFDF
  1604                           postinc2	equ	0xFDE
  1605                           postdec2	equ	0xFDD
  1606                           fsr2h	equ	0xFDA
  1607                           fsr2l	equ	0xFD9
  1608                           status	equ	0xFD8
  1609                           
  1610 ;; *************** function ___ftmul *****************
  1611 ;; Defined at:
  1612 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  f1              3    8[COMRAM] float 
  1615 ;;  f2              3   11[COMRAM] float 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  1618 ;;  sign            1   22[COMRAM] unsigned char 
  1619 ;;  cntr            1   21[COMRAM] unsigned char 
  1620 ;;  exp             1   17[COMRAM] unsigned char 
  1621 ;; Return value:  Size  Location     Type
  1622 ;;                  3    8[COMRAM] float 
  1623 ;; Registers used:
  1624 ;;		wreg, status,2, status,0, cstack
  1625 ;; Tracked objects:
  1626 ;;		On entry : 0/0
  1627 ;;		On exit  : 0/0
  1628 ;;		Unchanged: 0/0
  1629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1630 ;;      Params:         6       0       0       0       0       0       0
  1631 ;;      Locals:         6       0       0       0       0       0       0
  1632 ;;      Temps:          3       0       0       0       0       0       0
  1633 ;;      Totals:        15       0       0       0       0       0       0
  1634 ;;Total ram usage:       15 bytes
  1635 ;; Hardware stack levels used:    1
  1636 ;; Hardware stack levels required when called:    1
  1637 ;; This function calls:
  1638 ;;		___ftpack
  1639 ;; This function is called by:
  1640 ;;		_UART_TxFloatNumber
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text7
  1645  000E00                     __ptext7:
  1646                           	opt stack 0
  1647  000E00                     ___ftmul:
  1648                           	opt stack 27
  1649                           
  1650                           ;incstack = 0
  1651  000E00  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  1652  000E04  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1653  000E06  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1654  000E08  340A               	rlcf	___ftmul@f1+1,w,c
  1655  000E0A  360F               	rlcf	??___ftmul& (0+255),f,c
  1656  000E0C  E301               	bnc	u1351
  1657  000E0E  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1658  000E10                     u1351:
  1659  000E10  500F               	movf	??___ftmul,w,c
  1660  000E12  6E12               	movwf	___ftmul@exp,c
  1661  000E14  5012               	movf	___ftmul@exp,w,c
  1662  000E16  A4D8               	btfss	status,2,c
  1663  000E18  D007               	goto	l1522
  1664  000E1A  0E00               	movlw	0
  1665  000E1C  6E09               	movwf	?___ftmul,c
  1666  000E1E  0E00               	movlw	0
  1667  000E20  6E0A               	movwf	?___ftmul+1,c
  1668  000E22  0E00               	movlw	0
  1669  000E24  6E0B               	movwf	?___ftmul+2,c
  1670  000E26  0012               	return	
  1671  000E28                     l1522:
  1672  000E28  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  1673  000E2C  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1674  000E2E  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1675  000E30  340D               	rlcf	___ftmul@f2+1,w,c
  1676  000E32  360F               	rlcf	??___ftmul& (0+255),f,c
  1677  000E34  E301               	bnc	u1371
  1678  000E36  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1679  000E38                     u1371:
  1680  000E38  500F               	movf	??___ftmul,w,c
  1681  000E3A  6E17               	movwf	___ftmul@sign,c
  1682  000E3C  5017               	movf	___ftmul@sign,w,c
  1683  000E3E  A4D8               	btfss	status,2,c
  1684  000E40  D007               	goto	l1528
  1685  000E42  0E00               	movlw	0
  1686  000E44  6E09               	movwf	?___ftmul,c
  1687  000E46  0E00               	movlw	0
  1688  000E48  6E0A               	movwf	?___ftmul+1,c
  1689  000E4A  0E00               	movlw	0
  1690  000E4C  6E0B               	movwf	?___ftmul+2,c
  1691  000E4E  0012               	return	
  1692  000E50                     l1528:
  1693  000E50  5017               	movf	___ftmul@sign,w,c
  1694  000E52  0F7B               	addlw	123
  1695  000E54  2612               	addwf	___ftmul@exp,f,c
  1696  000E56  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  1697  000E5A  500E               	movf	___ftmul@f2+2,w,c
  1698  000E5C  1A17               	xorwf	___ftmul@sign,f,c
  1699  000E5E  0E80               	movlw	128
  1700  000E60  1617               	andwf	___ftmul@sign,f,c
  1701  000E62  8E0A               	bsf	___ftmul@f1+1,7,c
  1702  000E64  8E0D               	bsf	___ftmul@f2+1,7,c
  1703  000E66  0EFF               	movlw	255
  1704  000E68  160C               	andwf	___ftmul@f2,f,c
  1705  000E6A  0EFF               	movlw	255
  1706  000E6C  160D               	andwf	___ftmul@f2+1,f,c
  1707  000E6E  0E00               	movlw	0
  1708  000E70  160E               	andwf	___ftmul@f2+2,f,c
  1709  000E72  0E00               	movlw	0
  1710  000E74  6E13               	movwf	___ftmul@f3_as_product,c
  1711  000E76  0E00               	movlw	0
  1712  000E78  6E14               	movwf	___ftmul@f3_as_product+1,c
  1713  000E7A  0E00               	movlw	0
  1714  000E7C  6E15               	movwf	___ftmul@f3_as_product+2,c
  1715  000E7E  0E07               	movlw	7
  1716  000E80  6E16               	movwf	___ftmul@cntr,c
  1717  000E82                     l1542:
  1718  000E82  A009               	btfss	___ftmul@f1,0,c
  1719  000E84  D006               	goto	l1546
  1720  000E86  500C               	movf	___ftmul@f2,w,c
  1721  000E88  2613               	addwf	___ftmul@f3_as_product,f,c
  1722  000E8A  500D               	movf	___ftmul@f2+1,w,c
  1723  000E8C  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1724  000E8E  500E               	movf	___ftmul@f2+2,w,c
  1725  000E90  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1726  000E92                     l1546:
  1727  000E92  90D8               	bcf	status,0,c
  1728  000E94  320B               	rrcf	___ftmul@f1+2,f,c
  1729  000E96  320A               	rrcf	___ftmul@f1+1,f,c
  1730  000E98  3209               	rrcf	___ftmul@f1,f,c
  1731  000E9A  90D8               	bcf	status,0,c
  1732  000E9C  360C               	rlcf	___ftmul@f2,f,c
  1733  000E9E  360D               	rlcf	___ftmul@f2+1,f,c
  1734  000EA0  360E               	rlcf	___ftmul@f2+2,f,c
  1735  000EA2  2E16               	decfsz	___ftmul@cntr,f,c
  1736  000EA4  D7EE               	goto	l1542
  1737  000EA6  0E09               	movlw	9
  1738  000EA8  6E16               	movwf	___ftmul@cntr,c
  1739  000EAA                     l1552:
  1740  000EAA  A009               	btfss	___ftmul@f1,0,c
  1741  000EAC  D006               	goto	l1556
  1742  000EAE  500C               	movf	___ftmul@f2,w,c
  1743  000EB0  2613               	addwf	___ftmul@f3_as_product,f,c
  1744  000EB2  500D               	movf	___ftmul@f2+1,w,c
  1745  000EB4  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1746  000EB6  500E               	movf	___ftmul@f2+2,w,c
  1747  000EB8  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1748  000EBA                     l1556:
  1749  000EBA  90D8               	bcf	status,0,c
  1750  000EBC  320B               	rrcf	___ftmul@f1+2,f,c
  1751  000EBE  320A               	rrcf	___ftmul@f1+1,f,c
  1752  000EC0  3209               	rrcf	___ftmul@f1,f,c
  1753  000EC2  90D8               	bcf	status,0,c
  1754  000EC4  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  1755  000EC6  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  1756  000EC8  3213               	rrcf	___ftmul@f3_as_product,f,c
  1757  000ECA  2E16               	decfsz	___ftmul@cntr,f,c
  1758  000ECC  D7EE               	goto	l1552
  1759  000ECE  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1760  000ED2  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1761  000ED6  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1762  000EDA  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  1763  000EDE  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  1764  000EE2  ECEC  F007         	call	___ftpack	;wreg free
  1765  000EE6  C001  F009         	movff	?___ftpack,?___ftmul
  1766  000EEA  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  1767  000EEE  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  1768  000EF2  0012               	return	
  1769  000EF4                     __end_of___ftmul:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           prodl	equ	0xFF3
  1776                           indf2	equ	0xFDF
  1777                           postinc2	equ	0xFDE
  1778                           postdec2	equ	0xFDD
  1779                           fsr2h	equ	0xFDA
  1780                           fsr2l	equ	0xFD9
  1781                           status	equ	0xFD8
  1782                           
  1783 ;; *************** function ___ftadd *****************
  1784 ;; Defined at:
  1785 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  f1              3   20[COMRAM] float 
  1788 ;;  f2              3   23[COMRAM] float 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  exp1            1   31[COMRAM] unsigned char 
  1791 ;;  exp2            1   30[COMRAM] unsigned char 
  1792 ;;  sign            1   29[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  3   20[COMRAM] float 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1802 ;;      Params:         6       0       0       0       0       0       0
  1803 ;;      Locals:         3       0       0       0       0       0       0
  1804 ;;      Temps:          3       0       0       0       0       0       0
  1805 ;;      Totals:        12       0       0       0       0       0       0
  1806 ;;Total ram usage:       12 bytes
  1807 ;; Hardware stack levels used:    1
  1808 ;; Hardware stack levels required when called:    1
  1809 ;; This function calls:
  1810 ;;		___ftpack
  1811 ;; This function is called by:
  1812 ;;		_UART_TxFloatNumber
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text8
  1817  000B60                     __ptext8:
  1818                           	opt stack 0
  1819  000B60                     ___ftadd:
  1820                           	opt stack 27
  1821                           
  1822                           ;incstack = 0
  1823  000B60  C017  F01B         	movff	___ftadd@f1+2,??___ftadd
  1824  000B64  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  1825  000B66  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  1826  000B68  3416               	rlcf	___ftadd@f1+1,w,c
  1827  000B6A  361B               	rlcf	??___ftadd& (0+255),f,c
  1828  000B6C  E301               	bnc	u1141
  1829  000B6E  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  1830  000B70                     u1141:
  1831  000B70  501B               	movf	??___ftadd,w,c
  1832  000B72  6E20               	movwf	___ftadd@exp1,c
  1833  000B74  C01A  F01B         	movff	___ftadd@f2+2,??___ftadd
  1834  000B78  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  1835  000B7A  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  1836  000B7C  3419               	rlcf	___ftadd@f2+1,w,c
  1837  000B7E  361B               	rlcf	??___ftadd& (0+255),f,c
  1838  000B80  E301               	bnc	u1151
  1839  000B82  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  1840  000B84                     u1151:
  1841  000B84  501B               	movf	??___ftadd,w,c
  1842  000B86  6E1F               	movwf	___ftadd@exp2,c
  1843  000B88  5020               	movf	___ftadd@exp1,w,c
  1844  000B8A  B4D8               	btfsc	status,2,c
  1845  000B8C  D00B               	goto	l430
  1846  000B8E  501F               	movf	___ftadd@exp2,w,c
  1847  000B90  5C20               	subwf	___ftadd@exp1,w,c
  1848  000B92  B0D8               	btfsc	status,0,c
  1849  000B94  D00E               	goto	l1454
  1850  000B96  5020               	movf	___ftadd@exp1,w,c
  1851  000B98  0800               	sublw	0
  1852  000B9A  241F               	addwf	___ftadd@exp2,w,c
  1853  000B9C  6E1B               	movwf	??___ftadd& (0+255),c
  1854  000B9E  0E18               	movlw	24
  1855  000BA0  641B               	cpfsgt	??___ftadd,c
  1856  000BA2  D007               	goto	l1454
  1857  000BA4                     l430:
  1858  000BA4  C018  F015         	movff	___ftadd@f2,?___ftadd
  1859  000BA8  C019  F016         	movff	___ftadd@f2+1,?___ftadd+1
  1860  000BAC  C01A  F017         	movff	___ftadd@f2+2,?___ftadd+2
  1861  000BB0  0012               	return	
  1862  000BB2                     l1454:
  1863  000BB2  501F               	movf	___ftadd@exp2,w,c
  1864  000BB4  B4D8               	btfsc	status,2,c
  1865  000BB6  D00B               	goto	l434
  1866  000BB8  5020               	movf	___ftadd@exp1,w,c
  1867  000BBA  5C1F               	subwf	___ftadd@exp2,w,c
  1868  000BBC  B0D8               	btfsc	status,0,c
  1869  000BBE  D00E               	goto	l1460
  1870  000BC0  501F               	movf	___ftadd@exp2,w,c
  1871  000BC2  0800               	sublw	0
  1872  000BC4  2420               	addwf	___ftadd@exp1,w,c
  1873  000BC6  6E1B               	movwf	??___ftadd& (0+255),c
  1874  000BC8  0E18               	movlw	24
  1875  000BCA  641B               	cpfsgt	??___ftadd,c
  1876  000BCC  D007               	goto	l1460
  1877  000BCE                     l434:
  1878  000BCE  C015  F015         	movff	___ftadd@f1,?___ftadd
  1879  000BD2  C016  F016         	movff	___ftadd@f1+1,?___ftadd+1
  1880  000BD6  C017  F017         	movff	___ftadd@f1+2,?___ftadd+2
  1881  000BDA  0012               	return	
  1882  000BDC                     l1460:
  1883  000BDC  0E06               	movlw	6
  1884  000BDE  6E1E               	movwf	___ftadd@sign,c
  1885  000BE0  BE17               	btfsc	___ftadd@f1+2,7,c
  1886  000BE2  8E1E               	bsf	___ftadd@sign,7,c
  1887  000BE4  BE1A               	btfsc	___ftadd@f2+2,7,c
  1888  000BE6  8C1E               	bsf	___ftadd@sign,6,c
  1889  000BE8  8E16               	bsf	___ftadd@f1+1,7,c
  1890  000BEA  0EFF               	movlw	255
  1891  000BEC  1615               	andwf	___ftadd@f1,f,c
  1892  000BEE  0EFF               	movlw	255
  1893  000BF0  1616               	andwf	___ftadd@f1+1,f,c
  1894  000BF2  0E00               	movlw	0
  1895  000BF4  1617               	andwf	___ftadd@f1+2,f,c
  1896  000BF6  8E19               	bsf	___ftadd@f2+1,7,c
  1897  000BF8  0EFF               	movlw	255
  1898  000BFA  1618               	andwf	___ftadd@f2,f,c
  1899  000BFC  0EFF               	movlw	255
  1900  000BFE  1619               	andwf	___ftadd@f2+1,f,c
  1901  000C00  0E00               	movlw	0
  1902  000C02  161A               	andwf	___ftadd@f2+2,f,c
  1903  000C04  501F               	movf	___ftadd@exp2,w,c
  1904  000C06  5C20               	subwf	___ftadd@exp1,w,c
  1905  000C08  B0D8               	btfsc	status,0,c
  1906  000C0A  D01B               	goto	l1486
  1907  000C0C                     l1476:
  1908  000C0C  90D8               	bcf	status,0,c
  1909  000C0E  3618               	rlcf	___ftadd@f2,f,c
  1910  000C10  3619               	rlcf	___ftadd@f2+1,f,c
  1911  000C12  361A               	rlcf	___ftadd@f2+2,f,c
  1912  000C14  061F               	decf	___ftadd@exp2,f,c
  1913  000C16  5020               	movf	___ftadd@exp1,w,c
  1914  000C18  181F               	xorwf	___ftadd@exp2,w,c
  1915  000C1A  B4D8               	btfsc	status,2,c
  1916  000C1C  D00D               	goto	l1484
  1917  000C1E  061E               	decf	___ftadd@sign,f,c
  1918  000C20  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  1919  000C24  0E07               	movlw	7
  1920  000C26  161B               	andwf	??___ftadd,f,c
  1921  000C28  B4D8               	btfsc	status,2,c
  1922  000C2A  D006               	goto	l1484
  1923  000C2C  D7EF               	goto	l1476
  1924  000C2E                     l1482:
  1925  000C2E  90D8               	bcf	status,0,c
  1926  000C30  3217               	rrcf	___ftadd@f1+2,f,c
  1927  000C32  3216               	rrcf	___ftadd@f1+1,f,c
  1928  000C34  3215               	rrcf	___ftadd@f1,f,c
  1929  000C36  2A20               	incf	___ftadd@exp1,f,c
  1930  000C38                     l1484:
  1931  000C38  501F               	movf	___ftadd@exp2,w,c
  1932  000C3A  1820               	xorwf	___ftadd@exp1,w,c
  1933  000C3C  B4D8               	btfsc	status,2,c
  1934  000C3E  D01F               	goto	l445
  1935  000C40  D7F6               	goto	l1482
  1936  000C42                     l1486:
  1937  000C42  5020               	movf	___ftadd@exp1,w,c
  1938  000C44  5C1F               	subwf	___ftadd@exp2,w,c
  1939  000C46  B0D8               	btfsc	status,0,c
  1940  000C48  D01A               	goto	l445
  1941  000C4A                     l1488:
  1942  000C4A  90D8               	bcf	status,0,c
  1943  000C4C  3615               	rlcf	___ftadd@f1,f,c
  1944  000C4E  3616               	rlcf	___ftadd@f1+1,f,c
  1945  000C50  3617               	rlcf	___ftadd@f1+2,f,c
  1946  000C52  0620               	decf	___ftadd@exp1,f,c
  1947  000C54  5020               	movf	___ftadd@exp1,w,c
  1948  000C56  181F               	xorwf	___ftadd@exp2,w,c
  1949  000C58  B4D8               	btfsc	status,2,c
  1950  000C5A  D00D               	goto	l1496
  1951  000C5C  061E               	decf	___ftadd@sign,f,c
  1952  000C5E  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  1953  000C62  0E07               	movlw	7
  1954  000C64  161B               	andwf	??___ftadd,f,c
  1955  000C66  B4D8               	btfsc	status,2,c
  1956  000C68  D006               	goto	l1496
  1957  000C6A  D7EF               	goto	l1488
  1958  000C6C                     l1494:
  1959  000C6C  90D8               	bcf	status,0,c
  1960  000C6E  321A               	rrcf	___ftadd@f2+2,f,c
  1961  000C70  3219               	rrcf	___ftadd@f2+1,f,c
  1962  000C72  3218               	rrcf	___ftadd@f2,f,c
  1963  000C74  2A1F               	incf	___ftadd@exp2,f,c
  1964  000C76                     l1496:
  1965  000C76  501F               	movf	___ftadd@exp2,w,c
  1966  000C78  1820               	xorwf	___ftadd@exp1,w,c
  1967  000C7A  A4D8               	btfss	status,2,c
  1968  000C7C  D7F7               	goto	l1494
  1969  000C7E                     l445:
  1970  000C7E  AE1E               	btfss	___ftadd@sign,7,c
  1971  000C80  D00C               	goto	l454
  1972  000C82  0EFF               	movlw	255
  1973  000C84  1A15               	xorwf	___ftadd@f1,f,c
  1974  000C86  0EFF               	movlw	255
  1975  000C88  1A16               	xorwf	___ftadd@f1+1,f,c
  1976  000C8A  0EFF               	movlw	255
  1977  000C8C  1A17               	xorwf	___ftadd@f1+2,f,c
  1978  000C8E  0E01               	movlw	1
  1979  000C90  2615               	addwf	___ftadd@f1,f,c
  1980  000C92  0E00               	movlw	0
  1981  000C94  2216               	addwfc	___ftadd@f1+1,f,c
  1982  000C96  0E00               	movlw	0
  1983  000C98  2217               	addwfc	___ftadd@f1+2,f,c
  1984  000C9A                     l454:
  1985  000C9A  AC1E               	btfss	___ftadd@sign,6,c
  1986  000C9C  D00C               	goto	l1502
  1987  000C9E  0EFF               	movlw	255
  1988  000CA0  1A18               	xorwf	___ftadd@f2,f,c
  1989  000CA2  0EFF               	movlw	255
  1990  000CA4  1A19               	xorwf	___ftadd@f2+1,f,c
  1991  000CA6  0EFF               	movlw	255
  1992  000CA8  1A1A               	xorwf	___ftadd@f2+2,f,c
  1993  000CAA  0E01               	movlw	1
  1994  000CAC  2618               	addwf	___ftadd@f2,f,c
  1995  000CAE  0E00               	movlw	0
  1996  000CB0  2219               	addwfc	___ftadd@f2+1,f,c
  1997  000CB2  0E00               	movlw	0
  1998  000CB4  221A               	addwfc	___ftadd@f2+2,f,c
  1999  000CB6                     l1502:
  2000  000CB6  0E00               	movlw	0
  2001  000CB8  6E1E               	movwf	___ftadd@sign,c
  2002  000CBA  5015               	movf	___ftadd@f1,w,c
  2003  000CBC  2618               	addwf	___ftadd@f2,f,c
  2004  000CBE  5016               	movf	___ftadd@f1+1,w,c
  2005  000CC0  2219               	addwfc	___ftadd@f2+1,f,c
  2006  000CC2  5017               	movf	___ftadd@f1+2,w,c
  2007  000CC4  221A               	addwfc	___ftadd@f2+2,f,c
  2008  000CC6  AE1A               	btfss	___ftadd@f2+2,7,c
  2009  000CC8  D00E               	goto	l1512
  2010  000CCA  0EFF               	movlw	255
  2011  000CCC  1A18               	xorwf	___ftadd@f2,f,c
  2012  000CCE  0EFF               	movlw	255
  2013  000CD0  1A19               	xorwf	___ftadd@f2+1,f,c
  2014  000CD2  0EFF               	movlw	255
  2015  000CD4  1A1A               	xorwf	___ftadd@f2+2,f,c
  2016  000CD6  0E01               	movlw	1
  2017  000CD8  2618               	addwf	___ftadd@f2,f,c
  2018  000CDA  0E00               	movlw	0
  2019  000CDC  2219               	addwfc	___ftadd@f2+1,f,c
  2020  000CDE  0E00               	movlw	0
  2021  000CE0  221A               	addwfc	___ftadd@f2+2,f,c
  2022  000CE2  0E01               	movlw	1
  2023  000CE4  6E1E               	movwf	___ftadd@sign,c
  2024  000CE6                     l1512:
  2025  000CE6  C018  F001         	movff	___ftadd@f2,___ftpack@arg
  2026  000CEA  C019  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2027  000CEE  C01A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2028  000CF2  C020  F004         	movff	___ftadd@exp1,___ftpack@exp
  2029  000CF6  C01E  F005         	movff	___ftadd@sign,___ftpack@sign
  2030  000CFA  ECEC  F007         	call	___ftpack	;wreg free
  2031  000CFE  C001  F015         	movff	?___ftpack,?___ftadd
  2032  000D02  C002  F016         	movff	?___ftpack+1,?___ftadd+1
  2033  000D06  C003  F017         	movff	?___ftpack+2,?___ftadd+2
  2034  000D0A  0012               	return	
  2035  000D0C                     __end_of___ftadd:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           prodl	equ	0xFF3
  2042                           indf2	equ	0xFDF
  2043                           postinc2	equ	0xFDE
  2044                           postdec2	equ	0xFDD
  2045                           fsr2h	equ	0xFDA
  2046                           fsr2l	equ	0xFD9
  2047                           status	equ	0xFD8
  2048                           
  2049 ;; *************** function ___ftpack *****************
  2050 ;; Defined at:
  2051 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  arg             3    0[COMRAM] unsigned um
  2054 ;;  exp             1    3[COMRAM] unsigned char 
  2055 ;;  sign            1    4[COMRAM] unsigned char 
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  3    0[COMRAM] float 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2067 ;;      Params:         5       0       0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0
  2069 ;;      Temps:          3       0       0       0       0       0       0
  2070 ;;      Totals:         8       0       0       0       0       0       0
  2071 ;;Total ram usage:        8 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		___ftadd
  2077 ;;		___ftmul
  2078 ;;		___lltoft
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	text9
  2083  000FD8                     __ptext9:
  2084                           	opt stack 0
  2085  000FD8                     ___ftpack:
  2086                           	opt stack 27
  2087                           
  2088                           ;incstack = 0
  2089  000FD8  5004               	movf	___ftpack@exp,w,c
  2090  000FDA  B4D8               	btfsc	status,2,c
  2091  000FDC  D005               	goto	l1342
  2092  000FDE  5001               	movf	___ftpack@arg,w,c
  2093  000FE0  1002               	iorwf	___ftpack@arg+1,w,c
  2094  000FE2  1003               	iorwf	___ftpack@arg+2,w,c
  2095  000FE4  A4D8               	btfss	status,2,c
  2096  000FE6  D00C               	goto	l1348
  2097  000FE8                     l1342:
  2098  000FE8  0E00               	movlw	0
  2099  000FEA  6E01               	movwf	?___ftpack,c
  2100  000FEC  0E00               	movlw	0
  2101  000FEE  6E02               	movwf	?___ftpack+1,c
  2102  000FF0  0E00               	movlw	0
  2103  000FF2  6E03               	movwf	?___ftpack+2,c
  2104  000FF4  0012               	return	
  2105  000FF6                     l1346:
  2106  000FF6  2A04               	incf	___ftpack@exp,f,c
  2107  000FF8  90D8               	bcf	status,0,c
  2108  000FFA  3203               	rrcf	___ftpack@arg+2,f,c
  2109  000FFC  3202               	rrcf	___ftpack@arg+1,f,c
  2110  000FFE  3201               	rrcf	___ftpack@arg,f,c
  2111  001000                     l1348:
  2112  001000  0E00               	movlw	0
  2113  001002  1401               	andwf	___ftpack@arg,w,c
  2114  001004  6E06               	movwf	??___ftpack& (0+255),c
  2115  001006  0E00               	movlw	0
  2116  001008  1402               	andwf	___ftpack@arg+1,w,c
  2117  00100A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2118  00100C  0EFE               	movlw	254
  2119  00100E  1403               	andwf	___ftpack@arg+2,w,c
  2120  001010  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2121  001012  5006               	movf	??___ftpack,w,c
  2122  001014  1007               	iorwf	??___ftpack+1,w,c
  2123  001016  1008               	iorwf	??___ftpack+2,w,c
  2124  001018  B4D8               	btfsc	status,2,c
  2125  00101A  D00C               	goto	l1354
  2126  00101C  D7EC               	goto	l1346
  2127  00101E                     l1350:
  2128  00101E  2A04               	incf	___ftpack@exp,f,c
  2129  001020  0E01               	movlw	1
  2130  001022  2601               	addwf	___ftpack@arg,f,c
  2131  001024  0E00               	movlw	0
  2132  001026  2202               	addwfc	___ftpack@arg+1,f,c
  2133  001028  0E00               	movlw	0
  2134  00102A  2203               	addwfc	___ftpack@arg+2,f,c
  2135  00102C  90D8               	bcf	status,0,c
  2136  00102E  3203               	rrcf	___ftpack@arg+2,f,c
  2137  001030  3202               	rrcf	___ftpack@arg+1,f,c
  2138  001032  3201               	rrcf	___ftpack@arg,f,c
  2139  001034                     l1354:
  2140  001034  0E00               	movlw	0
  2141  001036  1401               	andwf	___ftpack@arg,w,c
  2142  001038  6E06               	movwf	??___ftpack& (0+255),c
  2143  00103A  0E00               	movlw	0
  2144  00103C  1402               	andwf	___ftpack@arg+1,w,c
  2145  00103E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2146  001040  0EFF               	movlw	255
  2147  001042  1403               	andwf	___ftpack@arg+2,w,c
  2148  001044  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2149  001046  5006               	movf	??___ftpack,w,c
  2150  001048  1007               	iorwf	??___ftpack+1,w,c
  2151  00104A  1008               	iorwf	??___ftpack+2,w,c
  2152  00104C  B4D8               	btfsc	status,2,c
  2153  00104E  D006               	goto	l1358
  2154  001050  D7E6               	goto	l1350
  2155  001052                     l1356:
  2156  001052  0604               	decf	___ftpack@exp,f,c
  2157  001054  90D8               	bcf	status,0,c
  2158  001056  3601               	rlcf	___ftpack@arg,f,c
  2159  001058  3602               	rlcf	___ftpack@arg+1,f,c
  2160  00105A  3603               	rlcf	___ftpack@arg+2,f,c
  2161  00105C                     l1358:
  2162  00105C  BE02               	btfsc	___ftpack@arg+1,7,c
  2163  00105E  D003               	goto	l407
  2164  001060  0E02               	movlw	2
  2165  001062  6004               	cpfslt	___ftpack@exp,c
  2166  001064  D7F6               	goto	l1356
  2167  001066                     l407:
  2168  001066  A004               	btfss	___ftpack@exp,0,c
  2169  001068  9E02               	bcf	___ftpack@arg+1,7,c
  2170  00106A  90D8               	bcf	status,0,c
  2171  00106C  3204               	rrcf	___ftpack@exp,f,c
  2172  00106E  5004               	movf	___ftpack@exp,w,c
  2173  001070  1203               	iorwf	___ftpack@arg+2,f,c
  2174  001072  5005               	movf	___ftpack@sign,w,c
  2175  001074  A4D8               	btfss	status,2,c
  2176  001076  8E03               	bsf	___ftpack@arg+2,7,c
  2177  001078  C001  F001         	movff	___ftpack@arg,?___ftpack
  2178  00107C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2179  001080  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2180  001084  0012               	return	
  2181  001086                     __end_of___ftpack:
  2182                           	opt stack 0
  2183                           tblptru	equ	0xFF8
  2184                           tblptrh	equ	0xFF7
  2185                           tblptrl	equ	0xFF6
  2186                           tablat	equ	0xFF5
  2187                           prodl	equ	0xFF3
  2188                           indf2	equ	0xFDF
  2189                           postinc2	equ	0xFDE
  2190                           postdec2	equ	0xFDD
  2191                           fsr2h	equ	0xFDA
  2192                           fsr2l	equ	0xFD9
  2193                           status	equ	0xFD8
  2194                           
  2195 ;; *************** function _UART_TxNumber *****************
  2196 ;; Defined at:
  2197 ;;		line 260 in file "../00-libfiles/uart.c"
  2198 ;; Parameters:    Size  Location     Type
  2199 ;;  v_numericSys    1    wreg     unsigned char 
  2200 ;;  v_number_u32    4   13[COMRAM] unsigned long 
  2201 ;;  v_numOfDigit    1   17[COMRAM] unsigned char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  v_numericSys    1   41[COMRAM] unsigned char 
  2204 ;;  a              10   29[COMRAM] unsigned char [10]
  2205 ;;  i               1   42[COMRAM] unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2215 ;;      Params:         5       0       0       0       0       0       0
  2216 ;;      Locals:        14       0       0       0       0       0       0
  2217 ;;      Temps:         11       0       0       0       0       0       0
  2218 ;;      Totals:        30       0       0       0       0       0       0
  2219 ;;Total ram usage:       30 bytes
  2220 ;; Hardware stack levels used:    1
  2221 ;; Hardware stack levels required when called:    1
  2222 ;; This function calls:
  2223 ;;		_UART_TxChar
  2224 ;;		___lldiv
  2225 ;; This function is called by:
  2226 ;;		_UART_TxFloatNumber
  2227 ;;		_UART_Printf
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           	psect	text10
  2232  000990                     __ptext10:
  2233                           	opt stack 0
  2234  000990                     _UART_TxNumber:
  2235                           	opt stack 28
  2236                           
  2237                           ;incstack = 0
  2238                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  2239  000990  6E2A               	movwf	UART_TxNumber@v_numericSystem_u8,c
  2240                           
  2241                           ;uart.c: 262: uint8_t i=0,a[10];
  2242  000992  0E00               	movlw	0
  2243  000994  6E2B               	movwf	UART_TxNumber@i,c
  2244                           
  2245                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  2246  000996  0E02               	movlw	2
  2247  000998  182A               	xorwf	UART_TxNumber@v_numericSystem_u8,w,c
  2248  00099A  B4D8               	btfsc	status,2,c
  2249  00099C  D034               	goto	l1408
  2250  00099E  D037               	goto	l1410
  2251  0009A0                     l1402:
  2252                           
  2253                           ;uart.c: 267: {
  2254                           ;uart.c: 270: i = (((v_number_u32)&(((uint8_t)1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u
      +                          );
  2255  0009A0  C012  F013         	movff	UART_TxNumber@v_numOfDigitsToTransmit_u8,??_UART_TxNumber
  2256  0009A4  0EFF               	movlw	-1
  2257  0009A6  2613               	addwf	??_UART_TxNumber,f,c
  2258  0009A8  0E01               	movlw	1
  2259  0009AA  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2260  0009AC  0E00               	movlw	0
  2261  0009AE  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2262  0009B0  2A13               	incf	??_UART_TxNumber,f,c
  2263  0009B2  D003               	goto	u1034
  2264  0009B4                     u1035:
  2265  0009B4  90D8               	bcf	status,0,c
  2266  0009B6  3614               	rlcf	??_UART_TxNumber+1,f,c
  2267  0009B8  3615               	rlcf	??_UART_TxNumber+2,f,c
  2268  0009BA                     u1034:
  2269  0009BA  2E13               	decfsz	??_UART_TxNumber,f,c
  2270  0009BC  D7FB               	goto	u1035
  2271  0009BE  C014  F016         	movff	??_UART_TxNumber+1,??_UART_TxNumber+3
  2272  0009C2  C015  F017         	movff	??_UART_TxNumber+2,??_UART_TxNumber+4
  2273  0009C6  0E00               	movlw	0
  2274  0009C8  BE17               	btfsc	(??_UART_TxNumber+4)& (0+255),7,c
  2275  0009CA  0EFF               	movlw	255
  2276  0009CC  6E18               	movwf	(??_UART_TxNumber+5)& (0+255),c
  2277  0009CE  6E19               	movwf	(??_UART_TxNumber+6)& (0+255),c
  2278  0009D0  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2279  0009D2  1416               	andwf	??_UART_TxNumber+3,w,c
  2280  0009D4  6E1A               	movwf	(??_UART_TxNumber+7)& (0+255),c
  2281  0009D6  500F               	movf	UART_TxNumber@v_number_u32+1,w,c
  2282  0009D8  1417               	andwf	??_UART_TxNumber+4,w,c
  2283  0009DA  6E1B               	movwf	(??_UART_TxNumber+8)& (0+255),c
  2284  0009DC  5010               	movf	UART_TxNumber@v_number_u32+2,w,c
  2285  0009DE  1418               	andwf	??_UART_TxNumber+5,w,c
  2286  0009E0  6E1C               	movwf	(??_UART_TxNumber+9)& (0+255),c
  2287  0009E2  5011               	movf	UART_TxNumber@v_number_u32+3,w,c
  2288  0009E4  1419               	andwf	??_UART_TxNumber+6,w,c
  2289  0009E6  6E1D               	movwf	(??_UART_TxNumber+10)& (0+255),c
  2290  0009E8  501A               	movf	??_UART_TxNumber+7,w,c
  2291  0009EA  101B               	iorwf	??_UART_TxNumber+8,w,c
  2292  0009EC  101C               	iorwf	??_UART_TxNumber+9,w,c
  2293  0009EE  101D               	iorwf	??_UART_TxNumber+10,w,c
  2294  0009F0  B4D8               	btfsc	status,2,c
  2295  0009F2  D002               	goto	u1040
  2296  0009F4  0E01               	movlw	1
  2297  0009F6  D001               	goto	u1050
  2298  0009F8                     u1040:
  2299  0009F8  0E00               	movlw	0
  2300  0009FA                     u1050:
  2301  0009FA  6E2B               	movwf	UART_TxNumber@i,c
  2302                           
  2303                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  2304  0009FC  502B               	movf	UART_TxNumber@i,w,c
  2305  0009FE  0F30               	addlw	48
  2306  000A00  EC75  F009         	call	_UART_TxChar
  2307                           
  2308                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  2309  000A04  0612               	decf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f,c
  2310  000A06                     l1408:
  2311  000A06  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2312  000A08  B4D8               	btfsc	status,2,c
  2313  000A0A  0012               	return	
  2314  000A0C  D7C9               	goto	l1402
  2315  000A0E                     l1410:
  2316                           
  2317                           ;uart.c: 275: else if(v_number_u32==0)
  2318  000A0E  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2319  000A10  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  2320  000A12  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  2321  000A14  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  2322  000A16  A4D8               	btfss	status,2,c
  2323  000A18  D004               	goto	l1414
  2324                           
  2325                           ;uart.c: 276: {
  2326                           ;uart.c: 280: UART_TxChar('0');
  2327  000A1A  0E30               	movlw	48
  2328  000A1C  EC75  F009         	call	_UART_TxChar
  2329                           
  2330                           ;uart.c: 281: }
  2331  000A20  0012               	return	
  2332  000A22                     l1414:
  2333                           
  2334                           ;uart.c: 282: else
  2335                           ;uart.c: 283: {
  2336                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  2337  000A22  0E00               	movlw	0
  2338  000A24  6E2B               	movwf	UART_TxNumber@i,c
  2339  000A26  D04D               	goto	l1432
  2340  000A28                     l1416:
  2341                           
  2342                           ;uart.c: 285: {
  2343                           ;uart.c: 288: if(v_number_u32!=0)
  2344  000A28  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2345  000A2A  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  2346  000A2C  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  2347  000A2E  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  2348  000A30  B4D8               	btfsc	status,2,c
  2349  000A32  D035               	goto	l1422
  2350                           
  2351                           ;uart.c: 289: {
  2352                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  2353  000A34  502B               	movf	UART_TxNumber@i,w,c
  2354  000A36  0D01               	mullw	1
  2355  000A38  0E1E               	movlw	low UART_TxNumber@a
  2356  000A3A  24F3               	addwf	prodl,w,c
  2357  000A3C  6ED9               	movwf	fsr2l,c
  2358  000A3E  0E00               	movlw	high UART_TxNumber@a
  2359  000A40  20F4               	addwfc	prodh,w,c
  2360  000A42  6EDA               	movwf	fsr2h,c
  2361  000A44  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  2362  000A48  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  2363  000A4C  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  2364  000A50  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  2365  000A54  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  2366  000A56  6E05               	movwf	___lldiv@divisor,c
  2367  000A58  6A06               	clrf	___lldiv@divisor+1,c
  2368  000A5A  6A07               	clrf	___lldiv@divisor+2,c
  2369  000A5C  6A08               	clrf	___lldiv@divisor+3,c
  2370  000A5E  EC43  F008         	call	___lldiv	;wreg free
  2371  000A62  5001               	movf	?___lldiv,w,c
  2372  000A64  022A               	mulwf	UART_TxNumber@v_numericSystem_u8,c
  2373  000A66  50F3               	movf	prodl,w,c
  2374  000A68  0800               	sublw	0
  2375  000A6A  240E               	addwf	UART_TxNumber@v_number_u32,w,c
  2376  000A6C  6EDF               	movwf	indf2,c
  2377                           
  2378                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  2379  000A6E  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  2380  000A72  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  2381  000A76  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  2382  000A7A  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  2383  000A7E  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  2384  000A80  6E05               	movwf	___lldiv@divisor,c
  2385  000A82  6A06               	clrf	___lldiv@divisor+1,c
  2386  000A84  6A07               	clrf	___lldiv@divisor+2,c
  2387  000A86  6A08               	clrf	___lldiv@divisor+3,c
  2388  000A88  EC43  F008         	call	___lldiv	;wreg free
  2389  000A8C  C001  F00E         	movff	?___lldiv,UART_TxNumber@v_number_u32
  2390  000A90  C002  F00F         	movff	?___lldiv+1,UART_TxNumber@v_number_u32+1
  2391  000A94  C003  F010         	movff	?___lldiv+2,UART_TxNumber@v_number_u32+2
  2392  000A98  C004  F011         	movff	?___lldiv+3,UART_TxNumber@v_number_u32+3
  2393                           
  2394                           ;uart.c: 298: }
  2395  000A9C  D011               	goto	l1430
  2396  000A9E                     l1422:
  2397                           
  2398                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  2399                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  2400  000A9E  2812               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2401  000AA0  B4D8               	btfsc	status,2,c
  2402  000AA2  D05A               	goto	l1444
  2403  000AA4  0E0A               	movlw	10
  2404  000AA6  6412               	cpfsgt	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  2405  000AA8  D001               	goto	l1428
  2406  000AAA  D056               	goto	l1444
  2407  000AAC                     l1428:
  2408                           
  2409                           ;uart.c: 306: else
  2410                           ;uart.c: 307: {
  2411                           ;uart.c: 311: a[i]=0;
  2412  000AAC  502B               	movf	UART_TxNumber@i,w,c
  2413  000AAE  0D01               	mullw	1
  2414  000AB0  0E1E               	movlw	low UART_TxNumber@a
  2415  000AB2  24F3               	addwf	prodl,w,c
  2416  000AB4  6ED9               	movwf	fsr2l,c
  2417  000AB6  0E00               	movlw	high UART_TxNumber@a
  2418  000AB8  20F4               	addwfc	prodh,w,c
  2419  000ABA  6EDA               	movwf	fsr2h,c
  2420  000ABC  0E00               	movlw	0
  2421  000ABE  6EDF               	movwf	indf2,c
  2422  000AC0                     l1430:
  2423  000AC0  2A2B               	incf	UART_TxNumber@i,f,c
  2424  000AC2                     l1432:
  2425  000AC2  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2426  000AC4  5C2B               	subwf	UART_TxNumber@i,w,c
  2427  000AC6  B0D8               	btfsc	status,0,c
  2428  000AC8  D047               	goto	l1444
  2429  000ACA  D7AE               	goto	l1416
  2430  000ACC                     l1434:
  2431                           
  2432                           ;uart.c: 316: {
  2433                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  2434  000ACC  0EFF               	movlw	255
  2435  000ACE  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2436  000AD0  0EFF               	movlw	255
  2437  000AD2  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2438  000AD4  502B               	movf	UART_TxNumber@i,w,c
  2439  000AD6  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2440  000AD8  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2441  000ADA  5013               	movf	??_UART_TxNumber,w,c
  2442  000ADC  2615               	addwf	??_UART_TxNumber+2,f,c
  2443  000ADE  5014               	movf	??_UART_TxNumber+1,w,c
  2444  000AE0  2216               	addwfc	??_UART_TxNumber+3,f,c
  2445  000AE2  0E1E               	movlw	low UART_TxNumber@a
  2446  000AE4  2415               	addwf	??_UART_TxNumber+2,w,c
  2447  000AE6  6ED9               	movwf	fsr2l,c
  2448  000AE8  0E00               	movlw	high UART_TxNumber@a
  2449  000AEA  2016               	addwfc	??_UART_TxNumber+3,w,c
  2450  000AEC  6EDA               	movwf	fsr2h,c
  2451  000AEE  0E0A               	movlw	10
  2452  000AF0  60DF               	cpfslt	indf2,c
  2453  000AF2  D015               	goto	l1438
  2454  000AF4  0EFF               	movlw	255
  2455  000AF6  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2456  000AF8  0EFF               	movlw	255
  2457  000AFA  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2458  000AFC  502B               	movf	UART_TxNumber@i,w,c
  2459  000AFE  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2460  000B00  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2461  000B02  5013               	movf	??_UART_TxNumber,w,c
  2462  000B04  2615               	addwf	??_UART_TxNumber+2,f,c
  2463  000B06  5014               	movf	??_UART_TxNumber+1,w,c
  2464  000B08  2216               	addwfc	??_UART_TxNumber+3,f,c
  2465  000B0A  0E1E               	movlw	low UART_TxNumber@a
  2466  000B0C  2415               	addwf	??_UART_TxNumber+2,w,c
  2467  000B0E  6ED9               	movwf	fsr2l,c
  2468  000B10  0E00               	movlw	high UART_TxNumber@a
  2469  000B12  2016               	addwfc	??_UART_TxNumber+3,w,c
  2470  000B14  6EDA               	movwf	fsr2h,c
  2471  000B16  50DF               	movf	indf2,w,c
  2472  000B18  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  2473  000B1A  0E30               	movlw	48
  2474  000B1C  D014               	goto	L1
  2475  000B1E                     l1438:
  2476  000B1E  0EFF               	movlw	255
  2477  000B20  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2478  000B22  0EFF               	movlw	255
  2479  000B24  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2480  000B26  502B               	movf	UART_TxNumber@i,w,c
  2481  000B28  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2482  000B2A  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2483  000B2C  5013               	movf	??_UART_TxNumber,w,c
  2484  000B2E  2615               	addwf	??_UART_TxNumber+2,f,c
  2485  000B30  5014               	movf	??_UART_TxNumber+1,w,c
  2486  000B32  2216               	addwfc	??_UART_TxNumber+3,f,c
  2487  000B34  0E1E               	movlw	low UART_TxNumber@a
  2488  000B36  2415               	addwf	??_UART_TxNumber+2,w,c
  2489  000B38  6ED9               	movwf	fsr2l,c
  2490  000B3A  0E00               	movlw	high UART_TxNumber@a
  2491  000B3C  2016               	addwfc	??_UART_TxNumber+3,w,c
  2492  000B3E  6EDA               	movwf	fsr2h,c
  2493  000B40  50DF               	movf	indf2,w,c
  2494  000B42  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  2495  000B44  0E37               	movlw	55
  2496  000B46                     L1:
  2497  000B46  2417               	addwf	??_UART_TxNumber+4,w,c
  2498  000B48  6E28               	movwf	_UART_TxNumber$76,c
  2499  000B4A  6A29               	clrf	_UART_TxNumber$76+1,c
  2500  000B4C  0E00               	movlw	0
  2501  000B4E  2229               	addwfc	_UART_TxNumber$76+1,f,c
  2502  000B50  5028               	movf	_UART_TxNumber$76,w,c
  2503  000B52  EC75  F009         	call	_UART_TxChar
  2504                           
  2505                           ;uart.c: 319: i--;
  2506  000B56  062B               	decf	UART_TxNumber@i,f,c
  2507  000B58                     l1444:
  2508  000B58  502B               	movf	UART_TxNumber@i,w,c
  2509  000B5A  B4D8               	btfsc	status,2,c
  2510  000B5C  0012               	return	
  2511  000B5E  D7B6               	goto	l1434
  2512  000B60                     __end_of_UART_TxNumber:
  2513                           	opt stack 0
  2514                           tblptru	equ	0xFF8
  2515                           tblptrh	equ	0xFF7
  2516                           tblptrl	equ	0xFF6
  2517                           tablat	equ	0xFF5
  2518                           prodh	equ	0xFF4
  2519                           prodl	equ	0xFF3
  2520                           indf2	equ	0xFDF
  2521                           postinc2	equ	0xFDE
  2522                           postdec2	equ	0xFDD
  2523                           fsr2h	equ	0xFDA
  2524                           fsr2l	equ	0xFD9
  2525                           status	equ	0xFD8
  2526                           
  2527 ;; *************** function _UART_TxChar *****************
  2528 ;; Defined at:
  2529 ;;		line 145 in file "../00-libfiles/uart.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  v_uartData_u    1    wreg     unsigned char 
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;  v_uartData_u    1    0[COMRAM] unsigned char 
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2543 ;;      Params:         0       0       0       0       0       0       0
  2544 ;;      Locals:         1       0       0       0       0       0       0
  2545 ;;      Temps:          0       0       0       0       0       0       0
  2546 ;;      Totals:         1       0       0       0       0       0       0
  2547 ;;Total ram usage:        1 bytes
  2548 ;; Hardware stack levels used:    1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_UART_TxString
  2553 ;;		_UART_TxNumber
  2554 ;;		_UART_TxFloatNumber
  2555 ;;		_UART_Printf
  2556 ;;		_UART_RxString
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text11
  2561  0012EA                     __ptext11:
  2562                           	opt stack 0
  2563  0012EA                     _UART_TxChar:
  2564                           	opt stack 28
  2565                           
  2566                           ;incstack = 0
  2567                           ;UART_TxChar@v_uartData_u8 stored from wreg
  2568  0012EA  6E01               	movwf	UART_TxChar@v_uartData_u8,c
  2569  0012EC                     l61:
  2570  0012EC  A89E               	btfss	3998,4,c	;volatile
  2571  0012EE  D7FE               	goto	l61
  2572                           
  2573                           ;uart.c: 148: TXIF=0;
  2574  0012F0  989E               	bcf	3998,4,c	;volatile
  2575                           
  2576                           ;uart.c: 149: TXREG=v_uartData_u8;
  2577  0012F2  C001  FFAD         	movff	UART_TxChar@v_uartData_u8,4013	;volatile
  2578  0012F6  0012               	return		;funcret
  2579  0012F8                     __end_of_UART_TxChar:
  2580                           	opt stack 0
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           prodh	equ	0xFF4
  2586                           prodl	equ	0xFF3
  2587                           indf2	equ	0xFDF
  2588                           postinc2	equ	0xFDE
  2589                           postdec2	equ	0xFDD
  2590                           fsr2h	equ	0xFDA
  2591                           fsr2l	equ	0xFD9
  2592                           status	equ	0xFD8
  2593                           
  2594 ;; *************** function _UART_Init *****************
  2595 ;; Defined at:
  2596 ;;		line 66 in file "../00-libfiles/uart.c"
  2597 ;; Parameters:    Size  Location     Type
  2598 ;;  v_baudRate_u    4   22[COMRAM] unsigned long 
  2599 ;; Auto vars:     Size  Location     Type
  2600 ;;		None
  2601 ;; Return value:  Size  Location     Type
  2602 ;;                  1    wreg      void 
  2603 ;; Registers used:
  2604 ;;		wreg, status,2, status,0, cstack
  2605 ;; Tracked objects:
  2606 ;;		On entry : 0/0
  2607 ;;		On exit  : 0/0
  2608 ;;		Unchanged: 0/0
  2609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2610 ;;      Params:         4       0       0       0       0       0       0
  2611 ;;      Locals:         0       0       0       0       0       0       0
  2612 ;;      Temps:          0       0       0       0       0       0       0
  2613 ;;      Totals:         4       0       0       0       0       0       0
  2614 ;;Total ram usage:        4 bytes
  2615 ;; Hardware stack levels used:    1
  2616 ;; Hardware stack levels required when called:    2
  2617 ;; This function calls:
  2618 ;;		_UART_SetBaudRate
  2619 ;; This function is called by:
  2620 ;;		_main
  2621 ;; This function uses a non-reentrant model
  2622 ;;
  2623                           
  2624                           	psect	text12
  2625  0012B8                     __ptext12:
  2626                           	opt stack 0
  2627  0012B8                     _UART_Init:
  2628                           	opt stack 28
  2629                           
  2630                           ;uart.c: 68: TRISC=0x80;
  2631                           
  2632                           ;incstack = 0
  2633  0012B8  0E80               	movlw	128
  2634  0012BA  6E94               	movwf	3988,c	;volatile
  2635                           
  2636                           ;uart.c: 69: TXSTA=0x20;
  2637  0012BC  0E20               	movlw	32
  2638  0012BE  6EAC               	movwf	4012,c	;volatile
  2639                           
  2640                           ;uart.c: 70: RCSTA=0x90;
  2641  0012C0  0E90               	movlw	144
  2642  0012C2  6EAB               	movwf	4011,c	;volatile
  2643                           
  2644                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  2645  0012C4  C017  F00E         	movff	UART_Init@v_baudRate_u32,UART_SetBaudRate@v_baudRate_u32
  2646  0012C8  C018  F00F         	movff	UART_Init@v_baudRate_u32+1,UART_SetBaudRate@v_baudRate_u32+1
  2647  0012CC  C019  F010         	movff	UART_Init@v_baudRate_u32+2,UART_SetBaudRate@v_baudRate_u32+2
  2648  0012D0  C01A  F011         	movff	UART_Init@v_baudRate_u32+3,UART_SetBaudRate@v_baudRate_u32+3
  2649  0012D4  EC84  F008         	call	_UART_SetBaudRate	;wreg free
  2650  0012D8  0012               	return		;funcret
  2651  0012DA                     __end_of_UART_Init:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           prodh	equ	0xFF4
  2658                           prodl	equ	0xFF3
  2659                           indf2	equ	0xFDF
  2660                           postinc2	equ	0xFDE
  2661                           postdec2	equ	0xFDD
  2662                           fsr2h	equ	0xFDA
  2663                           fsr2l	equ	0xFD9
  2664                           status	equ	0xFD8
  2665                           
  2666 ;; *************** function _UART_SetBaudRate *****************
  2667 ;; Defined at:
  2668 ;;		line 91 in file "../00-libfiles/uart.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;  v_baudRate_u    4   13[COMRAM] unsigned long 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  RegValue        1   21[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		wreg, status,2, status,0, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2682 ;;      Params:         4       0       0       0       0       0       0
  2683 ;;      Locals:         1       0       0       0       0       0       0
  2684 ;;      Temps:          4       0       0       0       0       0       0
  2685 ;;      Totals:         9       0       0       0       0       0       0
  2686 ;;Total ram usage:        9 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; Hardware stack levels required when called:    1
  2689 ;; This function calls:
  2690 ;;		___lldiv
  2691 ;; This function is called by:
  2692 ;;		_UART_Init
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text13
  2697  001108                     __ptext13:
  2698                           	opt stack 0
  2699  001108                     _UART_SetBaudRate:
  2700                           	opt stack 28
  2701                           
  2702                           ;uart.c: 93: uint8_t RegValue;
  2703                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  2704                           
  2705                           ;incstack = 0
  2706  001108  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  2707  00110A  1010               	iorwf	UART_SetBaudRate@v_baudRate_u32+2,w,c
  2708  00110C  E106               	bnz	u1510
  2709  00110E  0E60               	movlw	96
  2710  001110  5C0E               	subwf	UART_SetBaudRate@v_baudRate_u32,w,c
  2711  001112  0E09               	movlw	9
  2712  001114  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  2713  001116  A0D8               	btfss	status,0,c
  2714  001118  D02D               	goto	l1630
  2715  00111A                     u1510:
  2716  00111A  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  2717  00111C  E12B               	bnz	l1630
  2718  00111E  040E               	decf	UART_SetBaudRate@v_baudRate_u32,w,c
  2719  001120  0EC2               	movlw	194
  2720  001122  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  2721  001124  0E01               	movlw	1
  2722  001126  5810               	subwfb	UART_SetBaudRate@v_baudRate_u32+2,w,c
  2723  001128  B0D8               	btfsc	status,0,c
  2724  00112A  D024               	goto	l1630
  2725                           
  2726                           ;uart.c: 96: {
  2727                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  2728  00112C  0E00               	movlw	0
  2729  00112E  6E01               	movwf	___lldiv@dividend,c
  2730  001130  0E2D               	movlw	45
  2731  001132  6E02               	movwf	___lldiv@dividend+1,c
  2732  001134  0E31               	movlw	49
  2733  001136  6E03               	movwf	___lldiv@dividend+2,c
  2734  001138  0E01               	movlw	1
  2735  00113A  6E04               	movwf	___lldiv@dividend+3,c
  2736  00113C  C00E  F012         	movff	UART_SetBaudRate@v_baudRate_u32,??_UART_SetBaudRate
  2737  001140  C00F  F013         	movff	UART_SetBaudRate@v_baudRate_u32+1,??_UART_SetBaudRate+1
  2738  001144  C010  F014         	movff	UART_SetBaudRate@v_baudRate_u32+2,??_UART_SetBaudRate+2
  2739  001148  C011  F015         	movff	UART_SetBaudRate@v_baudRate_u32+3,??_UART_SetBaudRate+3
  2740  00114C  0E06               	movlw	6
  2741  00114E                     u1535:
  2742  00114E  90D8               	bcf	status,0,c
  2743  001150  3612               	rlcf	??_UART_SetBaudRate,f,c
  2744  001152  3613               	rlcf	??_UART_SetBaudRate+1,f,c
  2745  001154  3614               	rlcf	??_UART_SetBaudRate+2,f,c
  2746  001156  3615               	rlcf	??_UART_SetBaudRate+3,f,c
  2747  001158  2EE8               	decfsz	wreg,f,c
  2748  00115A  D7F9               	goto	u1535
  2749  00115C  C012  F005         	movff	??_UART_SetBaudRate,___lldiv@divisor
  2750  001160  C013  F006         	movff	??_UART_SetBaudRate+1,___lldiv@divisor+1
  2751  001164  C014  F007         	movff	??_UART_SetBaudRate+2,___lldiv@divisor+2
  2752  001168  C015  F008         	movff	??_UART_SetBaudRate+3,___lldiv@divisor+3
  2753  00116C  EC43  F008         	call	___lldiv	;wreg free
  2754  001170  0401               	decf	?___lldiv,w,c
  2755  001172  D001               	goto	L2
  2756  001174                     l1630:
  2757                           
  2758                           ;uart.c: 101: else
  2759                           ;uart.c: 102: {
  2760                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  2761  001174  0E1F               	movlw	31
  2762  001176                     L2:
  2763  001176  6E16               	movwf	UART_SetBaudRate@RegValue,c
  2764                           
  2765                           ;uart.c: 105: }
  2766                           ;uart.c: 107: SPBRG = RegValue;
  2767  001178  C016  FFAF         	movff	UART_SetBaudRate@RegValue,4015	;volatile
  2768  00117C  0012               	return		;funcret
  2769  00117E                     __end_of_UART_SetBaudRate:
  2770                           	opt stack 0
  2771                           tblptru	equ	0xFF8
  2772                           tblptrh	equ	0xFF7
  2773                           tblptrl	equ	0xFF6
  2774                           tablat	equ	0xFF5
  2775                           prodh	equ	0xFF4
  2776                           prodl	equ	0xFF3
  2777                           wreg	equ	0xFE8
  2778                           indf2	equ	0xFDF
  2779                           postinc2	equ	0xFDE
  2780                           postdec2	equ	0xFDD
  2781                           fsr2h	equ	0xFDA
  2782                           fsr2l	equ	0xFD9
  2783                           status	equ	0xFD8
  2784                           
  2785 ;; *************** function ___lldiv *****************
  2786 ;; Defined at:
  2787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  dividend        4    0[COMRAM] unsigned long 
  2790 ;;  divisor         4    4[COMRAM] unsigned long 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  quotient        4    8[COMRAM] unsigned long 
  2793 ;;  counter         1   12[COMRAM] unsigned char 
  2794 ;; Return value:  Size  Location     Type
  2795 ;;                  4    0[COMRAM] unsigned long 
  2796 ;; Registers used:
  2797 ;;		wreg, status,2, status,0
  2798 ;; Tracked objects:
  2799 ;;		On entry : 0/0
  2800 ;;		On exit  : 0/0
  2801 ;;		Unchanged: 0/0
  2802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2803 ;;      Params:         8       0       0       0       0       0       0
  2804 ;;      Locals:         5       0       0       0       0       0       0
  2805 ;;      Temps:          0       0       0       0       0       0       0
  2806 ;;      Totals:        13       0       0       0       0       0       0
  2807 ;;Total ram usage:       13 bytes
  2808 ;; Hardware stack levels used:    1
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_UART_SetBaudRate
  2813 ;;		_UART_TxNumber
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text14
  2818  001086                     __ptext14:
  2819                           	opt stack 0
  2820  001086                     ___lldiv:
  2821                           	opt stack 28
  2822                           
  2823                           ;incstack = 0
  2824  001086  0E00               	movlw	0
  2825  001088  6E09               	movwf	___lldiv@quotient,c
  2826  00108A  0E00               	movlw	0
  2827  00108C  6E0A               	movwf	___lldiv@quotient+1,c
  2828  00108E  0E00               	movlw	0
  2829  001090  6E0B               	movwf	___lldiv@quotient+2,c
  2830  001092  0E00               	movlw	0
  2831  001094  6E0C               	movwf	___lldiv@quotient+3,c
  2832  001096  5005               	movf	___lldiv@divisor,w,c
  2833  001098  1006               	iorwf	___lldiv@divisor+1,w,c
  2834  00109A  1007               	iorwf	___lldiv@divisor+2,w,c
  2835  00109C  1008               	iorwf	___lldiv@divisor+3,w,c
  2836  00109E  B4D8               	btfsc	status,2,c
  2837  0010A0  D02A               	goto	l532
  2838  0010A2  0E01               	movlw	1
  2839  0010A4  6E0D               	movwf	___lldiv@counter,c
  2840  0010A6  D006               	goto	l1382
  2841  0010A8                     l1380:
  2842  0010A8  90D8               	bcf	status,0,c
  2843  0010AA  3605               	rlcf	___lldiv@divisor,f,c
  2844  0010AC  3606               	rlcf	___lldiv@divisor+1,f,c
  2845  0010AE  3607               	rlcf	___lldiv@divisor+2,f,c
  2846  0010B0  3608               	rlcf	___lldiv@divisor+3,f,c
  2847  0010B2  2A0D               	incf	___lldiv@counter,f,c
  2848  0010B4                     l1382:
  2849  0010B4  AE08               	btfss	___lldiv@divisor+3,7,c
  2850  0010B6  D7F8               	goto	l1380
  2851  0010B8                     l1384:
  2852  0010B8  90D8               	bcf	status,0,c
  2853  0010BA  3609               	rlcf	___lldiv@quotient,f,c
  2854  0010BC  360A               	rlcf	___lldiv@quotient+1,f,c
  2855  0010BE  360B               	rlcf	___lldiv@quotient+2,f,c
  2856  0010C0  360C               	rlcf	___lldiv@quotient+3,f,c
  2857  0010C2  5005               	movf	___lldiv@divisor,w,c
  2858  0010C4  5C01               	subwf	___lldiv@dividend,w,c
  2859  0010C6  5006               	movf	___lldiv@divisor+1,w,c
  2860  0010C8  5802               	subwfb	___lldiv@dividend+1,w,c
  2861  0010CA  5007               	movf	___lldiv@divisor+2,w,c
  2862  0010CC  5803               	subwfb	___lldiv@dividend+2,w,c
  2863  0010CE  5008               	movf	___lldiv@divisor+3,w,c
  2864  0010D0  5804               	subwfb	___lldiv@dividend+3,w,c
  2865  0010D2  A0D8               	btfss	status,0,c
  2866  0010D4  D009               	goto	l1392
  2867  0010D6  5005               	movf	___lldiv@divisor,w,c
  2868  0010D8  5E01               	subwf	___lldiv@dividend,f,c
  2869  0010DA  5006               	movf	___lldiv@divisor+1,w,c
  2870  0010DC  5A02               	subwfb	___lldiv@dividend+1,f,c
  2871  0010DE  5007               	movf	___lldiv@divisor+2,w,c
  2872  0010E0  5A03               	subwfb	___lldiv@dividend+2,f,c
  2873  0010E2  5008               	movf	___lldiv@divisor+3,w,c
  2874  0010E4  5A04               	subwfb	___lldiv@dividend+3,f,c
  2875  0010E6  8009               	bsf	___lldiv@quotient,0,c
  2876  0010E8                     l1392:
  2877  0010E8  90D8               	bcf	status,0,c
  2878  0010EA  3208               	rrcf	___lldiv@divisor+3,f,c
  2879  0010EC  3207               	rrcf	___lldiv@divisor+2,f,c
  2880  0010EE  3206               	rrcf	___lldiv@divisor+1,f,c
  2881  0010F0  3205               	rrcf	___lldiv@divisor,f,c
  2882  0010F2  2E0D               	decfsz	___lldiv@counter,f,c
  2883  0010F4  D7E1               	goto	l1384
  2884  0010F6                     l532:
  2885  0010F6  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2886  0010FA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2887  0010FE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2888  001102  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2889  001106  0012               	return		;funcret
  2890  001108                     __end_of___lldiv:
  2891                           	opt stack 0
  2892                           tblptru	equ	0xFF8
  2893                           tblptrh	equ	0xFF7
  2894                           tblptrl	equ	0xFF6
  2895                           tablat	equ	0xFF5
  2896                           prodh	equ	0xFF4
  2897                           prodl	equ	0xFF3
  2898                           wreg	equ	0xFE8
  2899                           indf2	equ	0xFDF
  2900                           postinc2	equ	0xFDE
  2901                           postdec2	equ	0xFDD
  2902                           fsr2h	equ	0xFDA
  2903                           fsr2l	equ	0xFD9
  2904                           status	equ	0xFD8
  2905                           
  2906 ;; *************** function _EEPROM_WriteByte *****************
  2907 ;; Defined at:
  2908 ;;		line 63 in file "../00-libfiles/eeprom.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  v_eepromAddr    2    0[COMRAM] unsigned int 
  2911 ;;  v_eepromData    1    2[COMRAM] unsigned char 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  gie_value       1    3[COMRAM] unsigned char 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, status,2, status,0
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2923 ;;      Params:         3       0       0       0       0       0       0
  2924 ;;      Locals:         1       0       0       0       0       0       0
  2925 ;;      Temps:          0       0       0       0       0       0       0
  2926 ;;      Totals:         4       0       0       0       0       0       0
  2927 ;;Total ram usage:        4 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text15
  2937  001240                     __ptext15:
  2938                           	opt stack 0
  2939  001240                     _EEPROM_WriteByte:
  2940                           	opt stack 30
  2941  001240                     l13:
  2942  001240  B2A6               	btfsc	4006,1,c	;volatile
  2943  001242  D7FE               	goto	l13
  2944                           
  2945                           ;eeprom.c: 67: EEADR=v_eepromAddress_u16;
  2946  001244  C001  FFA9         	movff	EEPROM_WriteByte@v_eepromAddress_u16,4009	;volatile
  2947                           
  2948                           ;eeprom.c: 69: EEDATA=v_eepromData_u8;
  2949  001248  C003  FFA8         	movff	EEPROM_WriteByte@v_eepromData_u8,4008	;volatile
  2950                           
  2951                           ;eeprom.c: 70: gie_value = GIE;
  2952  00124C  0E00               	movlw	0
  2953  00124E  BEF2               	btfsc	intcon,7,c	;volatile
  2954  001250  0E01               	movlw	1
  2955  001252  6E04               	movwf	EEPROM_WriteByte@gie_value,c
  2956                           
  2957                           ;eeprom.c: 71: GIE = 0;
  2958  001254  9EF2               	bcf	intcon,7,c	;volatile
  2959                           
  2960                           ;eeprom.c: 72: ((EECON1) |= ((uint8_t)1<<(2)));
  2961  001256  84A6               	bsf	4006,2,c	;volatile
  2962                           
  2963                           ;eeprom.c: 73: EECON2=0x55;
  2964  001258  0E55               	movlw	85
  2965  00125A  6EA7               	movwf	4007,c	;volatile
  2966                           
  2967                           ;eeprom.c: 74: EECON2=0xaa;
  2968  00125C  0EAA               	movlw	170
  2969  00125E  6EA7               	movwf	4007,c	;volatile
  2970                           
  2971                           ;eeprom.c: 75: ((EECON1) |= ((uint8_t)1<<(1)));
  2972  001260  82A6               	bsf	4006,1,c	;volatile
  2973                           
  2974                           ;eeprom.c: 76: ((EECON1) &= ~((uint8_t)1<<(2)));
  2975  001262  94A6               	bcf	4006,2,c	;volatile
  2976                           
  2977                           ;eeprom.c: 77: GIE = gie_value;
  2978  001264  A004               	btfss	EEPROM_WriteByte@gie_value,0,c
  2979  001266  D002               	goto	u1560
  2980  001268  8EF2               	bsf	intcon,7,c	;volatile
  2981  00126A  0012               	return	
  2982  00126C                     u1560:
  2983  00126C  9EF2               	bcf	intcon,7,c	;volatile
  2984  00126E  0012               	return		;funcret
  2985  001270                     __end_of_EEPROM_WriteByte:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           prodh	equ	0xFF4
  2992                           prodl	equ	0xFF3
  2993                           intcon	equ	0xFF2
  2994                           wreg	equ	0xFE8
  2995                           indf2	equ	0xFDF
  2996                           postinc2	equ	0xFDE
  2997                           postdec2	equ	0xFDD
  2998                           fsr2h	equ	0xFDA
  2999                           fsr2l	equ	0xFD9
  3000                           status	equ	0xFD8
  3001                           
  3002 ;; *************** function _EEPROM_ReadByte *****************
  3003 ;; Defined at:
  3004 ;;		line 93 in file "../00-libfiles/eeprom.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  v_eepromAddr    2    0[COMRAM] unsigned int 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      unsigned char 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3018 ;;      Params:         2       0       0       0       0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0
  3021 ;;      Totals:         2       0       0       0       0       0       0
  3022 ;;Total ram usage:        2 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; This function calls:
  3025 ;;		Nothing
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           	psect	text16
  3032  0012DA                     __ptext16:
  3033                           	opt stack 0
  3034  0012DA                     _EEPROM_ReadByte:
  3035                           	opt stack 30
  3036  0012DA                     l19:
  3037  0012DA  A2A6               	btfss	4006,1,c	;volatile
  3038  0012DC  B0A6               	btfsc	4006,0,c	;volatile
  3039  0012DE  D7FD               	goto	l19
  3040                           
  3041                           ;eeprom.c: 96: EEADR=v_eepromAddress_u16;
  3042  0012E0  C001  FFA9         	movff	EEPROM_ReadByte@v_eepromAddress_u16,4009	;volatile
  3043                           
  3044                           ;eeprom.c: 98: ((EECON1) |= ((uint8_t)1<<(0)));
  3045  0012E4  80A6               	bsf	4006,0,c	;volatile
  3046                           
  3047                           ;eeprom.c: 100: return(EEDATA);
  3048  0012E6  50A8               	movf	4008,w,c	;volatile
  3049  0012E8  0012               	return	
  3050  0012EA                     __end_of_EEPROM_ReadByte:
  3051                           	opt stack 0
  3052                           tblptru	equ	0xFF8
  3053                           tblptrh	equ	0xFF7
  3054                           tblptrl	equ	0xFF6
  3055                           tablat	equ	0xFF5
  3056                           prodh	equ	0xFF4
  3057                           prodl	equ	0xFF3
  3058                           intcon	equ	0xFF2
  3059                           wreg	equ	0xFE8
  3060                           indf2	equ	0xFDF
  3061                           postinc2	equ	0xFDE
  3062                           postdec2	equ	0xFDD
  3063                           fsr2h	equ	0xFDA
  3064                           fsr2l	equ	0xFD9
  3065                           status	equ	0xFD8
  3066                           tblptru	equ	0xFF8
  3067                           tblptrh	equ	0xFF7
  3068                           tblptrl	equ	0xFF6
  3069                           tablat	equ	0xFF5
  3070                           prodh	equ	0xFF4
  3071                           prodl	equ	0xFF3
  3072                           intcon	equ	0xFF2
  3073                           wreg	equ	0xFE8
  3074                           indf2	equ	0xFDF
  3075                           postinc2	equ	0xFDE
  3076                           postdec2	equ	0xFDD
  3077                           fsr2h	equ	0xFDA
  3078                           fsr2l	equ	0xFD9
  3079                           status	equ	0xFD8
  3080                           
  3081                           	psect	rparam
  3082  0000                     tblptru	equ	0xFF8
  3083                           tblptrh	equ	0xFF7
  3084                           tblptrl	equ	0xFF6
  3085                           tablat	equ	0xFF5
  3086                           prodh	equ	0xFF4
  3087                           prodl	equ	0xFF3
  3088                           intcon	equ	0xFF2
  3089                           wreg	equ	0xFE8
  3090                           indf2	equ	0xFDF
  3091                           postinc2	equ	0xFDE
  3092                           postdec2	equ	0xFDD
  3093                           fsr2h	equ	0xFDA
  3094                           fsr2l	equ	0xFD9
  3095                           status	equ	0xFD8


Data Sizes:
    Strings     39
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     80      80
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(2) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    UART_Printf@ptr	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_2(CODE[16]), STR_1(CODE[23]), 

    UART_Printf@argp	PTR void [1] size(2) Largest target is 1
		 -> ?_UART_Printf(COMRAM[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_UART_Printf
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->_UART_TxNumber
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___ftneg
    _UART_TxNumber->___lldiv
    _UART_Init->_UART_SetBaudRate
    _UART_SetBaudRate->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   16289
                                             77 COMRAM     3     3      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         27    23      4   15086
                                             50 COMRAM    27    23      4
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2     131
                                              1 COMRAM     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   7     4      3   11166
                                             43 COMRAM     7     4      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2164
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     380
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             17 COMRAM     3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2587
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3203
                                             20 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       30    25      5    2502
                                             13 COMRAM    30    25      5
                        _UART_TxChar
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     786
                                             22 COMRAM     4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                     9     5      4     700
                                             13 COMRAM     9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     546
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteByte                                     4     1      3     195
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_ReadByte                                      2     0      2      86
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_ReadByte
   _EEPROM_WriteByte
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___lldiv
     _UART_TxString
       _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     50      50       1       63.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 13 19:59:09 2016

                                     l13 1240                                       l19 12DA  
                                     l61 12EC                              __CFG_BORV$2 000000  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                            __CFG_OSC$HS 000000                             ___ftadd@exp1 0020  
                           ___ftadd@exp2 001F                             ___ftadd@sign 001E  
                                    l117 06A2                                      l430 0BA4  
                                    l407 1066                                      l434 0BCE  
                                    l179 11E2                                      l532 10F6  
                                    l445 0C7E                                      l454 0C9A  
                                    l487 12AA                                      _GIE 007F97  
                           __CFG_CPB$OFF 000000                             __CFG_CPD$OFF 000000  
        EEPROM_WriteByte@v_eepromData_u8 0003                                      prod 000FF3  
                                    wreg 000FE8                             __CFG_LVP$OFF 000000  
                           __CFG_WDT$OFF 000000                                     l1402 09A0  
                                   l1410 0A0E                                     l1430 0AC0  
                                   l1422 0A9E                                     l1414 0A22  
                                   l1350 101E                                     l1342 0FE8  
                                   l1502 0CB6                                     l1416 0A28  
                                   l1432 0AC2                                     l1408 0A06  
                                   l1512 0CE6                                     l1434 0ACC  
                                   l1354 1034                                     l1346 0FF6  
                                   l1522 0E28                                     l1610 0DEE  
                                   l1602 0DC6                                     l1380 10A8  
                                   l1428 0AAC                                     l1444 0B58  
                                   l1356 1052                                     l1348 1000  
                                   l1460 0BDC                                     l1604 0DD2  
                                   l1382 10B4                                     l1630 1174  
                                   l1438 0B1E                                     l1358 105C  
                                   l1454 0BB2                                     l1542 0E82  
                                   l1606 0DD8                                     l1702 0676  
                                   l1392 10E8                                     l1384 10B8  
                                   l1552 0EAA                                     l1528 0E50  
                                   l1616 11EA                                     l1640 1284  
                                   l1712 06A6                                     l1482 0C2E  
                                   l1546 0E92                                     l1618 11F6  
                                   l1730 070A                                     l1802 0914  
                                   l1484 0C38                                     l1476 0C0C  
                                   l1556 0EBA                                     l1636 1272  
                                   l1740 0744                                     l1708 0694  
                                   l1804 0972                                     l1494 0C6C  
                                   l1486 0C42                                     l1574 0D38  
                                   l1742 0760                                     l1718 06C2  
                                   l1806 0978                                     l1496 0C76  
                                   l1488 0C4A                                     l1592 0D9E  
                                   l1760 07FC                                     l1728 06EC  
                                   l1808 097C                                     l1754 07CC  
                                   l1834 119C                                     l1842 11DC  
                                   l1596 0DAE                                     l1748 0790  
                                   l1774 085A                                     l1766 0838  
                                   l1792 08E6                                     l1784 089C  
                                   l1776 0872                                     l1688 063C  
                                   l1786 08B8                                     l1798 090C  
                                   STR_1 0601                                     STR_2 0618  
                                   u1040 09F8                                     u1050 09FA  
                                   u1034 09BA                                     u1035 09B4  
                                   u1141 0B70                                     u1151 0B84  
                                   u1421 0D1C                                     u1510 111A  
                                   u1351 0E10                                     u1440 0D56  
                                   u1371 0E38                                     u1445 0D4E  
                                   u1535 114E                                     u1560 126C  
                                   _RCIF 007CF5                                     _TXIF 007CF4  
                     _UART_TxFloatNumber 0EF4                                     _main 117E  
                           ___ftpack@arg 0001                             ___ftpack@exp 0004  
                                   fsr2h 000FDA                                     indf2 000FDF  
                                   fsr2l 000FD9                                     prodl 000FF3  
                                   start 0000                            __CFG_IESO$OFF 000000  
               __size_of_EEPROM_ReadByte 0010                      ?_UART_TxFloatNumber 002C  
                          __CFG_MCLRE$ON 000000                             ___ftmul@cntr 0016  
                           ___param_bank 000010                             ___ftmul@sign 0017  
    UART_TxFloatNumber@v_floatNumber_f32 002C                             ___fttol@exp1 0026  
                           ___fttol@lval 0022                                    ?_main 0001  
                                  _EEADR 000FA9                          __end_of___ftadd 0D0C  
                        __end_of___ftneg 12B8                          __end_of___lldiv 1108  
                        __end_of___ftmul 0EF4                          __end_of___fttol 0E00  
                                  _RCREG 000FAE                                    _RCSTA 000FAB  
                                  _SPBRG 000FAF                                    _TRISC 000F94  
                                  _TXREG 000FAD                                    _TXSTA 000FAC  
                          __CFG_PWRT$OFF 000000                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                     ??_UART_TxFloatNumber 002F  
                           ___lltoft@exp 0011                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                     __size_of_UART_Init 0022                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                            ___ftpack@sign 0005  
                         __CFG_BOREN$OFF 000000                                    tablat 000FF5  
                                  status 000FD8                          __initialization 12F8  
                           __end_of_main 11E4                                   ??_main 004E  
                          ___fttol@sign1 0021                            __activetblptr 000002  
                                 _EEDATA 000FA8                                   _EECON1 000FA6  
                                 _EECON2 000FA7                         __end_of___ftpack 1086  
                       __end_of___lltoft 1240                        ?_UART_SetBaudRate 000E  
                          main@read_char 004E                       ??_UART_SetBaudRate 0012  
                           ?_UART_TxChar 0001                             ?_UART_Printf 0033  
                         __CFG_XINST$OFF 000000                        __end_of_UART_Init 12DA  
                              ??___ftadd 001B                                ??___ftneg 0015  
                              ??___lldiv 0009                                ??___ftmul 000F  
                              ??___fttol 001C                        ??_EEPROM_ReadByte 0003  
               __end_of_EEPROM_WriteByte 1270  UART_TxNumber@v_numOfDigitsToTransmit_u8 0012  
                  ___ftmul@f3_as_product 0013                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                       main@eeprom_address 004F  
                             __accesstop 0080                  __end_of__initialization 12F8  
                        __CFG_PBADEN$OFF 000000                               ___ftadd@f1 0015  
                             ___ftadd@f2 0018                    __end_of_UART_TxNumber 0B60  
                          ___rparam_used 000001                    __end_of_UART_TxString 1294  
              UART_Printf@v_floatNum_f32 0037                               ___ftneg@f1 0012  
                             ___ftmul@f1 0009                               ___ftmul@f2 000C  
                             ___fttol@f1 0018                           __pcstackCOMRAM 0001  
                             ___lltoft@c 0009        UART_TxFloatNumber@v_decNumber_u32 002F  
    EEPROM_WriteByte@v_eepromAddress_u16 0001                                ?___ftpack 0001  
                              ?___lltoft 0009                EEPROM_WriteByte@gie_value 0004  
                                __Hparam 0000                                  __Lparam 0000  
                   __size_of_UART_TxChar 000E                     __size_of_UART_Printf 0366  
                                ___ftadd 0B60                                  ___ftneg 1294  
                                ___lldiv 1086                                  ___ftmul 0E00  
                                ___fttol 0D0C       EEPROM_ReadByte@v_eepromAddress_u16 0001  
                           __psmallconst 0600                          __CFG_STVREN$OFF 000000  
                                __pcinit 12F8                               ??___ftpack 0006  
                                __ramtop 0600                               ??___lltoft 000D  
                                __ptext0 117E                                  __ptext1 062A  
                                __ptext2 1270                                  __ptext3 0EF4  
                                __ptext4 11E4                                  __ptext5 0D0C  
                                __ptext6 1294                                  __ptext7 0E00  
                                __ptext8 0B60                                  __ptext9 0FD8  
            __size_of_UART_TxFloatNumber 00E4                           UART_Printf@ptr 0048  
                         UART_Printf@str 003A                     end_of_initialization 12F8  
                         UART_TxNumber@a 001E                           UART_TxNumber@i 002B  
                          __Lmediumconst 0000                          _EEPROM_ReadByte 12DA  
                        ___lldiv@divisor 0005                          ___lldiv@counter 000D  
         UART_SetBaudRate@v_baudRate_u32 000E                                  postdec2 000FDD  
                                postinc2 000FDE                                _UART_Init 12B8  
              __size_of_UART_SetBaudRate 0076                        ?_EEPROM_WriteByte 0001  
                     ??_EEPROM_WriteByte 0004                           main@write_char 0050  
        UART_TxNumber@v_numericSystem_u8 002A                              ___ftmul@exp 0012  
                             ?_UART_Init 0017                      start_initialization 12F8  
                __end_of_EEPROM_ReadByte 12EA                         __CFG_LPT1OSC$OFF 000000  
                      __size_of___ftpack 00AE                   __size_of_UART_TxNumber 01D0  
                      __size_of___lltoft 005C                   __size_of_UART_TxString 0024  
                      __CFG_CCP2MX$PORTC 000000                                 ?___ftadd 0015  
                               ?___ftneg 0012                                 ?___lldiv 0001  
                               ?___ftmul 0009                                 ?___fttol 0018  
                            ??_UART_Init 001B                         _UART_SetBaudRate 1108  
                            __smallconst 0600                         ?_EEPROM_ReadByte 0001  
                          UART_Printf@ch 004A                            ??_UART_TxChar 0001  
                          _UART_TxNumber 0990                            ??_UART_Printf 0037  
                          _UART_TxString 1270                         __CFG_WDTPS$32768 000000  
                UART_Init@v_baudRate_u32 0017                  UART_TxString@ptr_string 0002  
             __end_of_UART_TxFloatNumber 0FD8                __size_of_EEPROM_WriteByte 0030  
              UART_TxNumber@v_number_u32 000E                           ?_UART_TxNumber 000E  
                         ?_UART_TxString 0002                                 __Hrparam 0000  
               UART_TxChar@v_uartData_u8 0001                                 __Lrparam 0000  
                       _UART_TxNumber$76 0028                      __end_of_UART_TxChar 12F8  
                       __size_of___ftadd 01AC                         __size_of___ftneg 0024  
                       __size_of___lldiv 0082                         __size_of___ftmul 00F4  
                       __size_of___fttol 00F4                      __end_of_UART_Printf 0990  
                               ___ftpack 0FD8                                 ___lltoft 11E4  
                               __ptext10 0990                                 __ptext11 12EA  
                               __ptext12 12B8                                 __ptext13 1108  
                               __ptext14 1086                                 __ptext15 1240  
                               __ptext16 12DA                            __size_of_main 0066  
                        UART_Printf@argp 004C                 UART_SetBaudRate@RegValue 0016  
                        ??_UART_TxNumber 0013                 __end_of_UART_SetBaudRate 117E  
                        ??_UART_TxString 0004                         ___lldiv@dividend 0001  
                            _UART_TxChar 12EA                              _UART_Printf 062A  
                       ___lldiv@quotient 0009    UART_Printf@v_numOfDigitsToTransmit_u8 004B  
                     UART_Printf@argList 0033                         _EEPROM_WriteByte 1240  
                   UART_Printf@v_num_s16 0040                     UART_Printf@v_num_s32 003C  
                   UART_Printf@v_num_u16 0046                     UART_Printf@v_num_u32 0042  
