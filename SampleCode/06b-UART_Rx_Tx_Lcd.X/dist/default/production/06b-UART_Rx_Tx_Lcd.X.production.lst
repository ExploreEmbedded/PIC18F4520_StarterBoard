

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 13 19:37:54 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    38                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataCOMRAM
    41  000FF8                     __pidataCOMRAM:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _ARR_LcdLineNumAddress_U8
    45  000FF8  80                 	db	128
    46  000FF9  C0                 	db	192
    47  000FFA  90                 	db	144
    48  000FFB  D0                 	db	208
    49  0000                     _LATA	set	3977
    50  0000                     _LATB	set	3978
    51  0000                     _LATC	set	3979
    52  0000                     _LATD	set	3980
    53  0000                     _LATE	set	3981
    54  0000                     _PORTA	set	3968
    55  0000                     _PORTB	set	3969
    56  0000                     _PORTC	set	3970
    57  0000                     _PORTD	set	3971
    58  0000                     _PORTE	set	3972
    59  0000                     _RCREG	set	4014
    60  0000                     _RCSTA	set	4011
    61  0000                     _SPBRG	set	4015
    62  0000                     _TRISA	set	3986
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66  0000                     _TRISE	set	3990
    67  0000                     _TXREG	set	4013
    68  0000                     _TXSTA	set	4012
    69  0000                     _RCIF	set	31989
    70  0000                     _TXIF	set	31988
    71                           
    72                           	psect	smallconst
    73  000600                     __psmallconst:
    74                           	opt stack 0
    75  000600  00                 	db	0
    76  000601                     STR_1:
    77  000601  73                 	db	115	;'s'
    78  000602  65                 	db	101	;'e'
    79  000603  6E                 	db	110	;'n'
    80  000604  64                 	db	100	;'d'
    81  000605  20                 	db	32
    82  000606  64                 	db	100	;'d'
    83  000607  61                 	db	97	;'a'
    84  000608  74                 	db	116	;'t'
    85  000609  61                 	db	97	;'a'
    86  00060A  20                 	db	32
    87  00060B  66                 	db	102	;'f'
    88  00060C  72                 	db	114	;'r'
    89  00060D  6F                 	db	111	;'o'
    90  00060E  6D                 	db	109	;'m'
    91  00060F  20                 	db	32
    92  000610  20                 	db	32
    93  000611  73                 	db	115	;'s'
    94  000612  65                 	db	101	;'e'
    95  000613  72                 	db	114	;'r'
    96  000614  69                 	db	105	;'i'
    97  000615  61                 	db	97	;'a'
    98  000616  6C                 	db	108	;'l'
    99  000617  20                 	db	32
   100  000618  74                 	db	116	;'t'
   101  000619  65                 	db	101	;'e'
   102  00061A  72                 	db	114	;'r'
   103  00061B  6D                 	db	109	;'m'
   104  00061C  69                 	db	105	;'i'
   105  00061D  6E                 	db	110	;'n'
   106  00061E  61                 	db	97	;'a'
   107  00061F  6C                 	db	108	;'l'
   108  000620  00                 	db	0
   109                           
   110                           ; #config settings
   111  000621  00                 	db	0	; dummy byte at the end
   112  0000                     
   113                           	psect	cinit
   114  000DD6                     __pcinit:
   115                           	opt stack 0
   116  000DD6                     start_initialization:
   117                           	opt stack 0
   118  000DD6                     __initialization:
   119                           	opt stack 0
   120                           
   121                           ; Clear objects allocated to COMRAM (16 bytes)
   122  000DD6  EE00  F01C         	lfsr	0,__pbssCOMRAM
   123  000DDA  0E10               	movlw	16
   124  000DDC                     clear_0:
   125  000DDC  6AEE               	clrf	postinc0,c
   126  000DDE  06E8               	decf	wreg,f,c
   127  000DE0  E1FD               	bnz	clear_0
   128                           
   129                           ; Initialize objects allocated to COMRAM (4 bytes)
   130                           ; load TBLPTR registers with __pidataCOMRAM
   131  000DE2  0EF8               	movlw	low __pidataCOMRAM
   132  000DE4  6EF6               	movwf	tblptrl,c
   133  000DE6  0E0F               	movlw	high __pidataCOMRAM
   134  000DE8  6EF7               	movwf	tblptrh,c
   135  000DEA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   136  000DEC  6EF8               	movwf	tblptru,c
   137  000DEE  EE00  F02C         	lfsr	0,__pdataCOMRAM
   138  000DF2  EE10 F004          	lfsr	1,4
   139  000DF6                     copy_data0:
   140  000DF6  0009               	tblrd		*+
   141  000DF8  CFF5 FFEE          	movff	tablat,postinc0
   142  000DFC  50E5               	movf	postdec1,w,c
   143  000DFE  50E1               	movf	fsr1l,w,c
   144  000E00  E1FA               	bnz	copy_data0
   145  000E02                     end_of_initialization:
   146                           	opt stack 0
   147  000E02                     __end_of__initialization:
   148                           	opt stack 0
   149  000E02  0E00               	movlw	low (__Lmediumconst shr (0+16))
   150  000E04  6EF8               	movwf	tblptru,c
   151  000E06  0100               	movlb	0
   152  000E08  EF0C  F006         	goto	_main	;jump to C main() function
   153                           tblptru	equ	0xFF8
   154                           tblptrh	equ	0xFF7
   155                           tblptrl	equ	0xFF6
   156                           tablat	equ	0xFF5
   157                           postinc0	equ	0xFEE
   158                           wreg	equ	0xFE8
   159                           postdec1	equ	0xFE5
   160                           fsr1l	equ	0xFE1
   161                           
   162                           	psect	bssCOMRAM
   163  00001C                     __pbssCOMRAM:
   164                           	opt stack 0
   165  00001C                     _LCDConfig:
   166                           	opt stack 0
   167  00001C                     	ds	14
   168  00002A                     _v_LcdTrackCursorPos_U8:
   169                           	opt stack 0
   170  00002A                     	ds	1
   171  00002B                     _v_LcdTrackLineNum_U8:
   172                           	opt stack 0
   173  00002B                     	ds	1
   174                           tblptru	equ	0xFF8
   175                           tblptrh	equ	0xFF7
   176                           tblptrl	equ	0xFF6
   177                           tablat	equ	0xFF5
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           postdec1	equ	0xFE5
   181                           fsr1l	equ	0xFE1
   182                           
   183                           	psect	dataCOMRAM
   184  00002C                     __pdataCOMRAM:
   185                           	opt stack 0
   186  00002C                     _ARR_LcdLineNumAddress_U8:
   187                           	opt stack 0
   188  00002C                     	ds	4
   189                           tblptru	equ	0xFF8
   190                           tblptrh	equ	0xFF7
   191                           tblptrl	equ	0xFF6
   192                           tablat	equ	0xFF5
   193                           postinc0	equ	0xFEE
   194                           wreg	equ	0xFE8
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	cstackCOMRAM
   199  000001                     __pcstackCOMRAM:
   200                           	opt stack 0
   201  000001                     ??_GPIO_PinRead:
   202  000001                     ?___lldiv:
   203                           	opt stack 0
   204  000001                     UART_TxChar@v_uartData_u8:
   205                           	opt stack 0
   206  000001                     GPIO_PinDirection@var_pinDirn_u8:
   207                           	opt stack 0
   208  000001                     GPIO_PinWrite@var_pinValue_u8:
   209                           	opt stack 0
   210  000001                     DELAY_us@us_count:
   211                           	opt stack 0
   212  000001                     ___lldiv@dividend:
   213                           	opt stack 0
   214                           
   215                           ; 4 bytes @ 0x0
   216  000001                     	ds	1
   217  000002                     ??_GPIO_PinDirection:
   218  000002                     ??_GPIO_PinWrite:
   219                           
   220                           ; 1 bytes @ 0x1
   221  000002                     	ds	1
   222  000003                     GPIO_PinRead@var_portNumber_u8:
   223                           	opt stack 0
   224  000003                     DELAY_ms@ms_count:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x2
   228  000003                     	ds	1
   229  000004                     GPIO_PinDirection@var_portNumber_u8:
   230                           	opt stack 0
   231  000004                     GPIO_PinWrite@var_portNumber_u8:
   232                           	opt stack 0
   233  000004                     GPIO_PinRead@returnStatus:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x3
   237  000004                     	ds	1
   238  000005                     GPIO_PinDirection@enm_pinNumber:
   239                           	opt stack 0
   240  000005                     GPIO_PinWrite@enm_pinNumber:
   241                           	opt stack 0
   242  000005                     GPIO_PinRead@enm_pinNumber:
   243                           	opt stack 0
   244  000005                     ___lldiv@divisor:
   245                           	opt stack 0
   246                           
   247                           ; 4 bytes @ 0x4
   248  000005                     	ds	1
   249  000006                     LCD_SetUp@RW:
   250                           	opt stack 0
   251  000006                     lcd_BusyCheck@busyflag:
   252                           	opt stack 0
   253  000006                     lcd_SendHigherNibble@dataByte:
   254                           	opt stack 0
   255  000006                     lcd_SendLowerNibble@dataByte:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x5
   259  000006                     	ds	1
   260  000007                     LCD_SetUp@EN:
   261                           	opt stack 0
   262  000007                     LCD_CmdWrite@v_lcdCmd_u8:
   263                           	opt stack 0
   264  000007                     lcd_DataWrite@dataByte:
   265                           	opt stack 0
   266                           
   267                           ; 1 bytes @ 0x6
   268  000007                     	ds	1
   269  000008                     LCD_SetUp@D0:
   270                           	opt stack 0
   271  000008                     LCD_GoToLine@v_lineNumber_u8:
   272                           	opt stack 0
   273  000008                     LCD_DisplayChar@v_lcdData_u8:
   274                           	opt stack 0
   275                           
   276                           ; 1 bytes @ 0x7
   277  000008                     	ds	1
   278  000009                     LCD_SetUp@D1:
   279                           	opt stack 0
   280  000009                     LCD_Init@v_MaxCharsPerLine_u8:
   281                           	opt stack 0
   282  000009                     LCD_DisplayString@ptr_stringPointer_u8:
   283                           	opt stack 0
   284  000009                     ___lldiv@quotient:
   285                           	opt stack 0
   286                           
   287                           ; 4 bytes @ 0x8
   288  000009                     	ds	1
   289  00000A                     LCD_SetUp@D2:
   290                           	opt stack 0
   291  00000A                     LCD_Init@v_lcdNoOfLines_u8:
   292                           	opt stack 0
   293                           
   294                           ; 1 bytes @ 0x9
   295  00000A                     	ds	1
   296  00000B                     LCD_SetUp@D3:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0xA
   300  00000B                     	ds	1
   301  00000C                     LCD_SetUp@D4:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0xB
   305  00000C                     	ds	1
   306  00000D                     LCD_SetUp@D5:
   307                           	opt stack 0
   308  00000D                     ___lldiv@counter:
   309                           	opt stack 0
   310                           
   311                           ; 1 bytes @ 0xC
   312  00000D                     	ds	1
   313  00000E                     LCD_SetUp@D6:
   314                           	opt stack 0
   315  00000E                     UART_SetBaudRate@v_baudRate_u32:
   316                           	opt stack 0
   317                           
   318                           ; 4 bytes @ 0xD
   319  00000E                     	ds	1
   320  00000F                     LCD_SetUp@D7:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0xE
   324  00000F                     	ds	1
   325  000010                     LCD_SetUp@RS:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0xF
   329  000010                     	ds	2
   330  000012                     ??_UART_SetBaudRate:
   331                           
   332                           ; 1 bytes @ 0x11
   333  000012                     	ds	4
   334  000016                     UART_SetBaudRate@RegValue:
   335                           	opt stack 0
   336                           
   337                           ; 1 bytes @ 0x15
   338  000016                     	ds	1
   339  000017                     UART_Init@v_baudRate_u32:
   340                           	opt stack 0
   341                           
   342                           ; 4 bytes @ 0x16
   343  000017                     	ds	4
   344  00001B                     main@ch:
   345                           	opt stack 0
   346                           
   347                           ; 1 bytes @ 0x1A
   348  00001B                     	ds	1
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           postinc0	equ	0xFEE
   354                           wreg	equ	0xFE8
   355                           postdec1	equ	0xFE5
   356                           fsr1l	equ	0xFE1
   357                           
   358 ;;
   359 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   360 ;;
   361 ;; *************** function _main *****************
   362 ;; Defined at:
   363 ;;		line 43 in file "main.c"
   364 ;; Parameters:    Size  Location     Type
   365 ;;		None
   366 ;; Auto vars:     Size  Location     Type
   367 ;;  ch              1   26[COMRAM] unsigned char 
   368 ;; Return value:  Size  Location     Type
   369 ;;                  2  448[None  ] int 
   370 ;; Registers used:
   371 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   372 ;; Tracked objects:
   373 ;;		On entry : 0/0
   374 ;;		On exit  : 0/0
   375 ;;		Unchanged: 0/0
   376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   377 ;;      Params:         0       0       0       0       0       0       0
   378 ;;      Locals:         1       0       0       0       0       0       0
   379 ;;      Temps:          0       0       0       0       0       0       0
   380 ;;      Totals:         1       0       0       0       0       0       0
   381 ;;Total ram usage:        1 bytes
   382 ;; Hardware stack levels required when called:    7
   383 ;; This function calls:
   384 ;;		_LCD_DisplayChar
   385 ;;		_LCD_DisplayString
   386 ;;		_LCD_GoToLine
   387 ;;		_LCD_Init
   388 ;;		_LCD_SetUp
   389 ;;		_UART_Init
   390 ;;		_UART_RxChar
   391 ;;		_UART_TxChar
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text0
   398  000C18                     __ptext0:
   399                           	opt stack 0
   400  000C18                     _main:
   401                           	opt stack 24
   402                           
   403                           ;main.c: 45: char ch;
   404                           ;main.c: 47: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   405                           
   406                           ;incstack = 0
   407  000C18  0E09               	movlw	9
   408  000C1A  6E06               	movwf	LCD_SetUp@RW,c
   409  000C1C  0E0A               	movlw	10
   410  000C1E  6E07               	movwf	LCD_SetUp@EN,c
   411  000C20  0EFF               	movlw	255
   412  000C22  6E08               	movwf	LCD_SetUp@D0,c
   413  000C24  0EFF               	movlw	255
   414  000C26  6E09               	movwf	LCD_SetUp@D1,c
   415  000C28  0EFF               	movlw	255
   416  000C2A  6E0A               	movwf	LCD_SetUp@D2,c
   417  000C2C  0EFF               	movlw	255
   418  000C2E  6E0B               	movwf	LCD_SetUp@D3,c
   419  000C30  0E0C               	movlw	12
   420  000C32  6E0C               	movwf	LCD_SetUp@D4,c
   421  000C34  0E0D               	movlw	13
   422  000C36  6E0D               	movwf	LCD_SetUp@D5,c
   423  000C38  0E0E               	movlw	14
   424  000C3A  6E0E               	movwf	LCD_SetUp@D6,c
   425  000C3C  0E0F               	movlw	15
   426  000C3E  6E0F               	movwf	LCD_SetUp@D7,c
   427  000C40  0E08               	movlw	8
   428  000C42  ECDA  F004         	call	_LCD_SetUp
   429                           
   430                           ;main.c: 48: LCD_Init(2,16);
   431  000C46  0E10               	movlw	16
   432  000C48  6E09               	movwf	LCD_Init@v_MaxCharsPerLine_u8,c
   433  000C4A  0E02               	movlw	2
   434  000C4C  EC45  F006         	call	_LCD_Init
   435                           
   436                           ;main.c: 49: UART_Init(9600);
   437  000C50  0E80               	movlw	128
   438  000C52  6E17               	movwf	UART_Init@v_baudRate_u32,c
   439  000C54  0E25               	movlw	37
   440  000C56  6E18               	movwf	UART_Init@v_baudRate_u32+1,c
   441  000C58  0E00               	movlw	0
   442  000C5A  6E19               	movwf	UART_Init@v_baudRate_u32+2,c
   443  000C5C  0E00               	movlw	0
   444  000C5E  6E1A               	movwf	UART_Init@v_baudRate_u32+3,c
   445  000C60  ECC0  F007         	call	_UART_Init	;wreg free
   446                           
   447                           ;main.c: 50: LCD_DisplayString("send data from  serial terminal");
   448  000C64  0E01               	movlw	low STR_1
   449  000C66  6E09               	movwf	LCD_DisplayString@ptr_stringPointer_u8,c
   450  000C68  0E06               	movlw	high STR_1
   451  000C6A  6E0A               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1,c
   452  000C6C  EC83  F007         	call	_LCD_DisplayString	;wreg free
   453                           
   454                           ;main.c: 51: LCD_GoToLine(0);
   455  000C70  0E00               	movlw	0
   456  000C72  EC6E  F007         	call	_LCD_GoToLine
   457  000C76                     l2494:
   458                           
   459                           ;main.c: 53: {
   460                           ;main.c: 54: ch = UART_RxChar();
   461  000C76  ECF7  F007         	call	_UART_RxChar	;wreg free
   462  000C7A  6E1B               	movwf	main@ch,c
   463                           
   464                           ;main.c: 55: UART_TxChar(ch);
   465  000C7C  501B               	movf	main@ch,w,c
   466  000C7E  ECE9  F007         	call	_UART_TxChar
   467                           
   468                           ;main.c: 56: LCD_DisplayChar(ch);
   469  000C82  501B               	movf	main@ch,w,c
   470  000C84  ECAD  F007         	call	_LCD_DisplayChar
   471  000C88  D7F6               	goto	l2494
   472  000C8A                     __end_of_main:
   473                           	opt stack 0
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483 ;; *************** function _UART_TxChar *****************
   484 ;; Defined at:
   485 ;;		line 145 in file "../00-libfiles/uart.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  v_uartData_u    1    wreg     unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  v_uartData_u    1    0[COMRAM] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   499 ;;      Params:         0       0       0       0       0       0       0
   500 ;;      Locals:         1       0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0
   502 ;;      Totals:         1       0       0       0       0       0       0
   503 ;;Total ram usage:        1 bytes
   504 ;; Hardware stack levels used:    1
   505 ;; This function calls:
   506 ;;		Nothing
   507 ;; This function is called by:
   508 ;;		_main
   509 ;;		_UART_TxString
   510 ;;		_UART_RxString
   511 ;;		_UART_TxNumber
   512 ;;		_UART_Printf
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text1
   517  000FD2                     __ptext1:
   518                           	opt stack 0
   519  000FD2                     _UART_TxChar:
   520                           	opt stack 30
   521                           
   522                           ;incstack = 0
   523                           ;UART_TxChar@v_uartData_u8 stored from wreg
   524  000FD2  6E01               	movwf	UART_TxChar@v_uartData_u8,c
   525  000FD4                     l39:
   526  000FD4  A89E               	btfss	3998,4,c	;volatile
   527  000FD6  D7FE               	goto	l39
   528                           
   529                           ;uart.c: 148: TXIF=0;
   530  000FD8  989E               	bcf	3998,4,c	;volatile
   531                           
   532                           ;uart.c: 149: TXREG=v_uartData_u8;
   533  000FDA  C001  FFAD         	movff	UART_TxChar@v_uartData_u8,4013	;volatile
   534  000FDE  0012               	return		;funcret
   535  000FE0                     __end_of_UART_TxChar:
   536                           	opt stack 0
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546 ;; *************** function _UART_RxChar *****************
   547 ;; Defined at:
   548 ;;		line 123 in file "../00-libfiles/uart.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      unsigned char 
   555 ;; Registers used:
   556 ;;		wreg, status,2
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   562 ;;      Params:         0       0       0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used:    1
   568 ;; This function calls:
   569 ;;		Nothing
   570 ;; This function is called by:
   571 ;;		_main
   572 ;;		_UART_RxString
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text2
   577  000FEE                     __ptext2:
   578                           	opt stack 0
   579  000FEE                     _UART_RxChar:
   580                           	opt stack 30
   581  000FEE                     l33:
   582  000FEE  AA9E               	btfss	3998,5,c	;volatile
   583  000FF0  D7FE               	goto	l33
   584                           
   585                           ;uart.c: 126: RCIF=0;
   586  000FF2  9A9E               	bcf	3998,5,c	;volatile
   587                           
   588                           ;uart.c: 127: return(RCREG);
   589  000FF4  50AE               	movf	4014,w,c	;volatile
   590  000FF6  0012               	return	
   591  000FF8                     __end_of_UART_RxChar:
   592                           	opt stack 0
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1l	equ	0xFE1
   601                           
   602 ;; *************** function _UART_Init *****************
   603 ;; Defined at:
   604 ;;		line 66 in file "../00-libfiles/uart.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;  v_baudRate_u    4   22[COMRAM] unsigned long 
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   618 ;;      Params:         4       0       0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0       0       0
   621 ;;      Totals:         4       0       0       0       0       0       0
   622 ;;Total ram usage:        4 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    2
   625 ;; This function calls:
   626 ;;		_UART_SetBaudRate
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text3
   633  000F80                     __ptext3:
   634                           	opt stack 0
   635  000F80                     _UART_Init:
   636                           	opt stack 28
   637                           
   638                           ;uart.c: 68: TRISC=0x80;
   639                           
   640                           ;incstack = 0
   641  000F80  0E80               	movlw	128
   642  000F82  6E94               	movwf	3988,c	;volatile
   643                           
   644                           ;uart.c: 69: TXSTA=0x20;
   645  000F84  0E20               	movlw	32
   646  000F86  6EAC               	movwf	4012,c	;volatile
   647                           
   648                           ;uart.c: 70: RCSTA=0x90;
   649  000F88  0E90               	movlw	144
   650  000F8A  6EAB               	movwf	4011,c	;volatile
   651                           
   652                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
   653  000F8C  C017  F00E         	movff	UART_Init@v_baudRate_u32,UART_SetBaudRate@v_baudRate_u32
   654  000F90  C018  F00F         	movff	UART_Init@v_baudRate_u32+1,UART_SetBaudRate@v_baudRate_u32+1
   655  000F94  C019  F010         	movff	UART_Init@v_baudRate_u32+2,UART_SetBaudRate@v_baudRate_u32+2
   656  000F98  C01A  F011         	movff	UART_Init@v_baudRate_u32+3,UART_SetBaudRate@v_baudRate_u32+3
   657  000F9C  ECD1  F005         	call	_UART_SetBaudRate	;wreg free
   658  000FA0  0012               	return		;funcret
   659  000FA2                     __end_of_UART_Init:
   660                           	opt stack 0
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           postdec1	equ	0xFE5
   668                           fsr1l	equ	0xFE1
   669                           
   670 ;; *************** function _UART_SetBaudRate *****************
   671 ;; Defined at:
   672 ;;		line 91 in file "../00-libfiles/uart.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;  v_baudRate_u    4   13[COMRAM] unsigned long 
   675 ;; Auto vars:     Size  Location     Type
   676 ;;  RegValue        1   21[COMRAM] unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   686 ;;      Params:         4       0       0       0       0       0       0
   687 ;;      Locals:         1       0       0       0       0       0       0
   688 ;;      Temps:          4       0       0       0       0       0       0
   689 ;;      Totals:         9       0       0       0       0       0       0
   690 ;;Total ram usage:        9 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    1
   693 ;; This function calls:
   694 ;;		___lldiv
   695 ;; This function is called by:
   696 ;;		_UART_Init
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text4
   701  000BA2                     __ptext4:
   702                           	opt stack 0
   703  000BA2                     _UART_SetBaudRate:
   704                           	opt stack 28
   705                           
   706                           ;uart.c: 93: uint8_t RegValue;
   707                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
   708                           
   709                           ;incstack = 0
   710  000BA2  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
   711  000BA4  1010               	iorwf	UART_SetBaudRate@v_baudRate_u32+2,w,c
   712  000BA6  E106               	bnz	u2030
   713  000BA8  0E60               	movlw	96
   714  000BAA  5C0E               	subwf	UART_SetBaudRate@v_baudRate_u32,w,c
   715  000BAC  0E09               	movlw	9
   716  000BAE  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
   717  000BB0  A0D8               	btfss	status,0,c
   718  000BB2  D02D               	goto	l1996
   719  000BB4                     u2030:
   720  000BB4  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
   721  000BB6  E12B               	bnz	l1996
   722  000BB8  040E               	decf	UART_SetBaudRate@v_baudRate_u32,w,c
   723  000BBA  0EC2               	movlw	194
   724  000BBC  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
   725  000BBE  0E01               	movlw	1
   726  000BC0  5810               	subwfb	UART_SetBaudRate@v_baudRate_u32+2,w,c
   727  000BC2  B0D8               	btfsc	status,0,c
   728  000BC4  D024               	goto	l1996
   729                           
   730                           ;uart.c: 96: {
   731                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
   732  000BC6  0E00               	movlw	0
   733  000BC8  6E01               	movwf	___lldiv@dividend,c
   734  000BCA  0E2D               	movlw	45
   735  000BCC  6E02               	movwf	___lldiv@dividend+1,c
   736  000BCE  0E31               	movlw	49
   737  000BD0  6E03               	movwf	___lldiv@dividend+2,c
   738  000BD2  0E01               	movlw	1
   739  000BD4  6E04               	movwf	___lldiv@dividend+3,c
   740  000BD6  C00E  F012         	movff	UART_SetBaudRate@v_baudRate_u32,??_UART_SetBaudRate
   741  000BDA  C00F  F013         	movff	UART_SetBaudRate@v_baudRate_u32+1,??_UART_SetBaudRate+1
   742  000BDE  C010  F014         	movff	UART_SetBaudRate@v_baudRate_u32+2,??_UART_SetBaudRate+2
   743  000BE2  C011  F015         	movff	UART_SetBaudRate@v_baudRate_u32+3,??_UART_SetBaudRate+3
   744  000BE6  0E06               	movlw	6
   745  000BE8                     u2055:
   746  000BE8  90D8               	bcf	status,0,c
   747  000BEA  3612               	rlcf	??_UART_SetBaudRate,f,c
   748  000BEC  3613               	rlcf	??_UART_SetBaudRate+1,f,c
   749  000BEE  3614               	rlcf	??_UART_SetBaudRate+2,f,c
   750  000BF0  3615               	rlcf	??_UART_SetBaudRate+3,f,c
   751  000BF2  2EE8               	decfsz	wreg,f,c
   752  000BF4  D7F9               	goto	u2055
   753  000BF6  C012  F005         	movff	??_UART_SetBaudRate,___lldiv@divisor
   754  000BFA  C013  F006         	movff	??_UART_SetBaudRate+1,___lldiv@divisor+1
   755  000BFE  C014  F007         	movff	??_UART_SetBaudRate+2,___lldiv@divisor+2
   756  000C02  C015  F008         	movff	??_UART_SetBaudRate+3,___lldiv@divisor+3
   757  000C06  EC90  F005         	call	___lldiv	;wreg free
   758  000C0A  0401               	decf	?___lldiv,w,c
   759  000C0C  D001               	goto	L1
   760  000C0E                     l1996:
   761                           
   762                           ;uart.c: 101: else
   763                           ;uart.c: 102: {
   764                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
   765  000C0E  0E1F               	movlw	31
   766  000C10                     L1:
   767  000C10  6E16               	movwf	UART_SetBaudRate@RegValue,c
   768                           
   769                           ;uart.c: 105: }
   770                           ;uart.c: 107: SPBRG = RegValue;
   771  000C12  C016  FFAF         	movff	UART_SetBaudRate@RegValue,4015	;volatile
   772  000C16  0012               	return		;funcret
   773  000C18                     __end_of_UART_SetBaudRate:
   774                           	opt stack 0
   775                           tblptru	equ	0xFF8
   776                           tblptrh	equ	0xFF7
   777                           tblptrl	equ	0xFF6
   778                           tablat	equ	0xFF5
   779                           postinc0	equ	0xFEE
   780                           wreg	equ	0xFE8
   781                           postdec1	equ	0xFE5
   782                           fsr1l	equ	0xFE1
   783                           status	equ	0xFD8
   784                           
   785 ;; *************** function ___lldiv *****************
   786 ;; Defined at:
   787 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  dividend        4    0[COMRAM] unsigned long 
   790 ;;  divisor         4    4[COMRAM] unsigned long 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  quotient        4    8[COMRAM] unsigned long 
   793 ;;  counter         1   12[COMRAM] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  4    0[COMRAM] unsigned long 
   796 ;; Registers used:
   797 ;;		wreg, status,2, status,0
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   803 ;;      Params:         8       0       0       0       0       0       0
   804 ;;      Locals:         5       0       0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0
   806 ;;      Totals:        13       0       0       0       0       0       0
   807 ;;Total ram usage:       13 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; This function calls:
   810 ;;		Nothing
   811 ;; This function is called by:
   812 ;;		_UART_SetBaudRate
   813 ;;		_UART_TxNumber
   814 ;;		_LCD_DisplayNumber
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text5
   819  000B20                     __ptext5:
   820                           	opt stack 0
   821  000B20                     ___lldiv:
   822                           	opt stack 28
   823                           
   824                           ;incstack = 0
   825  000B20  0E00               	movlw	0
   826  000B22  6E09               	movwf	___lldiv@quotient,c
   827  000B24  0E00               	movlw	0
   828  000B26  6E0A               	movwf	___lldiv@quotient+1,c
   829  000B28  0E00               	movlw	0
   830  000B2A  6E0B               	movwf	___lldiv@quotient+2,c
   831  000B2C  0E00               	movlw	0
   832  000B2E  6E0C               	movwf	___lldiv@quotient+3,c
   833  000B30  5005               	movf	___lldiv@divisor,w,c
   834  000B32  1006               	iorwf	___lldiv@divisor+1,w,c
   835  000B34  1007               	iorwf	___lldiv@divisor+2,w,c
   836  000B36  1008               	iorwf	___lldiv@divisor+3,w,c
   837  000B38  B4D8               	btfsc	status,2,c
   838  000B3A  D02A               	goto	l802
   839  000B3C  0E01               	movlw	1
   840  000B3E  6E0D               	movwf	___lldiv@counter,c
   841  000B40  D006               	goto	l1976
   842  000B42                     l1974:
   843  000B42  90D8               	bcf	status,0,c
   844  000B44  3605               	rlcf	___lldiv@divisor,f,c
   845  000B46  3606               	rlcf	___lldiv@divisor+1,f,c
   846  000B48  3607               	rlcf	___lldiv@divisor+2,f,c
   847  000B4A  3608               	rlcf	___lldiv@divisor+3,f,c
   848  000B4C  2A0D               	incf	___lldiv@counter,f,c
   849  000B4E                     l1976:
   850  000B4E  AE08               	btfss	___lldiv@divisor+3,7,c
   851  000B50  D7F8               	goto	l1974
   852  000B52                     l1978:
   853  000B52  90D8               	bcf	status,0,c
   854  000B54  3609               	rlcf	___lldiv@quotient,f,c
   855  000B56  360A               	rlcf	___lldiv@quotient+1,f,c
   856  000B58  360B               	rlcf	___lldiv@quotient+2,f,c
   857  000B5A  360C               	rlcf	___lldiv@quotient+3,f,c
   858  000B5C  5005               	movf	___lldiv@divisor,w,c
   859  000B5E  5C01               	subwf	___lldiv@dividend,w,c
   860  000B60  5006               	movf	___lldiv@divisor+1,w,c
   861  000B62  5802               	subwfb	___lldiv@dividend+1,w,c
   862  000B64  5007               	movf	___lldiv@divisor+2,w,c
   863  000B66  5803               	subwfb	___lldiv@dividend+2,w,c
   864  000B68  5008               	movf	___lldiv@divisor+3,w,c
   865  000B6A  5804               	subwfb	___lldiv@dividend+3,w,c
   866  000B6C  A0D8               	btfss	status,0,c
   867  000B6E  D009               	goto	l1986
   868  000B70  5005               	movf	___lldiv@divisor,w,c
   869  000B72  5E01               	subwf	___lldiv@dividend,f,c
   870  000B74  5006               	movf	___lldiv@divisor+1,w,c
   871  000B76  5A02               	subwfb	___lldiv@dividend+1,f,c
   872  000B78  5007               	movf	___lldiv@divisor+2,w,c
   873  000B7A  5A03               	subwfb	___lldiv@dividend+2,f,c
   874  000B7C  5008               	movf	___lldiv@divisor+3,w,c
   875  000B7E  5A04               	subwfb	___lldiv@dividend+3,f,c
   876  000B80  8009               	bsf	___lldiv@quotient,0,c
   877  000B82                     l1986:
   878  000B82  90D8               	bcf	status,0,c
   879  000B84  3208               	rrcf	___lldiv@divisor+3,f,c
   880  000B86  3207               	rrcf	___lldiv@divisor+2,f,c
   881  000B88  3206               	rrcf	___lldiv@divisor+1,f,c
   882  000B8A  3205               	rrcf	___lldiv@divisor,f,c
   883  000B8C  2E0D               	decfsz	___lldiv@counter,f,c
   884  000B8E  D7E1               	goto	l1978
   885  000B90                     l802:
   886  000B90  C009  F001         	movff	___lldiv@quotient,?___lldiv
   887  000B94  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   888  000B98  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   889  000B9C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   890  000BA0  0012               	return		;funcret
   891  000BA2                     __end_of___lldiv:
   892                           	opt stack 0
   893                           tblptru	equ	0xFF8
   894                           tblptrh	equ	0xFF7
   895                           tblptrl	equ	0xFF6
   896                           tablat	equ	0xFF5
   897                           postinc0	equ	0xFEE
   898                           wreg	equ	0xFE8
   899                           postdec1	equ	0xFE5
   900                           fsr1l	equ	0xFE1
   901                           status	equ	0xFD8
   902                           
   903 ;; *************** function _LCD_SetUp *****************
   904 ;; Defined at:
   905 ;;		line 135 in file "../00-libfiles/lcd.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  RS              1    wreg     enum E3222
   908 ;;  RW              1    5[COMRAM] enum E3222
   909 ;;  EN              1    6[COMRAM] enum E3222
   910 ;;  D0              1    7[COMRAM] enum E3222
   911 ;;  D1              1    8[COMRAM] enum E3222
   912 ;;  D2              1    9[COMRAM] enum E3222
   913 ;;  D3              1   10[COMRAM] enum E3222
   914 ;;  D4              1   11[COMRAM] enum E3222
   915 ;;  D5              1   12[COMRAM] enum E3222
   916 ;;  D6              1   13[COMRAM] enum E3222
   917 ;;  D7              1   14[COMRAM] enum E3222
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  RS              1   15[COMRAM] enum E3222
   920 ;; Return value:  Size  Location     Type
   921 ;;                  1    wreg      void 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   929 ;;      Params:        10       0       0       0       0       0       0
   930 ;;      Locals:         1       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0
   932 ;;      Totals:        11       0       0       0       0       0       0
   933 ;;Total ram usage:       11 bytes
   934 ;; Hardware stack levels used:    1
   935 ;; Hardware stack levels required when called:    1
   936 ;; This function calls:
   937 ;;		_GPIO_PinDirection
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text6
   944  0009B4                     __ptext6:
   945                           	opt stack 0
   946  0009B4                     _LCD_SetUp:
   947                           	opt stack 29
   948                           
   949                           ;incstack = 0
   950                           ;LCD_SetUp@RS stored from wreg
   951  0009B4  6E10               	movwf	LCD_SetUp@RS,c
   952                           
   953                           ;lcd.c: 148: LCDConfig.RS = RS;
   954  0009B6  C010  F01F         	movff	LCD_SetUp@RS,_LCDConfig+3
   955                           
   956                           ;lcd.c: 149: LCDConfig.RW = RW;
   957  0009BA  C006  F020         	movff	LCD_SetUp@RW,_LCDConfig+4
   958                           
   959                           ;lcd.c: 150: LCDConfig.EN = EN;
   960  0009BE  C007  F021         	movff	LCD_SetUp@EN,_LCDConfig+5
   961                           
   962                           ;lcd.c: 152: LCDConfig.D0 = D0;
   963  0009C2  C008  F022         	movff	LCD_SetUp@D0,_LCDConfig+6
   964                           
   965                           ;lcd.c: 153: LCDConfig.D1 = D1;
   966  0009C6  C009  F023         	movff	LCD_SetUp@D1,_LCDConfig+7
   967                           
   968                           ;lcd.c: 154: LCDConfig.D2 = D2;
   969  0009CA  C00A  F024         	movff	LCD_SetUp@D2,_LCDConfig+8
   970                           
   971                           ;lcd.c: 155: LCDConfig.D3 = D3;
   972  0009CE  C00B  F025         	movff	LCD_SetUp@D3,_LCDConfig+9
   973                           
   974                           ;lcd.c: 156: LCDConfig.D4 = D4;
   975  0009D2  C00C  F026         	movff	LCD_SetUp@D4,_LCDConfig+10
   976                           
   977                           ;lcd.c: 157: LCDConfig.D5 = D5;
   978  0009D6  C00D  F027         	movff	LCD_SetUp@D5,_LCDConfig+11
   979                           
   980                           ;lcd.c: 158: LCDConfig.D6 = D6;
   981  0009DA  C00E  F028         	movff	LCD_SetUp@D6,_LCDConfig+12
   982                           
   983                           ;lcd.c: 159: LCDConfig.D7 = D7;
   984  0009DE  C00F  F029         	movff	LCD_SetUp@D7,_LCDConfig+13
   985                           
   986                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
   987  0009E2  2808               	incf	LCD_SetUp@D0,w,c
   988  0009E4  B4D8               	btfsc	status,2,c
   989  0009E6  D009               	goto	l2102
   990  0009E8  2809               	incf	LCD_SetUp@D1,w,c
   991  0009EA  B4D8               	btfsc	status,2,c
   992  0009EC  D006               	goto	l2102
   993  0009EE  280A               	incf	LCD_SetUp@D2,w,c
   994  0009F0  B4D8               	btfsc	status,2,c
   995  0009F2  D003               	goto	l2102
   996  0009F4  280B               	incf	LCD_SetUp@D3,w,c
   997  0009F6  A4D8               	btfss	status,2,c
   998  0009F8  D003               	goto	l2104
   999  0009FA                     l2102:
  1000                           
  1001                           ;lcd.c: 163: {
  1002                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  1003  0009FA  0E04               	movlw	4
  1004  0009FC  6E1E               	movwf	_LCDConfig+2,c
  1005                           
  1006                           ;lcd.c: 165: }
  1007  0009FE  D016               	goto	l2114
  1008  000A00                     l2104:
  1009                           
  1010                           ;lcd.c: 166: else
  1011                           ;lcd.c: 167: {
  1012                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  1013  000A00  0E08               	movlw	8
  1014  000A02  6E1E               	movwf	_LCDConfig+2,c
  1015                           
  1016                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  1017  000A04  0E00               	movlw	0
  1018  000A06  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1019  000A08  5008               	movf	LCD_SetUp@D0,w,c
  1020  000A0A  ECC1  F003         	call	_GPIO_PinDirection
  1021                           
  1022                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  1023  000A0E  0E00               	movlw	0
  1024  000A10  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1025  000A12  5009               	movf	LCD_SetUp@D1,w,c
  1026  000A14  ECC1  F003         	call	_GPIO_PinDirection
  1027                           
  1028                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  1029  000A18  0E00               	movlw	0
  1030  000A1A  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1031  000A1C  500A               	movf	LCD_SetUp@D2,w,c
  1032  000A1E  ECC1  F003         	call	_GPIO_PinDirection
  1033                           
  1034                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  1035  000A22  0E00               	movlw	0
  1036  000A24  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1037  000A26  500B               	movf	LCD_SetUp@D3,w,c
  1038  000A28  ECC1  F003         	call	_GPIO_PinDirection
  1039  000A2C                     l2114:
  1040                           
  1041                           ;lcd.c: 173: }
  1042                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  1043  000A2C  0E00               	movlw	0
  1044  000A2E  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1045  000A30  5010               	movf	LCD_SetUp@RS,w,c
  1046  000A32  ECC1  F003         	call	_GPIO_PinDirection
  1047                           
  1048                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  1049  000A36  0E00               	movlw	0
  1050  000A38  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1051  000A3A  5006               	movf	LCD_SetUp@RW,w,c
  1052  000A3C  ECC1  F003         	call	_GPIO_PinDirection
  1053                           
  1054                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  1055  000A40  0E00               	movlw	0
  1056  000A42  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1057  000A44  5007               	movf	LCD_SetUp@EN,w,c
  1058  000A46  ECC1  F003         	call	_GPIO_PinDirection
  1059                           
  1060                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  1061  000A4A  0E00               	movlw	0
  1062  000A4C  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1063  000A4E  500C               	movf	LCD_SetUp@D4,w,c
  1064  000A50  ECC1  F003         	call	_GPIO_PinDirection
  1065                           
  1066                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  1067  000A54  0E00               	movlw	0
  1068  000A56  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1069  000A58  500D               	movf	LCD_SetUp@D5,w,c
  1070  000A5A  ECC1  F003         	call	_GPIO_PinDirection
  1071                           
  1072                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  1073  000A5E  0E00               	movlw	0
  1074  000A60  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1075  000A62  500E               	movf	LCD_SetUp@D6,w,c
  1076  000A64  ECC1  F003         	call	_GPIO_PinDirection
  1077                           
  1078                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  1079  000A68  0E00               	movlw	0
  1080  000A6A  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1081  000A6C  500F               	movf	LCD_SetUp@D7,w,c
  1082  000A6E  ECC1  F003         	call	_GPIO_PinDirection
  1083  000A72  0012               	return		;funcret
  1084  000A74                     __end_of_LCD_SetUp:
  1085                           	opt stack 0
  1086                           tblptru	equ	0xFF8
  1087                           tblptrh	equ	0xFF7
  1088                           tblptrl	equ	0xFF6
  1089                           tablat	equ	0xFF5
  1090                           postinc0	equ	0xFEE
  1091                           wreg	equ	0xFE8
  1092                           postdec1	equ	0xFE5
  1093                           fsr1l	equ	0xFE1
  1094                           status	equ	0xFD8
  1095                           
  1096 ;; *************** function _LCD_Init *****************
  1097 ;; Defined at:
  1098 ;;		line 198 in file "../00-libfiles/lcd.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  1101 ;;  v_MaxCharsPe    1    8[COMRAM] unsigned char 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  v_lcdNoOfLin    1    9[COMRAM] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1113 ;;      Params:         1       0       0       0       0       0       0
  1114 ;;      Locals:         1       0       0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0
  1116 ;;      Totals:         2       0       0       0       0       0       0
  1117 ;;Total ram usage:        2 bytes
  1118 ;; Hardware stack levels used:    1
  1119 ;; Hardware stack levels required when called:    6
  1120 ;; This function calls:
  1121 ;;		_DELAY_ms
  1122 ;;		_LCD_Clear
  1123 ;;		_LCD_CmdWrite
  1124 ;;		_lcd_Reset
  1125 ;; This function is called by:
  1126 ;;		_main
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text7
  1131  000C8A                     __ptext7:
  1132                           	opt stack 0
  1133  000C8A                     _LCD_Init:
  1134                           	opt stack 24
  1135                           
  1136                           ;incstack = 0
  1137                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  1138  000C8A  6E0A               	movwf	LCD_Init@v_lcdNoOfLines_u8,c
  1139                           
  1140                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  1141  000C8C  C009  F01D         	movff	LCD_Init@v_MaxCharsPerLine_u8,_LCDConfig+1
  1142                           
  1143                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  1144  000C90  C00A  F01C         	movff	LCD_Init@v_lcdNoOfLines_u8,_LCDConfig
  1145                           
  1146                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  1147  000C94  0E02               	movlw	2
  1148  000C96  640A               	cpfsgt	LCD_Init@v_lcdNoOfLines_u8,c
  1149  000C98  D008               	goto	l2136
  1150                           
  1151                           ;lcd.c: 205: {
  1152                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  1153  000C9A  5009               	movf	LCD_Init@v_MaxCharsPerLine_u8,w,c
  1154  000C9C  0B0F               	andlw	15
  1155  000C9E  0F90               	addlw	144
  1156  000CA0  6E2E               	movwf	_ARR_LcdLineNumAddress_U8+2,c
  1157                           
  1158                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  1159  000CA2  5009               	movf	LCD_Init@v_MaxCharsPerLine_u8,w,c
  1160  000CA4  0B0F               	andlw	15
  1161  000CA6  0FD0               	addlw	208
  1162  000CA8  6E2F               	movwf	_ARR_LcdLineNumAddress_U8+3,c
  1163  000CAA                     l2136:
  1164                           
  1165                           ;lcd.c: 208: }
  1166                           ;lcd.c: 210: DELAY_ms(100);
  1167  000CAA  0E00               	movlw	0
  1168  000CAC  6E04               	movwf	DELAY_ms@ms_count+1,c
  1169  000CAE  0E64               	movlw	100
  1170  000CB0  6E03               	movwf	DELAY_ms@ms_count,c
  1171  000CB2  ECD1  F007         	call	_DELAY_ms	;wreg free
  1172                           
  1173                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  1174  000CB6  0E08               	movlw	8
  1175  000CB8  181E               	xorwf	_LCDConfig+2,w,c
  1176  000CBA  A4D8               	btfss	status,2,c
  1177  000CBC  D004               	goto	l2142
  1178                           
  1179                           ;lcd.c: 213: {
  1180                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  1181  000CBE  0E38               	movlw	56
  1182  000CC0  EC55  F007         	call	_LCD_CmdWrite
  1183                           
  1184                           ;lcd.c: 215: }
  1185  000CC4  D009               	goto	l176
  1186  000CC6                     l2142:
  1187                           
  1188                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  1189  000CC6  0E04               	movlw	4
  1190  000CC8  181E               	xorwf	_LCDConfig+2,w,c
  1191  000CCA  A4D8               	btfss	status,2,c
  1192  000CCC  D005               	goto	l176
  1193                           
  1194                           ;lcd.c: 217: {
  1195                           ;lcd.c: 218: lcd_Reset();
  1196  000CCE  EC72  F006         	call	_lcd_Reset	;wreg free
  1197                           
  1198                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  1199  000CD2  0E28               	movlw	40
  1200  000CD4  EC55  F007         	call	_LCD_CmdWrite
  1201  000CD8                     l176:
  1202                           
  1203                           ;lcd.c: 220: }
  1204                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  1205  000CD8  0E0E               	movlw	14
  1206  000CDA  EC55  F007         	call	_LCD_CmdWrite
  1207                           
  1208                           ;lcd.c: 223: LCD_Clear();
  1209  000CDE  ECF0  F007         	call	_LCD_Clear	;wreg free
  1210  000CE2  0012               	return		;funcret
  1211  000CE4                     __end_of_LCD_Init:
  1212                           	opt stack 0
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec1	equ	0xFE5
  1220                           fsr1l	equ	0xFE1
  1221                           status	equ	0xFD8
  1222                           
  1223 ;; *************** function _lcd_Reset *****************
  1224 ;; Defined at:
  1225 ;;		line 913 in file "../00-libfiles/lcd.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1239 ;;      Params:         0       0       0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    2
  1246 ;; This function calls:
  1247 ;;		_DELAY_ms
  1248 ;;		_DELAY_us
  1249 ;;		_lcd_SendCmdSignals
  1250 ;;		_lcd_SendHigherNibble
  1251 ;; This function is called by:
  1252 ;;		_LCD_Init
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           	psect	text8
  1257  000CE4                     __ptext8:
  1258                           	opt stack 0
  1259  000CE4                     _lcd_Reset:
  1260                           	opt stack 27
  1261                           
  1262                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
  1263                           
  1264                           ;incstack = 0
  1265  000CE4  0E30               	movlw	48
  1266  000CE6  ECC5  F006         	call	_lcd_SendHigherNibble
  1267                           
  1268                           ;lcd.c: 917: lcd_SendCmdSignals();
  1269  000CEA  EC21  F007         	call	_lcd_SendCmdSignals	;wreg free
  1270                           
  1271                           ;lcd.c: 918: DELAY_ms(100);
  1272  000CEE  0E00               	movlw	0
  1273  000CF0  6E04               	movwf	DELAY_ms@ms_count+1,c
  1274  000CF2  0E64               	movlw	100
  1275  000CF4  6E03               	movwf	DELAY_ms@ms_count,c
  1276  000CF6  ECD1  F007         	call	_DELAY_ms	;wreg free
  1277                           
  1278                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
  1279  000CFA  0E30               	movlw	48
  1280  000CFC  ECC5  F006         	call	_lcd_SendHigherNibble
  1281                           
  1282                           ;lcd.c: 920: lcd_SendCmdSignals();
  1283  000D00  EC21  F007         	call	_lcd_SendCmdSignals	;wreg free
  1284                           
  1285                           ;lcd.c: 921: DELAY_us(200);
  1286  000D04  0E00               	movlw	0
  1287  000D06  6E02               	movwf	DELAY_us@us_count+1,c
  1288  000D08  0EC8               	movlw	200
  1289  000D0A  6E01               	movwf	DELAY_us@us_count,c
  1290  000D0C  ECE0  F007         	call	_DELAY_us	;wreg free
  1291                           
  1292                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
  1293  000D10  0E30               	movlw	48
  1294  000D12  ECC5  F006         	call	_lcd_SendHigherNibble
  1295                           
  1296                           ;lcd.c: 923: lcd_SendCmdSignals();
  1297  000D16  EC21  F007         	call	_lcd_SendCmdSignals	;wreg free
  1298                           
  1299                           ;lcd.c: 924: DELAY_us(200);
  1300  000D1A  0E00               	movlw	0
  1301  000D1C  6E02               	movwf	DELAY_us@us_count+1,c
  1302  000D1E  0EC8               	movlw	200
  1303  000D20  6E01               	movwf	DELAY_us@us_count,c
  1304  000D22  ECE0  F007         	call	_DELAY_us	;wreg free
  1305                           
  1306                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
  1307  000D26  0E20               	movlw	32
  1308  000D28  ECC5  F006         	call	_lcd_SendHigherNibble
  1309                           
  1310                           ;lcd.c: 926: lcd_SendCmdSignals();
  1311  000D2C  EC21  F007         	call	_lcd_SendCmdSignals	;wreg free
  1312                           
  1313                           ;lcd.c: 927: DELAY_us(200);
  1314  000D30  0E00               	movlw	0
  1315  000D32  6E02               	movwf	DELAY_us@us_count+1,c
  1316  000D34  0EC8               	movlw	200
  1317  000D36  6E01               	movwf	DELAY_us@us_count,c
  1318  000D38  ECE0  F007         	call	_DELAY_us	;wreg free
  1319  000D3C  0012               	return		;funcret
  1320  000D3E                     __end_of_lcd_Reset:
  1321                           	opt stack 0
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           postinc0	equ	0xFEE
  1327                           wreg	equ	0xFE8
  1328                           postdec1	equ	0xFE5
  1329                           fsr1l	equ	0xFE1
  1330                           status	equ	0xFD8
  1331                           
  1332 ;; *************** function _LCD_Clear *****************
  1333 ;; Defined at:
  1334 ;;		line 237 in file "../00-libfiles/lcd.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;		None
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1348 ;;      Params:         0       0       0       0       0       0       0
  1349 ;;      Locals:         0       0       0       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0       0       0
  1351 ;;      Totals:         0       0       0       0       0       0       0
  1352 ;;Total ram usage:        0 bytes
  1353 ;; Hardware stack levels used:    1
  1354 ;; Hardware stack levels required when called:    5
  1355 ;; This function calls:
  1356 ;;		_LCD_CmdWrite
  1357 ;;		_LCD_GoToLine
  1358 ;; This function is called by:
  1359 ;;		_LCD_Init
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text9
  1364  000FE0                     __ptext9:
  1365                           	opt stack 0
  1366  000FE0                     _LCD_Clear:
  1367                           	opt stack 24
  1368                           
  1369                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  1370                           
  1371                           ;incstack = 0
  1372  000FE0  0E01               	movlw	1
  1373  000FE2  EC55  F007         	call	_LCD_CmdWrite
  1374                           
  1375                           ;lcd.c: 240: LCD_GoToLine(0x00);
  1376  000FE6  0E00               	movlw	0
  1377  000FE8  EC6E  F007         	call	_LCD_GoToLine
  1378  000FEC  0012               	return		;funcret
  1379  000FEE                     __end_of_LCD_Clear:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           postinc0	equ	0xFEE
  1386                           wreg	equ	0xFE8
  1387                           postdec1	equ	0xFE5
  1388                           fsr1l	equ	0xFE1
  1389                           status	equ	0xFD8
  1390                           
  1391 ;; *************** function _LCD_GoToLine *****************
  1392 ;; Defined at:
  1393 ;;		line 265 in file "../00-libfiles/lcd.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  v_lineNumber    1    wreg     unsigned char 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  v_lineNumber    1    7[COMRAM] unsigned char 
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1407 ;;      Params:         0       0       0       0       0       0       0
  1408 ;;      Locals:         1       0       0       0       0       0       0
  1409 ;;      Temps:          0       0       0       0       0       0       0
  1410 ;;      Totals:         1       0       0       0       0       0       0
  1411 ;;Total ram usage:        1 bytes
  1412 ;; Hardware stack levels used:    1
  1413 ;; Hardware stack levels required when called:    4
  1414 ;; This function calls:
  1415 ;;		_LCD_CmdWrite
  1416 ;; This function is called by:
  1417 ;;		_LCD_Clear
  1418 ;;		_main
  1419 ;;		_LCD_ScrollMessage
  1420 ;; This function uses a non-reentrant model
  1421 ;;
  1422                           
  1423                           	psect	text10
  1424  000EDC                     __ptext10:
  1425                           	opt stack 0
  1426  000EDC                     _LCD_GoToLine:
  1427                           	opt stack 24
  1428                           
  1429                           ;incstack = 0
  1430                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  1431  000EDC  6E08               	movwf	LCD_GoToLine@v_lineNumber_u8,c
  1432                           
  1433                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  1434  000EDE  501C               	movf	_LCDConfig,w,c
  1435  000EE0  5C08               	subwf	LCD_GoToLine@v_lineNumber_u8,w,c
  1436  000EE2  B0D8               	btfsc	status,0,c
  1437  000EE4  0012               	return	
  1438                           
  1439                           ;lcd.c: 268: {
  1440                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  1441  000EE6  0E00               	movlw	0
  1442  000EE8  6E2A               	movwf	_v_LcdTrackCursorPos_U8,c
  1443                           
  1444                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  1445  000EEA  C008  F02B         	movff	LCD_GoToLine@v_lineNumber_u8,_v_LcdTrackLineNum_U8
  1446                           
  1447                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  1448  000EEE  5008               	movf	LCD_GoToLine@v_lineNumber_u8,w,c
  1449  000EF0  0D01               	mullw	1
  1450  000EF2  0E2C               	movlw	low _ARR_LcdLineNumAddress_U8
  1451  000EF4  24F3               	addwf	prodl,w,c
  1452  000EF6  6ED9               	movwf	fsr2l,c
  1453  000EF8  0E00               	movlw	high _ARR_LcdLineNumAddress_U8
  1454  000EFA  20F4               	addwfc	prodh,w,c
  1455  000EFC  6EDA               	movwf	fsr2h,c
  1456  000EFE  50DF               	movf	indf2,w,c
  1457  000F00  EC55  F007         	call	_LCD_CmdWrite
  1458  000F04  0012               	return	
  1459  000F06                     __end_of_LCD_GoToLine:
  1460                           	opt stack 0
  1461                           tblptru	equ	0xFF8
  1462                           tblptrh	equ	0xFF7
  1463                           tblptrl	equ	0xFF6
  1464                           tablat	equ	0xFF5
  1465                           prodh	equ	0xFF4
  1466                           prodl	equ	0xFF3
  1467                           postinc0	equ	0xFEE
  1468                           wreg	equ	0xFE8
  1469                           postdec1	equ	0xFE5
  1470                           fsr1l	equ	0xFE1
  1471                           indf2	equ	0xFDF
  1472                           fsr2h	equ	0xFDA
  1473                           fsr2l	equ	0xFD9
  1474                           status	equ	0xFD8
  1475                           
  1476 ;; *************** function _LCD_DisplayString *****************
  1477 ;; Defined at:
  1478 ;;		line 427 in file "../00-libfiles/lcd.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  ptr_stringPo    2    8[COMRAM] PTR const unsigned char 
  1481 ;;		 -> STR_1(32), 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1493 ;;      Params:         2       0       0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0
  1496 ;;      Totals:         2       0       0       0       0       0       0
  1497 ;;Total ram usage:        2 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    6
  1500 ;; This function calls:
  1501 ;;		_LCD_DisplayChar
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;;		_LCD_Printf
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           	psect	text11
  1509  000F06                     __ptext11:
  1510                           	opt stack 0
  1511  000F06                     _LCD_DisplayString:
  1512                           	opt stack 24
  1513                           
  1514                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  1515                           
  1516                           ;incstack = 0
  1517  000F06  D00A               	goto	l2154
  1518  000F08                     l2150:
  1519                           
  1520                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1521  000F08  C009  FFF6         	movff	LCD_DisplayString@ptr_stringPointer_u8,tblptrl
  1522  000F0C  C00A  FFF7         	movff	LCD_DisplayString@ptr_stringPointer_u8+1,tblptrh
  1523  000F10                     	if	0	;tblptru may be non-zero
  1524  000F10                     	endif
  1525  000F10                     	if	0	;tblptru may be non-zero
  1526  000F10                     	endif
  1527  000F10  0008               	tblrd		*
  1528  000F12  50F5               	movf	tablat,w,c
  1529  000F14  ECAD  F007         	call	_LCD_DisplayChar
  1530  000F18  4A09               	infsnz	LCD_DisplayString@ptr_stringPointer_u8,f,c
  1531  000F1A  2A0A               	incf	LCD_DisplayString@ptr_stringPointer_u8+1,f,c
  1532  000F1C                     l2154:
  1533  000F1C  C009  FFF6         	movff	LCD_DisplayString@ptr_stringPointer_u8,tblptrl
  1534  000F20  C00A  FFF7         	movff	LCD_DisplayString@ptr_stringPointer_u8+1,tblptrh
  1535  000F24                     	if	0	;tblptru may be non-zero
  1536  000F24                     	endif
  1537  000F24                     	if	0	;tblptru may be non-zero
  1538  000F24                     	endif
  1539  000F24  0008               	tblrd		*
  1540  000F26  50F5               	movf	tablat,w,c
  1541  000F28  0900               	iorlw	0
  1542  000F2A  B4D8               	btfsc	status,2,c
  1543  000F2C  0012               	return	
  1544  000F2E  D7EC               	goto	l2150
  1545  000F30                     __end_of_LCD_DisplayString:
  1546                           	opt stack 0
  1547                           tblptru	equ	0xFF8
  1548                           tblptrh	equ	0xFF7
  1549                           tblptrl	equ	0xFF6
  1550                           tablat	equ	0xFF5
  1551                           prodh	equ	0xFF4
  1552                           prodl	equ	0xFF3
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           postdec1	equ	0xFE5
  1556                           fsr1l	equ	0xFE1
  1557                           indf2	equ	0xFDF
  1558                           fsr2h	equ	0xFDA
  1559                           fsr2l	equ	0xFD9
  1560                           status	equ	0xFD8
  1561                           
  1562 ;; *************** function _LCD_DisplayChar *****************
  1563 ;; Defined at:
  1564 ;;		line 392 in file "../00-libfiles/lcd.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  v_lcdData_u8    1    wreg     unsigned char 
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;  v_lcdData_u8    1    7[COMRAM] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1578 ;;      Params:         0       0       0       0       0       0       0
  1579 ;;      Locals:         1       0       0       0       0       0       0
  1580 ;;      Temps:          0       0       0       0       0       0       0
  1581 ;;      Totals:         1       0       0       0       0       0       0
  1582 ;;Total ram usage:        1 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    5
  1585 ;; This function calls:
  1586 ;;		_LCD_GoToNextLine
  1587 ;;		_lcd_DataWrite
  1588 ;; This function is called by:
  1589 ;;		_LCD_DisplayString
  1590 ;;		_main
  1591 ;;		_LCD_ScrollMessage
  1592 ;;		_LCD_DisplayNumber
  1593 ;;		_LCD_Printf
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           	psect	text12
  1598  000F5A                     __ptext12:
  1599                           	opt stack 0
  1600  000F5A                     _LCD_DisplayChar:
  1601                           	opt stack 24
  1602                           
  1603                           ;incstack = 0
  1604                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  1605  000F5A  6E08               	movwf	LCD_DisplayChar@v_lcdData_u8,c
  1606                           
  1607                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  1608  000F5C  501D               	movf	_LCDConfig+1,w,c
  1609  000F5E  5C2A               	subwf	_v_LcdTrackCursorPos_U8,w,c
  1610  000F60  B0D8               	btfsc	status,0,c
  1611  000F62  D003               	goto	l2010
  1612  000F64  0E0A               	movlw	10
  1613  000F66  1808               	xorwf	LCD_DisplayChar@v_lcdData_u8,w,c
  1614  000F68  B4D8               	btfsc	status,2,c
  1615  000F6A                     l2010:
  1616                           
  1617                           ;lcd.c: 395: {
  1618                           ;lcd.c: 398: LCD_GoToNextLine();
  1619  000F6A  EC98  F007         	call	_LCD_GoToNextLine	;wreg free
  1620                           
  1621                           ;lcd.c: 399: }
  1622                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  1623  000F6E  0E0A               	movlw	10
  1624  000F70  1808               	xorwf	LCD_DisplayChar@v_lcdData_u8,w,c
  1625  000F72  B4D8               	btfsc	status,2,c
  1626  000F74  0012               	return	
  1627                           
  1628                           ;lcd.c: 401: {
  1629                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  1630  000F76  5008               	movf	LCD_DisplayChar@v_lcdData_u8,w,c
  1631  000F78  EC3C  F007         	call	_lcd_DataWrite
  1632                           
  1633                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  1634  000F7C  2A2A               	incf	_v_LcdTrackCursorPos_U8,f,c
  1635  000F7E  0012               	return	
  1636  000F80                     __end_of_LCD_DisplayChar:
  1637                           	opt stack 0
  1638                           tblptru	equ	0xFF8
  1639                           tblptrh	equ	0xFF7
  1640                           tblptrl	equ	0xFF6
  1641                           tablat	equ	0xFF5
  1642                           prodh	equ	0xFF4
  1643                           prodl	equ	0xFF3
  1644                           postinc0	equ	0xFEE
  1645                           wreg	equ	0xFE8
  1646                           postdec1	equ	0xFE5
  1647                           fsr1l	equ	0xFE1
  1648                           indf2	equ	0xFDF
  1649                           fsr2h	equ	0xFDA
  1650                           fsr2l	equ	0xFD9
  1651                           status	equ	0xFD8
  1652                           
  1653 ;; *************** function _lcd_DataWrite *****************
  1654 ;; Defined at:
  1655 ;;		line 826 in file "../00-libfiles/lcd.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  dataByte        1    wreg     unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  dataByte        1    6[COMRAM] unsigned char 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  1    wreg      void 
  1662 ;; Registers used:
  1663 ;;		wreg, status,2, status,0, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1669 ;;      Params:         0       0       0       0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0
  1672 ;;      Totals:         1       0       0       0       0       0       0
  1673 ;;Total ram usage:        1 bytes
  1674 ;; Hardware stack levels used:    1
  1675 ;; Hardware stack levels required when called:    3
  1676 ;; This function calls:
  1677 ;;		_lcd_BusyCheck
  1678 ;;		_lcd_SendDataSignals
  1679 ;;		_lcd_SendHigherNibble
  1680 ;;		_lcd_SendLowerNibble
  1681 ;; This function is called by:
  1682 ;;		_LCD_DisplayChar
  1683 ;; This function uses a non-reentrant model
  1684 ;;
  1685                           
  1686                           	psect	text13
  1687  000E78                     __ptext13:
  1688                           	opt stack 0
  1689  000E78                     _lcd_DataWrite:
  1690                           	opt stack 25
  1691                           
  1692                           ;incstack = 0
  1693                           ;lcd_DataWrite@dataByte stored from wreg
  1694  000E78  6E07               	movwf	lcd_DataWrite@dataByte,c
  1695                           
  1696                           ;lcd.c: 828: lcd_BusyCheck();
  1697  000E7A  EC3A  F005         	call	_lcd_BusyCheck	;wreg free
  1698                           
  1699                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  1700  000E7E  0E08               	movlw	8
  1701  000E80  181E               	xorwf	_LCDConfig+2,w,c
  1702  000E82  A4D8               	btfss	status,2,c
  1703  000E84  D004               	goto	l1960
  1704                           
  1705                           ;lcd.c: 830: {
  1706                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  1707  000E86  5007               	movf	lcd_DataWrite@dataByte,w,c
  1708  000E88  EC9F  F006         	call	_lcd_SendLowerNibble
  1709                           
  1710                           ;lcd.c: 832: }
  1711  000E8C  D008               	goto	l1964
  1712  000E8E                     l1960:
  1713                           
  1714                           ;lcd.c: 833: else
  1715                           ;lcd.c: 834: {
  1716                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  1717  000E8E  5007               	movf	lcd_DataWrite@dataByte,w,c
  1718  000E90  ECC5  F006         	call	_lcd_SendHigherNibble
  1719                           
  1720                           ;lcd.c: 836: lcd_SendDataSignals();
  1721  000E94  EC06  F007         	call	_lcd_SendDataSignals	;wreg free
  1722                           
  1723                           ;lcd.c: 837: dataByte = dataByte << 4;
  1724  000E98  3807               	swapf	lcd_DataWrite@dataByte,w,c
  1725  000E9A  0BF0               	andlw	240
  1726  000E9C  6E07               	movwf	lcd_DataWrite@dataByte,c
  1727  000E9E                     l1964:
  1728                           
  1729                           ;lcd.c: 838: }
  1730                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  1731  000E9E  5007               	movf	lcd_DataWrite@dataByte,w,c
  1732  000EA0  ECC5  F006         	call	_lcd_SendHigherNibble
  1733                           
  1734                           ;lcd.c: 841: lcd_SendDataSignals();
  1735  000EA4  EC06  F007         	call	_lcd_SendDataSignals	;wreg free
  1736  000EA8  0012               	return		;funcret
  1737  000EAA                     __end_of_lcd_DataWrite:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           prodh	equ	0xFF4
  1744                           prodl	equ	0xFF3
  1745                           postinc0	equ	0xFEE
  1746                           wreg	equ	0xFE8
  1747                           postdec1	equ	0xFE5
  1748                           fsr1l	equ	0xFE1
  1749                           indf2	equ	0xFDF
  1750                           fsr2h	equ	0xFDA
  1751                           fsr2l	equ	0xFD9
  1752                           status	equ	0xFD8
  1753                           
  1754 ;; *************** function _lcd_SendDataSignals *****************
  1755 ;; Defined at:
  1756 ;;		line 1002 in file "../00-libfiles/lcd.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1770 ;;      Params:         0       0       0       0       0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0
  1773 ;;      Totals:         0       0       0       0       0       0       0
  1774 ;;Total ram usage:        0 bytes
  1775 ;; Hardware stack levels used:    1
  1776 ;; Hardware stack levels required when called:    1
  1777 ;; This function calls:
  1778 ;;		_DELAY_us
  1779 ;;		_GPIO_PinWrite
  1780 ;; This function is called by:
  1781 ;;		_lcd_DataWrite
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text14
  1786  000E0C                     __ptext14:
  1787                           	opt stack 0
  1788  000E0C                     _lcd_SendDataSignals:
  1789                           	opt stack 26
  1790                           
  1791                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  1792                           
  1793                           ;incstack = 0
  1794  000E0C  0E01               	movlw	1
  1795  000E0E  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1796  000E10  501F               	movf	_LCDConfig+3,w,c
  1797  000E12  EC11  F003         	call	_GPIO_PinWrite
  1798                           
  1799                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  1800  000E16  0E00               	movlw	0
  1801  000E18  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1802  000E1A  5020               	movf	_LCDConfig+4,w,c
  1803  000E1C  EC11  F003         	call	_GPIO_PinWrite
  1804                           
  1805                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  1806  000E20  0E01               	movlw	1
  1807  000E22  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1808  000E24  5021               	movf	_LCDConfig+5,w,c
  1809  000E26  EC11  F003         	call	_GPIO_PinWrite
  1810                           
  1811                           ;lcd.c: 1007: DELAY_us(10);
  1812  000E2A  0E00               	movlw	0
  1813  000E2C  6E02               	movwf	DELAY_us@us_count+1,c
  1814  000E2E  0E0A               	movlw	10
  1815  000E30  6E01               	movwf	DELAY_us@us_count,c
  1816  000E32  ECE0  F007         	call	_DELAY_us	;wreg free
  1817                           
  1818                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  1819  000E36  0E00               	movlw	0
  1820  000E38  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1821  000E3A  5021               	movf	_LCDConfig+5,w,c
  1822  000E3C  EC11  F003         	call	_GPIO_PinWrite
  1823  000E40  0012               	return		;funcret
  1824  000E42                     __end_of_lcd_SendDataSignals:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           prodh	equ	0xFF4
  1831                           prodl	equ	0xFF3
  1832                           postinc0	equ	0xFEE
  1833                           wreg	equ	0xFE8
  1834                           postdec1	equ	0xFE5
  1835                           fsr1l	equ	0xFE1
  1836                           indf2	equ	0xFDF
  1837                           fsr2h	equ	0xFDA
  1838                           fsr2l	equ	0xFD9
  1839                           status	equ	0xFD8
  1840                           
  1841 ;; *************** function _LCD_GoToNextLine *****************
  1842 ;; Defined at:
  1843 ;;		line 292 in file "../00-libfiles/lcd.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1857 ;;      Params:         0       0       0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0
  1860 ;;      Totals:         0       0       0       0       0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    4
  1864 ;; This function calls:
  1865 ;;		_LCD_CmdWrite
  1866 ;; This function is called by:
  1867 ;;		_LCD_DisplayChar
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text15
  1872  000F30                     __ptext15:
  1873                           	opt stack 0
  1874  000F30                     _LCD_GoToNextLine:
  1875                           	opt stack 24
  1876                           
  1877                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  1878                           
  1879                           ;incstack = 0
  1880  000F30  2A2B               	incf	_v_LcdTrackLineNum_U8,f,c
  1881                           
  1882                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  1883  000F32  0E00               	movlw	0
  1884  000F34  6E2A               	movwf	_v_LcdTrackCursorPos_U8,c
  1885                           
  1886                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  1887  000F36  501C               	movf	_LCDConfig,w,c
  1888  000F38  5C2B               	subwf	_v_LcdTrackLineNum_U8,w,c
  1889  000F3A  A0D8               	btfss	status,0,c
  1890  000F3C  D002               	goto	l1952
  1891                           
  1892                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  1893  000F3E  0E00               	movlw	0
  1894  000F40  6E2B               	movwf	_v_LcdTrackLineNum_U8,c
  1895  000F42                     l1952:
  1896                           
  1897                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  1898  000F42  502B               	movf	_v_LcdTrackLineNum_U8,w,c
  1899  000F44  0D01               	mullw	1
  1900  000F46  0E2C               	movlw	low _ARR_LcdLineNumAddress_U8
  1901  000F48  24F3               	addwf	prodl,w,c
  1902  000F4A  6ED9               	movwf	fsr2l,c
  1903  000F4C  0E00               	movlw	high _ARR_LcdLineNumAddress_U8
  1904  000F4E  20F4               	addwfc	prodh,w,c
  1905  000F50  6EDA               	movwf	fsr2h,c
  1906  000F52  50DF               	movf	indf2,w,c
  1907  000F54  EC55  F007         	call	_LCD_CmdWrite
  1908  000F58  0012               	return		;funcret
  1909  000F5A                     __end_of_LCD_GoToNextLine:
  1910                           	opt stack 0
  1911                           tblptru	equ	0xFF8
  1912                           tblptrh	equ	0xFF7
  1913                           tblptrl	equ	0xFF6
  1914                           tablat	equ	0xFF5
  1915                           prodh	equ	0xFF4
  1916                           prodl	equ	0xFF3
  1917                           postinc0	equ	0xFEE
  1918                           wreg	equ	0xFE8
  1919                           postdec1	equ	0xFE5
  1920                           fsr1l	equ	0xFE1
  1921                           indf2	equ	0xFDF
  1922                           fsr2h	equ	0xFDA
  1923                           fsr2l	equ	0xFD9
  1924                           status	equ	0xFD8
  1925                           
  1926 ;; *************** function _LCD_CmdWrite *****************
  1927 ;; Defined at:
  1928 ;;		line 358 in file "../00-libfiles/lcd.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;  v_lcdCmd_u8     1    6[COMRAM] unsigned char 
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1942 ;;      Params:         0       0       0       0       0       0       0
  1943 ;;      Locals:         1       0       0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0       0       0
  1945 ;;      Totals:         1       0       0       0       0       0       0
  1946 ;;Total ram usage:        1 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    3
  1949 ;; This function calls:
  1950 ;;		_lcd_BusyCheck
  1951 ;;		_lcd_SendCmdSignals
  1952 ;;		_lcd_SendHigherNibble
  1953 ;;		_lcd_SendLowerNibble
  1954 ;; This function is called by:
  1955 ;;		_LCD_Init
  1956 ;;		_LCD_Clear
  1957 ;;		_LCD_GoToLine
  1958 ;;		_LCD_GoToNextLine
  1959 ;;		_LCD_ScrollMessage
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text16
  1964  000EAA                     __ptext16:
  1965                           	opt stack 0
  1966  000EAA                     _LCD_CmdWrite:
  1967                           	opt stack 26
  1968                           
  1969                           ;incstack = 0
  1970                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  1971  000EAA  6E07               	movwf	LCD_CmdWrite@v_lcdCmd_u8,c
  1972                           
  1973                           ;lcd.c: 360: lcd_BusyCheck();
  1974  000EAC  EC3A  F005         	call	_lcd_BusyCheck	;wreg free
  1975                           
  1976                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  1977  000EB0  0E08               	movlw	8
  1978  000EB2  181E               	xorwf	_LCDConfig+2,w,c
  1979  000EB4  A4D8               	btfss	status,2,c
  1980  000EB6  D004               	goto	l1926
  1981                           
  1982                           ;lcd.c: 362: {
  1983                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  1984  000EB8  5007               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  1985  000EBA  EC9F  F006         	call	_lcd_SendLowerNibble
  1986                           
  1987                           ;lcd.c: 364: }
  1988  000EBE  D008               	goto	l1930
  1989  000EC0                     l1926:
  1990                           
  1991                           ;lcd.c: 365: else
  1992                           ;lcd.c: 366: {
  1993                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  1994  000EC0  5007               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  1995  000EC2  ECC5  F006         	call	_lcd_SendHigherNibble
  1996                           
  1997                           ;lcd.c: 368: lcd_SendCmdSignals();
  1998  000EC6  EC21  F007         	call	_lcd_SendCmdSignals	;wreg free
  1999                           
  2000                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  2001  000ECA  3807               	swapf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  2002  000ECC  0BF0               	andlw	240
  2003  000ECE  6E07               	movwf	LCD_CmdWrite@v_lcdCmd_u8,c
  2004  000ED0                     l1930:
  2005                           
  2006                           ;lcd.c: 370: }
  2007                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  2008  000ED0  5007               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  2009  000ED2  ECC5  F006         	call	_lcd_SendHigherNibble
  2010                           
  2011                           ;lcd.c: 373: lcd_SendCmdSignals();
  2012  000ED6  EC21  F007         	call	_lcd_SendCmdSignals	;wreg free
  2013  000EDA  0012               	return		;funcret
  2014  000EDC                     __end_of_LCD_CmdWrite:
  2015                           	opt stack 0
  2016                           tblptru	equ	0xFF8
  2017                           tblptrh	equ	0xFF7
  2018                           tblptrl	equ	0xFF6
  2019                           tablat	equ	0xFF5
  2020                           prodh	equ	0xFF4
  2021                           prodl	equ	0xFF3
  2022                           postinc0	equ	0xFEE
  2023                           wreg	equ	0xFE8
  2024                           postdec1	equ	0xFE5
  2025                           fsr1l	equ	0xFE1
  2026                           indf2	equ	0xFDF
  2027                           fsr2h	equ	0xFDA
  2028                           fsr2l	equ	0xFD9
  2029                           status	equ	0xFD8
  2030                           
  2031 ;; *************** function _lcd_SendLowerNibble *****************
  2032 ;; Defined at:
  2033 ;;		line 962 in file "../00-libfiles/lcd.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;  dataByte        1    wreg     unsigned char 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  dataByte        1    5[COMRAM] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2047 ;;      Params:         0       0       0       0       0       0       0
  2048 ;;      Locals:         1       0       0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0
  2050 ;;      Totals:         1       0       0       0       0       0       0
  2051 ;;Total ram usage:        1 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    1
  2054 ;; This function calls:
  2055 ;;		_GPIO_PinWrite
  2056 ;; This function is called by:
  2057 ;;		_LCD_CmdWrite
  2058 ;;		_lcd_DataWrite
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           	psect	text17
  2063  000D3E                     __ptext17:
  2064                           	opt stack 0
  2065  000D3E                     _lcd_SendLowerNibble:
  2066                           	opt stack 27
  2067                           
  2068                           ;incstack = 0
  2069                           ;lcd_SendLowerNibble@dataByte stored from wreg
  2070  000D3E  6E06               	movwf	lcd_SendLowerNibble@dataByte,c
  2071                           
  2072                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&(((uint8_t)1<<(0))))!=0u));
  2073  000D40  A006               	btfss	lcd_SendLowerNibble@dataByte,0,c
  2074  000D42  D002               	goto	u1800
  2075  000D44  0E01               	movlw	1
  2076  000D46  D001               	goto	u1810
  2077  000D48                     u1800:
  2078  000D48  0E00               	movlw	0
  2079  000D4A                     u1810:
  2080  000D4A  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2081  000D4C  5022               	movf	_LCDConfig+6,w,c
  2082  000D4E  EC11  F003         	call	_GPIO_PinWrite
  2083                           
  2084                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&(((uint8_t)1<<(1))))!=0u));
  2085  000D52  A206               	btfss	lcd_SendLowerNibble@dataByte,1,c
  2086  000D54  D002               	goto	u1820
  2087  000D56  0E01               	movlw	1
  2088  000D58  D001               	goto	u1830
  2089  000D5A                     u1820:
  2090  000D5A  0E00               	movlw	0
  2091  000D5C                     u1830:
  2092  000D5C  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2093  000D5E  5023               	movf	_LCDConfig+7,w,c
  2094  000D60  EC11  F003         	call	_GPIO_PinWrite
  2095                           
  2096                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&(((uint8_t)1<<(2))))!=0u));
  2097  000D64  A406               	btfss	lcd_SendLowerNibble@dataByte,2,c
  2098  000D66  D002               	goto	u1840
  2099  000D68  0E01               	movlw	1
  2100  000D6A  D001               	goto	u1850
  2101  000D6C                     u1840:
  2102  000D6C  0E00               	movlw	0
  2103  000D6E                     u1850:
  2104  000D6E  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2105  000D70  5024               	movf	_LCDConfig+8,w,c
  2106  000D72  EC11  F003         	call	_GPIO_PinWrite
  2107                           
  2108                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&(((uint8_t)1<<(3))))!=0u));
  2109  000D76  A606               	btfss	lcd_SendLowerNibble@dataByte,3,c
  2110  000D78  D002               	goto	u1860
  2111  000D7A  0E01               	movlw	1
  2112  000D7C  D001               	goto	u1870
  2113  000D7E                     u1860:
  2114  000D7E  0E00               	movlw	0
  2115  000D80                     u1870:
  2116  000D80  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2117  000D82  5025               	movf	_LCDConfig+9,w,c
  2118  000D84  EC11  F003         	call	_GPIO_PinWrite
  2119  000D88  0012               	return		;funcret
  2120  000D8A                     __end_of_lcd_SendLowerNibble:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           postinc0	equ	0xFEE
  2129                           wreg	equ	0xFE8
  2130                           postdec1	equ	0xFE5
  2131                           fsr1l	equ	0xFE1
  2132                           indf2	equ	0xFDF
  2133                           fsr2h	equ	0xFDA
  2134                           fsr2l	equ	0xFD9
  2135                           status	equ	0xFD8
  2136                           
  2137 ;; *************** function _lcd_SendHigherNibble *****************
  2138 ;; Defined at:
  2139 ;;		line 943 in file "../00-libfiles/lcd.c"
  2140 ;; Parameters:    Size  Location     Type
  2141 ;;  dataByte        1    wreg     unsigned char 
  2142 ;; Auto vars:     Size  Location     Type
  2143 ;;  dataByte        1    5[COMRAM] unsigned char 
  2144 ;; Return value:  Size  Location     Type
  2145 ;;                  1    wreg      void 
  2146 ;; Registers used:
  2147 ;;		wreg, status,2, status,0, cstack
  2148 ;; Tracked objects:
  2149 ;;		On entry : 0/0
  2150 ;;		On exit  : 0/0
  2151 ;;		Unchanged: 0/0
  2152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2153 ;;      Params:         0       0       0       0       0       0       0
  2154 ;;      Locals:         1       0       0       0       0       0       0
  2155 ;;      Temps:          0       0       0       0       0       0       0
  2156 ;;      Totals:         1       0       0       0       0       0       0
  2157 ;;Total ram usage:        1 bytes
  2158 ;; Hardware stack levels used:    1
  2159 ;; Hardware stack levels required when called:    1
  2160 ;; This function calls:
  2161 ;;		_GPIO_PinWrite
  2162 ;; This function is called by:
  2163 ;;		_LCD_CmdWrite
  2164 ;;		_lcd_DataWrite
  2165 ;;		_lcd_Reset
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           	psect	text18
  2170  000D8A                     __ptext18:
  2171                           	opt stack 0
  2172  000D8A                     _lcd_SendHigherNibble:
  2173                           	opt stack 27
  2174                           
  2175                           ;incstack = 0
  2176                           ;lcd_SendHigherNibble@dataByte stored from wreg
  2177  000D8A  6E06               	movwf	lcd_SendHigherNibble@dataByte,c
  2178                           
  2179                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&(((uint8_t)1<<(4))))!=0u));
  2180  000D8C  A806               	btfss	lcd_SendHigherNibble@dataByte,4,c
  2181  000D8E  D002               	goto	u1880
  2182  000D90  0E01               	movlw	1
  2183  000D92  D001               	goto	u1890
  2184  000D94                     u1880:
  2185  000D94  0E00               	movlw	0
  2186  000D96                     u1890:
  2187  000D96  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2188  000D98  5026               	movf	_LCDConfig+10,w,c
  2189  000D9A  EC11  F003         	call	_GPIO_PinWrite
  2190                           
  2191                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&(((uint8_t)1<<(5))))!=0u));
  2192  000D9E  AA06               	btfss	lcd_SendHigherNibble@dataByte,5,c
  2193  000DA0  D002               	goto	u1900
  2194  000DA2  0E01               	movlw	1
  2195  000DA4  D001               	goto	u1910
  2196  000DA6                     u1900:
  2197  000DA6  0E00               	movlw	0
  2198  000DA8                     u1910:
  2199  000DA8  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2200  000DAA  5027               	movf	_LCDConfig+11,w,c
  2201  000DAC  EC11  F003         	call	_GPIO_PinWrite
  2202                           
  2203                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&(((uint8_t)1<<(6))))!=0u));
  2204  000DB0  AC06               	btfss	lcd_SendHigherNibble@dataByte,6,c
  2205  000DB2  D002               	goto	u1920
  2206  000DB4  0E01               	movlw	1
  2207  000DB6  D001               	goto	u1930
  2208  000DB8                     u1920:
  2209  000DB8  0E00               	movlw	0
  2210  000DBA                     u1930:
  2211  000DBA  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2212  000DBC  5028               	movf	_LCDConfig+12,w,c
  2213  000DBE  EC11  F003         	call	_GPIO_PinWrite
  2214                           
  2215                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&(((uint8_t)1<<(7))))!=0u));
  2216  000DC2  AE06               	btfss	lcd_SendHigherNibble@dataByte,7,c
  2217  000DC4  D002               	goto	u1940
  2218  000DC6  0E01               	movlw	1
  2219  000DC8  D001               	goto	u1950
  2220  000DCA                     u1940:
  2221  000DCA  0E00               	movlw	0
  2222  000DCC                     u1950:
  2223  000DCC  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2224  000DCE  5029               	movf	_LCDConfig+13,w,c
  2225  000DD0  EC11  F003         	call	_GPIO_PinWrite
  2226  000DD4  0012               	return		;funcret
  2227  000DD6                     __end_of_lcd_SendHigherNibble:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           postdec1	equ	0xFE5
  2238                           fsr1l	equ	0xFE1
  2239                           indf2	equ	0xFDF
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           status	equ	0xFD8
  2243                           
  2244 ;; *************** function _lcd_SendCmdSignals *****************
  2245 ;; Defined at:
  2246 ;;		line 981 in file "../00-libfiles/lcd.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2260 ;;      Params:         0       0       0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0       0       0
  2262 ;;      Temps:          0       0       0       0       0       0       0
  2263 ;;      Totals:         0       0       0       0       0       0       0
  2264 ;;Total ram usage:        0 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    1
  2267 ;; This function calls:
  2268 ;;		_DELAY_us
  2269 ;;		_GPIO_PinWrite
  2270 ;; This function is called by:
  2271 ;;		_LCD_CmdWrite
  2272 ;;		_lcd_Reset
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text19
  2277  000E42                     __ptext19:
  2278                           	opt stack 0
  2279  000E42                     _lcd_SendCmdSignals:
  2280                           	opt stack 27
  2281                           
  2282                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  2283                           
  2284                           ;incstack = 0
  2285  000E42  0E00               	movlw	0
  2286  000E44  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2287  000E46  501F               	movf	_LCDConfig+3,w,c
  2288  000E48  EC11  F003         	call	_GPIO_PinWrite
  2289                           
  2290                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  2291  000E4C  0E00               	movlw	0
  2292  000E4E  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2293  000E50  5020               	movf	_LCDConfig+4,w,c
  2294  000E52  EC11  F003         	call	_GPIO_PinWrite
  2295                           
  2296                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  2297  000E56  0E01               	movlw	1
  2298  000E58  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2299  000E5A  5021               	movf	_LCDConfig+5,w,c
  2300  000E5C  EC11  F003         	call	_GPIO_PinWrite
  2301                           
  2302                           ;lcd.c: 986: DELAY_us(10);
  2303  000E60  0E00               	movlw	0
  2304  000E62  6E02               	movwf	DELAY_us@us_count+1,c
  2305  000E64  0E0A               	movlw	10
  2306  000E66  6E01               	movwf	DELAY_us@us_count,c
  2307  000E68  ECE0  F007         	call	_DELAY_us	;wreg free
  2308                           
  2309                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  2310  000E6C  0E00               	movlw	0
  2311  000E6E  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2312  000E70  5021               	movf	_LCDConfig+5,w,c
  2313  000E72  EC11  F003         	call	_GPIO_PinWrite
  2314  000E76  0012               	return		;funcret
  2315  000E78                     __end_of_lcd_SendCmdSignals:
  2316                           	opt stack 0
  2317                           tblptru	equ	0xFF8
  2318                           tblptrh	equ	0xFF7
  2319                           tblptrl	equ	0xFF6
  2320                           tablat	equ	0xFF5
  2321                           prodh	equ	0xFF4
  2322                           prodl	equ	0xFF3
  2323                           postinc0	equ	0xFEE
  2324                           wreg	equ	0xFE8
  2325                           postdec1	equ	0xFE5
  2326                           fsr1l	equ	0xFE1
  2327                           indf2	equ	0xFDF
  2328                           fsr2h	equ	0xFDA
  2329                           fsr2l	equ	0xFD9
  2330                           status	equ	0xFD8
  2331                           
  2332 ;; *************** function _lcd_BusyCheck *****************
  2333 ;; Defined at:
  2334 ;;		line 860 in file "../00-libfiles/lcd.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  busyflag        1    5[COMRAM] unsigned char 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2348 ;;      Params:         0       0       0       0       0       0       0
  2349 ;;      Locals:         1       0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0       0
  2351 ;;      Totals:         1       0       0       0       0       0       0
  2352 ;;Total ram usage:        1 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; Hardware stack levels required when called:    2
  2355 ;; This function calls:
  2356 ;;		_DELAY_ms
  2357 ;;		_DELAY_us
  2358 ;;		_GPIO_PinDirection
  2359 ;;		_GPIO_PinRead
  2360 ;;		_GPIO_PinWrite
  2361 ;; This function is called by:
  2362 ;;		_LCD_CmdWrite
  2363 ;;		_lcd_DataWrite
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text20
  2368  000A74                     __ptext20:
  2369                           	opt stack 0
  2370  000A74                     _lcd_BusyCheck:
  2371                           	opt stack 26
  2372                           
  2373                           ;lcd.c: 862: uint8_t busyflag;
  2374                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  2375                           
  2376                           ;incstack = 0
  2377  000A74  2820               	incf	_LCDConfig+4,w,c
  2378  000A76  B4D8               	btfsc	status,2,c
  2379  000A78  D04C               	goto	l1912
  2380                           
  2381                           ;lcd.c: 865: {
  2382                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  2383  000A7A  0E01               	movlw	1
  2384  000A7C  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  2385  000A7E  5029               	movf	_LCDConfig+13,w,c
  2386  000A80  ECC1  F003         	call	_GPIO_PinDirection
  2387                           
  2388                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  2389  000A84  0E00               	movlw	0
  2390  000A86  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2391  000A88  501F               	movf	_LCDConfig+3,w,c
  2392  000A8A  EC11  F003         	call	_GPIO_PinWrite
  2393                           
  2394                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  2395  000A8E  0E01               	movlw	1
  2396  000A90  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2397  000A92  5020               	movf	_LCDConfig+4,w,c
  2398  000A94  EC11  F003         	call	_GPIO_PinWrite
  2399  000A98                     l293:
  2400                           
  2401                           ;lcd.c: 870: {
  2402                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  2403  000A98  0E00               	movlw	0
  2404  000A9A  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2405  000A9C  5021               	movf	_LCDConfig+5,w,c
  2406  000A9E  EC11  F003         	call	_GPIO_PinWrite
  2407                           
  2408                           ;lcd.c: 873: DELAY_us(10);
  2409  000AA2  0E00               	movlw	0
  2410  000AA4  6E02               	movwf	DELAY_us@us_count+1,c
  2411  000AA6  0E0A               	movlw	10
  2412  000AA8  6E01               	movwf	DELAY_us@us_count,c
  2413  000AAA  ECE0  F007         	call	_DELAY_us	;wreg free
  2414                           
  2415                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  2416  000AAE  0E01               	movlw	1
  2417  000AB0  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2418  000AB2  5021               	movf	_LCDConfig+5,w,c
  2419  000AB4  EC11  F003         	call	_GPIO_PinWrite
  2420                           
  2421                           ;lcd.c: 875: DELAY_us(10);
  2422  000AB8  0E00               	movlw	0
  2423  000ABA  6E02               	movwf	DELAY_us@us_count+1,c
  2424  000ABC  0E0A               	movlw	10
  2425  000ABE  6E01               	movwf	DELAY_us@us_count,c
  2426  000AC0  ECE0  F007         	call	_DELAY_us	;wreg free
  2427                           
  2428                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  2429  000AC4  5029               	movf	_LCDConfig+13,w,c
  2430  000AC6  EC71  F004         	call	_GPIO_PinRead
  2431  000ACA  6E06               	movwf	lcd_BusyCheck@busyflag,c
  2432                           
  2433                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  2434  000ACC  0E04               	movlw	4
  2435  000ACE  181E               	xorwf	_LCDConfig+2,w,c
  2436  000AD0  A4D8               	btfss	status,2,c
  2437  000AD2  D016               	goto	l1908
  2438                           
  2439                           ;lcd.c: 880: {
  2440                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  2441  000AD4  0E00               	movlw	0
  2442  000AD6  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2443  000AD8  5021               	movf	_LCDConfig+5,w,c
  2444  000ADA  EC11  F003         	call	_GPIO_PinWrite
  2445                           
  2446                           ;lcd.c: 883: DELAY_us(10);
  2447  000ADE  0E00               	movlw	0
  2448  000AE0  6E02               	movwf	DELAY_us@us_count+1,c
  2449  000AE2  0E0A               	movlw	10
  2450  000AE4  6E01               	movwf	DELAY_us@us_count,c
  2451  000AE6  ECE0  F007         	call	_DELAY_us	;wreg free
  2452                           
  2453                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  2454  000AEA  0E01               	movlw	1
  2455  000AEC  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  2456  000AEE  5021               	movf	_LCDConfig+5,w,c
  2457  000AF0  EC11  F003         	call	_GPIO_PinWrite
  2458                           
  2459                           ;lcd.c: 885: DELAY_us(10);
  2460  000AF4  0E00               	movlw	0
  2461  000AF6  6E02               	movwf	DELAY_us@us_count+1,c
  2462  000AF8  0E0A               	movlw	10
  2463  000AFA  6E01               	movwf	DELAY_us@us_count,c
  2464  000AFC  ECE0  F007         	call	_DELAY_us	;wreg free
  2465  000B00                     l1908:
  2466                           
  2467                           ;lcd.c: 886: }
  2468                           ;lcd.c: 887: }while(busyflag!=0);
  2469  000B00  5006               	movf	lcd_BusyCheck@busyflag,w,c
  2470  000B02  A4D8               	btfss	status,2,c
  2471  000B04  D7C9               	goto	l293
  2472                           
  2473                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  2474  000B06  0E00               	movlw	0
  2475  000B08  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  2476  000B0A  5029               	movf	_LCDConfig+13,w,c
  2477  000B0C  ECC1  F003         	call	_GPIO_PinDirection
  2478                           
  2479                           ;lcd.c: 890: }
  2480  000B10  0012               	return	
  2481  000B12                     l1912:
  2482                           
  2483                           ;lcd.c: 891: else
  2484                           ;lcd.c: 892: {
  2485                           ;lcd.c: 895: DELAY_ms(1);
  2486  000B12  0E00               	movlw	0
  2487  000B14  6E04               	movwf	DELAY_ms@ms_count+1,c
  2488  000B16  0E01               	movlw	1
  2489  000B18  6E03               	movwf	DELAY_ms@ms_count,c
  2490  000B1A  ECD1  F007         	call	_DELAY_ms	;wreg free
  2491  000B1E  0012               	return	
  2492  000B20                     __end_of_lcd_BusyCheck:
  2493                           	opt stack 0
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           prodh	equ	0xFF4
  2499                           prodl	equ	0xFF3
  2500                           postinc0	equ	0xFEE
  2501                           wreg	equ	0xFE8
  2502                           postdec1	equ	0xFE5
  2503                           fsr1l	equ	0xFE1
  2504                           indf2	equ	0xFDF
  2505                           fsr2h	equ	0xFDA
  2506                           fsr2l	equ	0xFD9
  2507                           status	equ	0xFD8
  2508                           
  2509 ;; *************** function _GPIO_PinWrite *****************
  2510 ;; Defined at:
  2511 ;;		line 127 in file "../00-libfiles/gpio.c"
  2512 ;; Parameters:    Size  Location     Type
  2513 ;;  enm_pinNumbe    1    wreg     enum E3211
  2514 ;;  var_pinValue    1    0[COMRAM] unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  2517 ;;  var_portNumb    1    3[COMRAM] unsigned char 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2527 ;;      Params:         1       0       0       0       0       0       0
  2528 ;;      Locals:         2       0       0       0       0       0       0
  2529 ;;      Temps:          2       0       0       0       0       0       0
  2530 ;;      Totals:         5       0       0       0       0       0       0
  2531 ;;Total ram usage:        5 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_lcd_BusyCheck
  2537 ;;		_lcd_SendHigherNibble
  2538 ;;		_lcd_SendLowerNibble
  2539 ;;		_lcd_SendCmdSignals
  2540 ;;		_lcd_SendDataSignals
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text21
  2545  000622                     __ptext21:
  2546                           	opt stack 0
  2547  000622                     _GPIO_PinWrite:
  2548                           	opt stack 27
  2549                           
  2550                           ;incstack = 0
  2551                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  2552  000622  6E05               	movwf	GPIO_PinWrite@enm_pinNumber,c
  2553                           
  2554                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  2555                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  2556  000624  3805               	swapf	GPIO_PinWrite@enm_pinNumber,w,c
  2557  000626  46E8               	rlncf	wreg,f,c
  2558  000628  0B1F               	andlw	31
  2559  00062A  6E04               	movwf	GPIO_PinWrite@var_portNumber_u8,c
  2560                           
  2561                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  2562  00062C  5005               	movf	GPIO_PinWrite@enm_pinNumber,w,c
  2563  00062E  0B07               	andlw	7
  2564  000630  6E05               	movwf	GPIO_PinWrite@enm_pinNumber,c
  2565                           
  2566                           ;gpio.c: 138: switch(var_portNumber_u8)
  2567  000632  D096               	goto	l1898
  2568  000634                     l1866:
  2569                           
  2570                           ;gpio.c: 142: ((var_pinValue_u8)? ((LATA) |= ((uint8_t)1<<(enm_pinNumber))): ((LATA) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2571  000634  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2572  000636  B4D8               	btfsc	status,2,c
  2573  000638  D00D               	goto	l1870
  2574  00063A  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2575  00063E  0E01               	movlw	1
  2576  000640  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2577  000642  2A02               	incf	??_GPIO_PinWrite,f,c
  2578  000644  D002               	goto	u1634
  2579  000646                     u1635:
  2580  000646  90D8               	bcf	status,0,c
  2581  000648  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2582  00064A                     u1634:
  2583  00064A  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2584  00064C  D7FC               	goto	u1635
  2585  00064E  5003               	movf	??_GPIO_PinWrite+1,w,c
  2586  000650  1289               	iorwf	3977,f,c	;volatile
  2587  000652  0012               	return	
  2588  000654                     l1870:
  2589  000654  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2590  000658  0E01               	movlw	1
  2591  00065A  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2592  00065C  2A02               	incf	??_GPIO_PinWrite,f,c
  2593  00065E  D002               	goto	u1644
  2594  000660                     u1645:
  2595  000660  90D8               	bcf	status,0,c
  2596  000662  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2597  000664                     u1644:
  2598  000664  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2599  000666  D7FC               	goto	u1645
  2600  000668  5003               	movf	??_GPIO_PinWrite+1,w,c
  2601  00066A  0AFF               	xorlw	255
  2602  00066C  1689               	andwf	3977,f,c	;volatile
  2603                           
  2604                           ;gpio.c: 143: break;
  2605  00066E  0012               	return	
  2606  000670                     l1872:
  2607                           
  2608                           ;gpio.c: 148: ((var_pinValue_u8)? ((LATB) |= ((uint8_t)1<<(enm_pinNumber))): ((LATB) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2609  000670  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2610  000672  B4D8               	btfsc	status,2,c
  2611  000674  D00D               	goto	l1876
  2612  000676  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2613  00067A  0E01               	movlw	1
  2614  00067C  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2615  00067E  2A02               	incf	??_GPIO_PinWrite,f,c
  2616  000680  D002               	goto	u1664
  2617  000682                     u1665:
  2618  000682  90D8               	bcf	status,0,c
  2619  000684  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2620  000686                     u1664:
  2621  000686  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2622  000688  D7FC               	goto	u1665
  2623  00068A  5003               	movf	??_GPIO_PinWrite+1,w,c
  2624  00068C  128A               	iorwf	3978,f,c	;volatile
  2625  00068E  0012               	return	
  2626  000690                     l1876:
  2627  000690  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2628  000694  0E01               	movlw	1
  2629  000696  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2630  000698  2A02               	incf	??_GPIO_PinWrite,f,c
  2631  00069A  D002               	goto	u1674
  2632  00069C                     u1675:
  2633  00069C  90D8               	bcf	status,0,c
  2634  00069E  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2635  0006A0                     u1674:
  2636  0006A0  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2637  0006A2  D7FC               	goto	u1675
  2638  0006A4  5003               	movf	??_GPIO_PinWrite+1,w,c
  2639  0006A6  0AFF               	xorlw	255
  2640  0006A8  168A               	andwf	3978,f,c	;volatile
  2641                           
  2642                           ;gpio.c: 149: break;
  2643  0006AA  0012               	return	
  2644  0006AC                     l1878:
  2645                           
  2646                           ;gpio.c: 154: ((var_pinValue_u8)? ((LATC) |= ((uint8_t)1<<(enm_pinNumber))): ((LATC) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2647  0006AC  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2648  0006AE  B4D8               	btfsc	status,2,c
  2649  0006B0  D00D               	goto	l1882
  2650  0006B2  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2651  0006B6  0E01               	movlw	1
  2652  0006B8  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2653  0006BA  2A02               	incf	??_GPIO_PinWrite,f,c
  2654  0006BC  D002               	goto	u1694
  2655  0006BE                     u1695:
  2656  0006BE  90D8               	bcf	status,0,c
  2657  0006C0  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2658  0006C2                     u1694:
  2659  0006C2  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2660  0006C4  D7FC               	goto	u1695
  2661  0006C6  5003               	movf	??_GPIO_PinWrite+1,w,c
  2662  0006C8  128B               	iorwf	3979,f,c	;volatile
  2663  0006CA  0012               	return	
  2664  0006CC                     l1882:
  2665  0006CC  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2666  0006D0  0E01               	movlw	1
  2667  0006D2  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2668  0006D4  2A02               	incf	??_GPIO_PinWrite,f,c
  2669  0006D6  D002               	goto	u1704
  2670  0006D8                     u1705:
  2671  0006D8  90D8               	bcf	status,0,c
  2672  0006DA  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2673  0006DC                     u1704:
  2674  0006DC  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2675  0006DE  D7FC               	goto	u1705
  2676  0006E0  5003               	movf	??_GPIO_PinWrite+1,w,c
  2677  0006E2  0AFF               	xorlw	255
  2678  0006E4  168B               	andwf	3979,f,c	;volatile
  2679                           
  2680                           ;gpio.c: 155: break;
  2681  0006E6  0012               	return	
  2682  0006E8                     l1884:
  2683                           
  2684                           ;gpio.c: 160: ((var_pinValue_u8)? ((LATD) |= ((uint8_t)1<<(enm_pinNumber))): ((LATD) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2685  0006E8  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2686  0006EA  B4D8               	btfsc	status,2,c
  2687  0006EC  D00D               	goto	l1888
  2688  0006EE  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2689  0006F2  0E01               	movlw	1
  2690  0006F4  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2691  0006F6  2A02               	incf	??_GPIO_PinWrite,f,c
  2692  0006F8  D002               	goto	u1724
  2693  0006FA                     u1725:
  2694  0006FA  90D8               	bcf	status,0,c
  2695  0006FC  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2696  0006FE                     u1724:
  2697  0006FE  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2698  000700  D7FC               	goto	u1725
  2699  000702  5003               	movf	??_GPIO_PinWrite+1,w,c
  2700  000704  128C               	iorwf	3980,f,c	;volatile
  2701  000706  0012               	return	
  2702  000708                     l1888:
  2703  000708  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2704  00070C  0E01               	movlw	1
  2705  00070E  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2706  000710  2A02               	incf	??_GPIO_PinWrite,f,c
  2707  000712  D002               	goto	u1734
  2708  000714                     u1735:
  2709  000714  90D8               	bcf	status,0,c
  2710  000716  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2711  000718                     u1734:
  2712  000718  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2713  00071A  D7FC               	goto	u1735
  2714  00071C  5003               	movf	??_GPIO_PinWrite+1,w,c
  2715  00071E  0AFF               	xorlw	255
  2716  000720  168C               	andwf	3980,f,c	;volatile
  2717                           
  2718                           ;gpio.c: 161: break;
  2719  000722  0012               	return	
  2720  000724                     l1890:
  2721                           
  2722                           ;gpio.c: 166: ((var_pinValue_u8)? ((LATE) |= ((uint8_t)1<<(enm_pinNumber))): ((LATE) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2723  000724  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2724  000726  B4D8               	btfsc	status,2,c
  2725  000728  D00D               	goto	l1894
  2726  00072A  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2727  00072E  0E01               	movlw	1
  2728  000730  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2729  000732  2A02               	incf	??_GPIO_PinWrite,f,c
  2730  000734  D002               	goto	u1754
  2731  000736                     u1755:
  2732  000736  90D8               	bcf	status,0,c
  2733  000738  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2734  00073A                     u1754:
  2735  00073A  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2736  00073C  D7FC               	goto	u1755
  2737  00073E  5003               	movf	??_GPIO_PinWrite+1,w,c
  2738  000740  128D               	iorwf	3981,f,c	;volatile
  2739  000742  0012               	return	
  2740  000744                     l1894:
  2741  000744  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2742  000748  0E01               	movlw	1
  2743  00074A  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2744  00074C  2A02               	incf	??_GPIO_PinWrite,f,c
  2745  00074E  D002               	goto	u1764
  2746  000750                     u1765:
  2747  000750  90D8               	bcf	status,0,c
  2748  000752  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  2749  000754                     u1764:
  2750  000754  2E02               	decfsz	??_GPIO_PinWrite,f,c
  2751  000756  D7FC               	goto	u1765
  2752  000758  5003               	movf	??_GPIO_PinWrite+1,w,c
  2753  00075A  0AFF               	xorlw	255
  2754  00075C  168D               	andwf	3981,f,c	;volatile
  2755                           
  2756                           ;gpio.c: 169: }
  2757                           
  2758                           ;gpio.c: 167: break;
  2759  00075E  0012               	return	
  2760  000760                     l1898:
  2761  000760  5004               	movf	GPIO_PinWrite@var_portNumber_u8,w,c
  2762                           
  2763                           ; Switch size 1, requested type "space"
  2764                           ; Number of cases is 5, Range of values is 0 to 4
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte           16     9 (average)
  2768                           ;	Chosen strategy is simple_byte
  2769  000762  0A00               	xorlw	0	; case 0
  2770  000764  B4D8               	btfsc	status,2,c
  2771  000766  D766               	goto	l1866
  2772  000768  0A01               	xorlw	1	; case 1
  2773  00076A  B4D8               	btfsc	status,2,c
  2774  00076C  D781               	goto	l1872
  2775  00076E  0A03               	xorlw	3	; case 2
  2776  000770  B4D8               	btfsc	status,2,c
  2777  000772  D79C               	goto	l1878
  2778  000774  0A01               	xorlw	1	; case 3
  2779  000776  B4D8               	btfsc	status,2,c
  2780  000778  D7B7               	goto	l1884
  2781  00077A  0A07               	xorlw	7	; case 4
  2782  00077C  A4D8               	btfss	status,2,c
  2783  00077E  0012               	return	
  2784  000780  D7D1               	goto	l1890
  2785  000782                     __end_of_GPIO_PinWrite:
  2786                           	opt stack 0
  2787                           tblptru	equ	0xFF8
  2788                           tblptrh	equ	0xFF7
  2789                           tblptrl	equ	0xFF6
  2790                           tablat	equ	0xFF5
  2791                           prodh	equ	0xFF4
  2792                           prodl	equ	0xFF3
  2793                           postinc0	equ	0xFEE
  2794                           wreg	equ	0xFE8
  2795                           postdec1	equ	0xFE5
  2796                           fsr1l	equ	0xFE1
  2797                           indf2	equ	0xFDF
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _GPIO_PinRead *****************
  2803 ;; Defined at:
  2804 ;;		line 192 in file "../00-libfiles/gpio.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  enm_pinNumbe    1    wreg     enum E3211
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  2809 ;;  returnStatus    1    3[COMRAM] unsigned char 
  2810 ;;  var_portNumb    1    2[COMRAM] unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      unsigned char 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2, status,0
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2820 ;;      Params:         0       0       0       0       0       0       0
  2821 ;;      Locals:         3       0       0       0       0       0       0
  2822 ;;      Temps:          2       0       0       0       0       0       0
  2823 ;;      Totals:         5       0       0       0       0       0       0
  2824 ;;Total ram usage:        5 bytes
  2825 ;; Hardware stack levels used:    1
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_lcd_BusyCheck
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text22
  2834  0008E2                     __ptext22:
  2835                           	opt stack 0
  2836  0008E2                     _GPIO_PinRead:
  2837                           	opt stack 27
  2838                           
  2839                           ;incstack = 0
  2840                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  2841  0008E2  6E05               	movwf	GPIO_PinRead@enm_pinNumber,c
  2842                           
  2843                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  2844                           ;gpio.c: 195: uint8_t returnStatus = 0;
  2845  0008E4  0E00               	movlw	0
  2846  0008E6  6E04               	movwf	GPIO_PinRead@returnStatus,c
  2847                           
  2848                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  2849  0008E8  3805               	swapf	GPIO_PinRead@enm_pinNumber,w,c
  2850  0008EA  46E8               	rlncf	wreg,f,c
  2851  0008EC  0B1F               	andlw	31
  2852  0008EE  6E03               	movwf	GPIO_PinRead@var_portNumber_u8,c
  2853                           
  2854                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  2855  0008F0  5005               	movf	GPIO_PinRead@enm_pinNumber,w,c
  2856  0008F2  0B07               	andlw	7
  2857  0008F4  6E05               	movwf	GPIO_PinRead@enm_pinNumber,c
  2858                           
  2859                           ;gpio.c: 201: switch(var_portNumber_u8)
  2860  0008F6  D04C               	goto	l1170
  2861  0008F8                     l1158:
  2862                           
  2863                           ;gpio.c: 205: returnStatus = (((PORTA)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2864  0008F8  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2865  0008FC  0E01               	movlw	1
  2866  0008FE  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2867  000900  2A01               	incf	??_GPIO_PinRead,f,c
  2868  000902  D002               	goto	u334
  2869  000904                     u335:
  2870  000904  90D8               	bcf	status,0,c
  2871  000906  3602               	rlcf	??_GPIO_PinRead+1,f,c
  2872  000908                     u334:
  2873  000908  2E01               	decfsz	??_GPIO_PinRead,f,c
  2874  00090A  D7FC               	goto	u335
  2875  00090C  5002               	movf	??_GPIO_PinRead+1,w,c
  2876  00090E  1480               	andwf	3968,w,c	;volatile
  2877  000910  0900               	iorlw	0
  2878  000912  B4D8               	btfsc	status,2,c
  2879  000914  D03B               	goto	u460
  2880  000916  D029               	goto	u431
  2881  000918                     u350:
  2882  000918  6E04               	movwf	GPIO_PinRead@returnStatus,c
  2883                           
  2884                           ;gpio.c: 206: break;
  2885  00091A  D04A               	goto	l1172
  2886  00091C                     l1160:
  2887                           
  2888                           ;gpio.c: 210: returnStatus = (((PORTB)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2889  00091C  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2890  000920  0E01               	movlw	1
  2891  000922  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2892  000924  2A01               	incf	??_GPIO_PinRead,f,c
  2893  000926  D002               	goto	u364
  2894  000928                     u365:
  2895  000928  90D8               	bcf	status,0,c
  2896  00092A  3602               	rlcf	??_GPIO_PinRead+1,f,c
  2897  00092C                     u364:
  2898  00092C  2E01               	decfsz	??_GPIO_PinRead,f,c
  2899  00092E  D7FC               	goto	u365
  2900  000930  5002               	movf	??_GPIO_PinRead+1,w,c
  2901  000932  1481               	andwf	3969,w,c	;volatile
  2902  000934  D028               	goto	L4
  2903  000936                     l1162:
  2904                           
  2905                           ;gpio.c: 215: returnStatus = (((PORTC)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2906  000936  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2907  00093A  0E01               	movlw	1
  2908  00093C  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2909  00093E  2A01               	incf	??_GPIO_PinRead,f,c
  2910  000940  D002               	goto	u394
  2911  000942                     u395:
  2912  000942  90D8               	bcf	status,0,c
  2913  000944  3602               	rlcf	??_GPIO_PinRead+1,f,c
  2914  000946                     u394:
  2915  000946  2E01               	decfsz	??_GPIO_PinRead,f,c
  2916  000948  D7FC               	goto	u395
  2917  00094A  5002               	movf	??_GPIO_PinRead+1,w,c
  2918  00094C  1482               	andwf	3970,w,c	;volatile
  2919  00094E  D01B               	goto	L4
  2920  000950                     l1164:
  2921                           
  2922                           ;gpio.c: 221: returnStatus = (((PORTD)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2923  000950  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2924  000954  0E01               	movlw	1
  2925  000956  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2926  000958  2A01               	incf	??_GPIO_PinRead,f,c
  2927  00095A  D002               	goto	u424
  2928  00095C                     u425:
  2929  00095C  90D8               	bcf	status,0,c
  2930  00095E  3602               	rlcf	??_GPIO_PinRead+1,f,c
  2931  000960                     u424:
  2932  000960  2E01               	decfsz	??_GPIO_PinRead,f,c
  2933  000962  D7FC               	goto	u425
  2934  000964  5002               	movf	??_GPIO_PinRead+1,w,c
  2935  000966  1483               	andwf	3971,w,c	;volatile
  2936  000968  D00E               	goto	L4
  2937  00096A                     u431:
  2938  00096A  0E01               	movlw	1
  2939  00096C  D7D5               	goto	u350
  2940  00096E                     l1166:
  2941                           
  2942                           ;gpio.c: 227: returnStatus = (((PORTE)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2943  00096E  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2944  000972  0E01               	movlw	1
  2945  000974  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2946  000976  2A01               	incf	??_GPIO_PinRead,f,c
  2947  000978  D002               	goto	u454
  2948  00097A                     u455:
  2949  00097A  90D8               	bcf	status,0,c
  2950  00097C  3602               	rlcf	??_GPIO_PinRead+1,f,c
  2951  00097E                     u454:
  2952  00097E  2E01               	decfsz	??_GPIO_PinRead,f,c
  2953  000980  D7FC               	goto	u455
  2954  000982  5002               	movf	??_GPIO_PinRead+1,w,c
  2955  000984  1484               	andwf	3972,w,c	;volatile
  2956  000986                     L4:
  2957  000986  0900               	iorlw	0
  2958  000988  A4D8               	btfss	status,2,c
  2959  00098A  D7EF               	goto	u431
  2960  00098C                     u460:
  2961  00098C  0E00               	movlw	0
  2962  00098E  D7C4               	goto	u350
  2963  000990                     l1170:
  2964  000990  5003               	movf	GPIO_PinRead@var_portNumber_u8,w,c
  2965                           
  2966                           ; Switch size 1, requested type "space"
  2967                           ; Number of cases is 5, Range of values is 0 to 4
  2968                           ; switch strategies available:
  2969                           ; Name         Instructions Cycles
  2970                           ; simple_byte           16     9 (average)
  2971                           ;	Chosen strategy is simple_byte
  2972  000992  0A00               	xorlw	0	; case 0
  2973  000994  B4D8               	btfsc	status,2,c
  2974  000996  D7B0               	goto	l1158
  2975  000998  0A01               	xorlw	1	; case 1
  2976  00099A  B4D8               	btfsc	status,2,c
  2977  00099C  D7BF               	goto	l1160
  2978  00099E  0A03               	xorlw	3	; case 2
  2979  0009A0  B4D8               	btfsc	status,2,c
  2980  0009A2  D7C9               	goto	l1162
  2981  0009A4  0A01               	xorlw	1	; case 3
  2982  0009A6  B4D8               	btfsc	status,2,c
  2983  0009A8  D7D3               	goto	l1164
  2984  0009AA  0A07               	xorlw	7	; case 4
  2985  0009AC  B4D8               	btfsc	status,2,c
  2986  0009AE  D7DF               	goto	l1166
  2987  0009B0                     l1172:
  2988                           
  2989                           ;gpio.c: 230: return returnStatus;
  2990  0009B0  5004               	movf	GPIO_PinRead@returnStatus,w,c
  2991  0009B2  0012               	return	
  2992  0009B4                     __end_of_GPIO_PinRead:
  2993                           	opt stack 0
  2994                           tblptru	equ	0xFF8
  2995                           tblptrh	equ	0xFF7
  2996                           tblptrl	equ	0xFF6
  2997                           tablat	equ	0xFF5
  2998                           prodh	equ	0xFF4
  2999                           prodl	equ	0xFF3
  3000                           postinc0	equ	0xFEE
  3001                           wreg	equ	0xFE8
  3002                           postdec1	equ	0xFE5
  3003                           fsr1l	equ	0xFE1
  3004                           indf2	equ	0xFDF
  3005                           fsr2h	equ	0xFDA
  3006                           fsr2l	equ	0xFD9
  3007                           status	equ	0xFD8
  3008                           
  3009 ;; *************** function _GPIO_PinDirection *****************
  3010 ;; Defined at:
  3011 ;;		line 60 in file "../00-libfiles/gpio.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  enm_pinNumbe    1    wreg     enum E3211
  3014 ;;  var_pinDirn_    1    0[COMRAM] unsigned char 
  3015 ;; Auto vars:     Size  Location     Type
  3016 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  3017 ;;  var_portNumb    1    3[COMRAM] unsigned char 
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3027 ;;      Params:         1       0       0       0       0       0       0
  3028 ;;      Locals:         2       0       0       0       0       0       0
  3029 ;;      Temps:          2       0       0       0       0       0       0
  3030 ;;      Totals:         5       0       0       0       0       0       0
  3031 ;;Total ram usage:        5 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_LCD_SetUp
  3037 ;;		_lcd_BusyCheck
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041                           	psect	text23
  3042  000782                     __ptext23:
  3043                           	opt stack 0
  3044  000782                     _GPIO_PinDirection:
  3045                           	opt stack 29
  3046                           
  3047                           ;incstack = 0
  3048                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  3049  000782  6E05               	movwf	GPIO_PinDirection@enm_pinNumber,c
  3050                           
  3051                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  3052                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  3053  000784  3805               	swapf	GPIO_PinDirection@enm_pinNumber,w,c
  3054  000786  46E8               	rlncf	wreg,f,c
  3055  000788  0B1F               	andlw	31
  3056  00078A  6E04               	movwf	GPIO_PinDirection@var_portNumber_u8,c
  3057                           
  3058                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  3059  00078C  5005               	movf	GPIO_PinDirection@enm_pinNumber,w,c
  3060  00078E  0B07               	andlw	7
  3061  000790  6E05               	movwf	GPIO_PinDirection@enm_pinNumber,c
  3062                           
  3063                           ;gpio.c: 71: switch(var_portNumber_u8)
  3064  000792  D096               	goto	l1854
  3065  000794                     l1822:
  3066                           
  3067                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISA) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  3068  000794  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  3069  000796  B4D8               	btfsc	status,2,c
  3070  000798  D00D               	goto	l1826
  3071  00079A  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3072  00079E  0E01               	movlw	1
  3073  0007A0  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3074  0007A2  2A02               	incf	??_GPIO_PinDirection,f,c
  3075  0007A4  D002               	goto	u1474
  3076  0007A6                     u1475:
  3077  0007A6  90D8               	bcf	status,0,c
  3078  0007A8  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3079  0007AA                     u1474:
  3080  0007AA  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3081  0007AC  D7FC               	goto	u1475
  3082  0007AE  5003               	movf	??_GPIO_PinDirection+1,w,c
  3083  0007B0  1292               	iorwf	3986,f,c	;volatile
  3084  0007B2  0012               	return	
  3085  0007B4                     l1826:
  3086  0007B4  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3087  0007B8  0E01               	movlw	1
  3088  0007BA  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3089  0007BC  2A02               	incf	??_GPIO_PinDirection,f,c
  3090  0007BE  D002               	goto	u1484
  3091  0007C0                     u1485:
  3092  0007C0  90D8               	bcf	status,0,c
  3093  0007C2  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3094  0007C4                     u1484:
  3095  0007C4  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3096  0007C6  D7FC               	goto	u1485
  3097  0007C8  5003               	movf	??_GPIO_PinDirection+1,w,c
  3098  0007CA  0AFF               	xorlw	255
  3099  0007CC  1692               	andwf	3986,f,c	;volatile
  3100                           
  3101                           ;gpio.c: 76: break;
  3102  0007CE  0012               	return	
  3103  0007D0                     l1828:
  3104                           
  3105                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISB) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  3106  0007D0  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  3107  0007D2  B4D8               	btfsc	status,2,c
  3108  0007D4  D00D               	goto	l1832
  3109  0007D6  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3110  0007DA  0E01               	movlw	1
  3111  0007DC  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3112  0007DE  2A02               	incf	??_GPIO_PinDirection,f,c
  3113  0007E0  D002               	goto	u1504
  3114  0007E2                     u1505:
  3115  0007E2  90D8               	bcf	status,0,c
  3116  0007E4  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3117  0007E6                     u1504:
  3118  0007E6  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3119  0007E8  D7FC               	goto	u1505
  3120  0007EA  5003               	movf	??_GPIO_PinDirection+1,w,c
  3121  0007EC  1293               	iorwf	3987,f,c	;volatile
  3122  0007EE  0012               	return	
  3123  0007F0                     l1832:
  3124  0007F0  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3125  0007F4  0E01               	movlw	1
  3126  0007F6  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3127  0007F8  2A02               	incf	??_GPIO_PinDirection,f,c
  3128  0007FA  D002               	goto	u1514
  3129  0007FC                     u1515:
  3130  0007FC  90D8               	bcf	status,0,c
  3131  0007FE  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3132  000800                     u1514:
  3133  000800  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3134  000802  D7FC               	goto	u1515
  3135  000804  5003               	movf	??_GPIO_PinDirection+1,w,c
  3136  000806  0AFF               	xorlw	255
  3137  000808  1693               	andwf	3987,f,c	;volatile
  3138                           
  3139                           ;gpio.c: 82: break;
  3140  00080A  0012               	return	
  3141  00080C                     l1834:
  3142                           
  3143                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISC) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  3144  00080C  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  3145  00080E  B4D8               	btfsc	status,2,c
  3146  000810  D00D               	goto	l1838
  3147  000812  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3148  000816  0E01               	movlw	1
  3149  000818  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3150  00081A  2A02               	incf	??_GPIO_PinDirection,f,c
  3151  00081C  D002               	goto	u1534
  3152  00081E                     u1535:
  3153  00081E  90D8               	bcf	status,0,c
  3154  000820  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3155  000822                     u1534:
  3156  000822  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3157  000824  D7FC               	goto	u1535
  3158  000826  5003               	movf	??_GPIO_PinDirection+1,w,c
  3159  000828  1294               	iorwf	3988,f,c	;volatile
  3160  00082A  0012               	return	
  3161  00082C                     l1838:
  3162  00082C  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3163  000830  0E01               	movlw	1
  3164  000832  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3165  000834  2A02               	incf	??_GPIO_PinDirection,f,c
  3166  000836  D002               	goto	u1544
  3167  000838                     u1545:
  3168  000838  90D8               	bcf	status,0,c
  3169  00083A  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3170  00083C                     u1544:
  3171  00083C  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3172  00083E  D7FC               	goto	u1545
  3173  000840  5003               	movf	??_GPIO_PinDirection+1,w,c
  3174  000842  0AFF               	xorlw	255
  3175  000844  1694               	andwf	3988,f,c	;volatile
  3176                           
  3177                           ;gpio.c: 88: break;
  3178  000846  0012               	return	
  3179  000848                     l1840:
  3180                           
  3181                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISD) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  3182  000848  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  3183  00084A  B4D8               	btfsc	status,2,c
  3184  00084C  D00D               	goto	l1844
  3185  00084E  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3186  000852  0E01               	movlw	1
  3187  000854  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3188  000856  2A02               	incf	??_GPIO_PinDirection,f,c
  3189  000858  D002               	goto	u1564
  3190  00085A                     u1565:
  3191  00085A  90D8               	bcf	status,0,c
  3192  00085C  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3193  00085E                     u1564:
  3194  00085E  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3195  000860  D7FC               	goto	u1565
  3196  000862  5003               	movf	??_GPIO_PinDirection+1,w,c
  3197  000864  1295               	iorwf	3989,f,c	;volatile
  3198  000866  0012               	return	
  3199  000868                     l1844:
  3200  000868  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3201  00086C  0E01               	movlw	1
  3202  00086E  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3203  000870  2A02               	incf	??_GPIO_PinDirection,f,c
  3204  000872  D002               	goto	u1574
  3205  000874                     u1575:
  3206  000874  90D8               	bcf	status,0,c
  3207  000876  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3208  000878                     u1574:
  3209  000878  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3210  00087A  D7FC               	goto	u1575
  3211  00087C  5003               	movf	??_GPIO_PinDirection+1,w,c
  3212  00087E  0AFF               	xorlw	255
  3213  000880  1695               	andwf	3989,f,c	;volatile
  3214                           
  3215                           ;gpio.c: 94: break;
  3216  000882  0012               	return	
  3217  000884                     l1846:
  3218                           
  3219                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISE) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  3220  000884  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  3221  000886  B4D8               	btfsc	status,2,c
  3222  000888  D00D               	goto	l1850
  3223  00088A  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3224  00088E  0E01               	movlw	1
  3225  000890  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3226  000892  2A02               	incf	??_GPIO_PinDirection,f,c
  3227  000894  D002               	goto	u1594
  3228  000896                     u1595:
  3229  000896  90D8               	bcf	status,0,c
  3230  000898  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3231  00089A                     u1594:
  3232  00089A  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3233  00089C  D7FC               	goto	u1595
  3234  00089E  5003               	movf	??_GPIO_PinDirection+1,w,c
  3235  0008A0  1296               	iorwf	3990,f,c	;volatile
  3236  0008A2  0012               	return	
  3237  0008A4                     l1850:
  3238  0008A4  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  3239  0008A8  0E01               	movlw	1
  3240  0008AA  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  3241  0008AC  2A02               	incf	??_GPIO_PinDirection,f,c
  3242  0008AE  D002               	goto	u1604
  3243  0008B0                     u1605:
  3244  0008B0  90D8               	bcf	status,0,c
  3245  0008B2  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  3246  0008B4                     u1604:
  3247  0008B4  2E02               	decfsz	??_GPIO_PinDirection,f,c
  3248  0008B6  D7FC               	goto	u1605
  3249  0008B8  5003               	movf	??_GPIO_PinDirection+1,w,c
  3250  0008BA  0AFF               	xorlw	255
  3251  0008BC  1696               	andwf	3990,f,c	;volatile
  3252                           
  3253                           ;gpio.c: 101: }
  3254                           
  3255                           ;gpio.c: 99: break;
  3256  0008BE  0012               	return	
  3257  0008C0                     l1854:
  3258  0008C0  5004               	movf	GPIO_PinDirection@var_portNumber_u8,w,c
  3259                           
  3260                           ; Switch size 1, requested type "space"
  3261                           ; Number of cases is 5, Range of values is 0 to 4
  3262                           ; switch strategies available:
  3263                           ; Name         Instructions Cycles
  3264                           ; simple_byte           16     9 (average)
  3265                           ;	Chosen strategy is simple_byte
  3266  0008C2  0A00               	xorlw	0	; case 0
  3267  0008C4  B4D8               	btfsc	status,2,c
  3268  0008C6  D766               	goto	l1822
  3269  0008C8  0A01               	xorlw	1	; case 1
  3270  0008CA  B4D8               	btfsc	status,2,c
  3271  0008CC  D781               	goto	l1828
  3272  0008CE  0A03               	xorlw	3	; case 2
  3273  0008D0  B4D8               	btfsc	status,2,c
  3274  0008D2  D79C               	goto	l1834
  3275  0008D4  0A01               	xorlw	1	; case 3
  3276  0008D6  B4D8               	btfsc	status,2,c
  3277  0008D8  D7B7               	goto	l1840
  3278  0008DA  0A07               	xorlw	7	; case 4
  3279  0008DC  A4D8               	btfss	status,2,c
  3280  0008DE  0012               	return	
  3281  0008E0  D7D1               	goto	l1846
  3282  0008E2                     __end_of_GPIO_PinDirection:
  3283                           	opt stack 0
  3284                           tblptru	equ	0xFF8
  3285                           tblptrh	equ	0xFF7
  3286                           tblptrl	equ	0xFF6
  3287                           tablat	equ	0xFF5
  3288                           prodh	equ	0xFF4
  3289                           prodl	equ	0xFF3
  3290                           postinc0	equ	0xFEE
  3291                           wreg	equ	0xFE8
  3292                           postdec1	equ	0xFE5
  3293                           fsr1l	equ	0xFE1
  3294                           indf2	equ	0xFDF
  3295                           fsr2h	equ	0xFDA
  3296                           fsr2l	equ	0xFD9
  3297                           status	equ	0xFD8
  3298                           
  3299 ;; *************** function _DELAY_ms *****************
  3300 ;; Defined at:
  3301 ;;		line 75 in file "../00-libfiles/delay.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;  ms_count        2    2[COMRAM] unsigned int 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3315 ;;      Params:         2       0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0
  3318 ;;      Totals:         2       0       0       0       0       0       0
  3319 ;;Total ram usage:        2 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:    1
  3322 ;; This function calls:
  3323 ;;		_DELAY_us
  3324 ;; This function is called by:
  3325 ;;		_LCD_Init
  3326 ;;		_lcd_BusyCheck
  3327 ;;		_lcd_Reset
  3328 ;;		_LCD_ScrollMessage
  3329 ;;		_DELAY_sec
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text24
  3334  000FA2                     __ptext24:
  3335                           	opt stack 0
  3336  000FA2                     _DELAY_ms:
  3337                           	opt stack 27
  3338                           
  3339                           ;delay.c: 77: while (ms_count != 0)
  3340                           
  3341                           ;incstack = 0
  3342  000FA2  D009               	goto	l1862
  3343  000FA4                     l1858:
  3344                           
  3345                           ;delay.c: 78: {
  3346                           ;delay.c: 79: DELAY_us(350u);
  3347  000FA4  0E01               	movlw	1
  3348  000FA6  6E02               	movwf	DELAY_us@us_count+1,c
  3349  000FA8  0E5E               	movlw	94
  3350  000FAA  6E01               	movwf	DELAY_us@us_count,c
  3351  000FAC  ECE0  F007         	call	_DELAY_us	;wreg free
  3352                           
  3353                           ;delay.c: 80: ms_count--;
  3354  000FB0  0603               	decf	DELAY_ms@ms_count,f,c
  3355  000FB2  A0D8               	btfss	status,0,c
  3356  000FB4  0604               	decf	DELAY_ms@ms_count+1,f,c
  3357  000FB6                     l1862:
  3358  000FB6  5003               	movf	DELAY_ms@ms_count,w,c
  3359  000FB8  1004               	iorwf	DELAY_ms@ms_count+1,w,c
  3360  000FBA  B4D8               	btfsc	status,2,c
  3361  000FBC  0012               	return	
  3362  000FBE  D7F2               	goto	l1858
  3363  000FC0                     __end_of_DELAY_ms:
  3364                           	opt stack 0
  3365                           tblptru	equ	0xFF8
  3366                           tblptrh	equ	0xFF7
  3367                           tblptrl	equ	0xFF6
  3368                           tablat	equ	0xFF5
  3369                           prodh	equ	0xFF4
  3370                           prodl	equ	0xFF3
  3371                           postinc0	equ	0xFEE
  3372                           wreg	equ	0xFE8
  3373                           postdec1	equ	0xFE5
  3374                           fsr1l	equ	0xFE1
  3375                           indf2	equ	0xFDF
  3376                           fsr2h	equ	0xFDA
  3377                           fsr2l	equ	0xFD9
  3378                           status	equ	0xFD8
  3379                           
  3380 ;; *************** function _DELAY_us *****************
  3381 ;; Defined at:
  3382 ;;		line 56 in file "../00-libfiles/delay.c"
  3383 ;; Parameters:    Size  Location     Type
  3384 ;;  us_count        2    0[COMRAM] unsigned int 
  3385 ;; Auto vars:     Size  Location     Type
  3386 ;;		None
  3387 ;; Return value:  Size  Location     Type
  3388 ;;                  1    wreg      void 
  3389 ;; Registers used:
  3390 ;;		wreg, status,2, status,0
  3391 ;; Tracked objects:
  3392 ;;		On entry : 0/0
  3393 ;;		On exit  : 0/0
  3394 ;;		Unchanged: 0/0
  3395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3396 ;;      Params:         2       0       0       0       0       0       0
  3397 ;;      Locals:         0       0       0       0       0       0       0
  3398 ;;      Temps:          0       0       0       0       0       0       0
  3399 ;;      Totals:         2       0       0       0       0       0       0
  3400 ;;Total ram usage:        2 bytes
  3401 ;; Hardware stack levels used:    1
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_lcd_BusyCheck
  3406 ;;		_lcd_Reset
  3407 ;;		_lcd_SendCmdSignals
  3408 ;;		_lcd_SendDataSignals
  3409 ;;		_DELAY_ms
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text25
  3414  000FC0                     __ptext25:
  3415                           	opt stack 0
  3416  000FC0                     _DELAY_us:
  3417                           	opt stack 27
  3418                           
  3419                           ;delay.c: 58: while (us_count != 0)
  3420                           
  3421                           ;incstack = 0
  3422  000FC0  D003               	goto	l1818
  3423  000FC2                     l1816:
  3424                           
  3425                           ;delay.c: 59: {
  3426                           ;delay.c: 60: us_count--;
  3427  000FC2  0601               	decf	DELAY_us@us_count,f,c
  3428  000FC4  A0D8               	btfss	status,0,c
  3429  000FC6  0602               	decf	DELAY_us@us_count+1,f,c
  3430  000FC8                     l1818:
  3431  000FC8  5001               	movf	DELAY_us@us_count,w,c
  3432  000FCA  1002               	iorwf	DELAY_us@us_count+1,w,c
  3433  000FCC  B4D8               	btfsc	status,2,c
  3434  000FCE  0012               	return	
  3435  000FD0  D7F8               	goto	l1816
  3436  000FD2                     __end_of_DELAY_us:
  3437                           	opt stack 0
  3438                           tblptru	equ	0xFF8
  3439                           tblptrh	equ	0xFF7
  3440                           tblptrl	equ	0xFF6
  3441                           tablat	equ	0xFF5
  3442                           prodh	equ	0xFF4
  3443                           prodl	equ	0xFF3
  3444                           postinc0	equ	0xFEE
  3445                           wreg	equ	0xFE8
  3446                           postdec1	equ	0xFE5
  3447                           fsr1l	equ	0xFE1
  3448                           indf2	equ	0xFDF
  3449                           fsr2h	equ	0xFDA
  3450                           fsr2l	equ	0xFD9
  3451                           status	equ	0xFD8
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           prodh	equ	0xFF4
  3457                           prodl	equ	0xFF3
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           postdec1	equ	0xFE5
  3461                           fsr1l	equ	0xFE1
  3462                           indf2	equ	0xFDF
  3463                           fsr2h	equ	0xFDA
  3464                           fsr2l	equ	0xFD9
  3465                           status	equ	0xFD8
  3466                           
  3467                           	psect	rparam
  3468  0000                     tblptru	equ	0xFF8
  3469                           tblptrh	equ	0xFF7
  3470                           tblptrl	equ	0xFF6
  3471                           tablat	equ	0xFF5
  3472                           prodh	equ	0xFF4
  3473                           prodl	equ	0xFF3
  3474                           postinc0	equ	0xFEE
  3475                           wreg	equ	0xFE8
  3476                           postdec1	equ	0xFE5
  3477                           fsr1l	equ	0xFE1
  3478                           indf2	equ	0xFDF
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     27      47
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_1(CODE[32]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->_UART_SetBaudRate
    _UART_SetBaudRate->___lldiv
    _LCD_SetUp->_GPIO_PinDirection
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_lcd_DataWrite
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  100865
                                             26 COMRAM     1     1      0
                    _LCD_DisplayChar
                  _LCD_DisplayString
                       _LCD_GoToLine
                           _LCD_Init
                          _LCD_SetUp
                          _UART_Init
                        _UART_RxChar
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (1) _UART_TxChar                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_RxChar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    1042
                                             22 COMRAM     4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                     9     5      4     956
                                             13 COMRAM     9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     802
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           11     1     10    2442
                                              5 COMRAM    11     1     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     1      1   40905
                                              8 COMRAM     2     1      1
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    6032
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   22484
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         1     1      0   11275
                                              7 COMRAM     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_DisplayString                                    2     0      2   22657
                                              8 COMRAM     2     0      2
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayChar                                      1     1      0   22484
                                              7 COMRAM     1     1      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_DataWrite                                        1     1      0   11209
                                              6 COMRAM     1     1      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendDataSignals                                  0     0      0    2469
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToNextLine                                     0     0      0   11209
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_CmdWrite                                         1     1      0   11209
                                              6 COMRAM     1     1      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_SendLowerNibble                                  1     1      0    1894
                                              5 COMRAM     1     1      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendHigherNibble                                 1     1      0    1894
                                              5 COMRAM     1     1      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendCmdSignals                                   0     0      0    2469
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_BusyCheck                                        1     1      0    4863
                                              5 COMRAM     1     1      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinWrite                                        5     4      1    1806
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinRead                                         5     5      0     135
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1230
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             2     0      2    1006
                                              2 COMRAM     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (4) _DELAY_us                                             2     0      2     663
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_DisplayChar
     _LCD_GoToNextLine
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _lcd_DataWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendDataSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_SetUp
     _GPIO_PinDirection
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_RxChar
   _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1B      2F       1       37.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      15        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 13 19:37:54 2016

                        ?_LCD_CmdWrite 0001                                     l33 0FEE  
                                   l39 0FD4                          ?_LCD_GoToLine 0001  
                          __CFG_BORV$2 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                            __CFG_OSC$HS 000000  
                                  l176 0CD8                                    l293 0A98  
                                  l802 0B90                           __CFG_CPB$OFF 000000  
                                  u350 0918                                    u334 0908  
                                  u431 096A                                    u335 0904  
                                  u424 0960                                    u425 095C  
                         __CFG_CPD$OFF 000000                                    u460 098C  
                                  u364 092C                                    u365 0928  
                                  u454 097E                                    u455 097A  
                                  u394 0946                                    u395 0942  
                                  prod 000FF3                                    wreg 000FE8  
              __end_of_LCD_DisplayChar 0F80                           __CFG_LVP$OFF 000000  
                         __CFG_WDT$OFF 000000                                   l2010 0F6A  
                                 l2102 09FA                                   l1160 091C  
                                 l2104 0A00                                   l1162 0936  
                                 l1170 0990                                   l2114 0A2C  
                                 l1164 0950                                   l1172 09B0  
                                 l1166 096E                                   l1158 08F8  
                                 l2150 0F08                                   l2142 0CC6  
                                 l2136 0CAA                                   l2154 0F1C  
                                 l1822 0794                                   l1816 0FC2  
                                 l1840 0848                                   l1832 07F0  
                                 l1912 0B12                                   l1818 0FC8  
                                 l1850 08A4                                   l1834 080C  
                                 l1826 07B4                                   l1930 0ED0  
                                 l1844 0868                                   l1828 07D0  
                                 l1908 0B00                                   l1862 0FB6  
                                 l1846 0884                                   l1838 082C  
                                 l1854 08C0                                   l1870 0654  
                                 l1926 0EC0                                   l2494 0C76  
                                 l1872 0670                                   l1952 0F42  
                                 l1960 0E8E                                   l1858 0FA4  
                                 l1890 0724                                   l1882 06CC  
                                 l1866 0634                                   l1884 06E8  
                                 l1876 0690                                   l1964 0E9E  
                                 l1894 0744                                   l1878 06AC  
                                 l1974 0B42                                   l1888 0708  
                                 l1976 0B4E                                   l1898 0760  
                                 l1986 0B82                                   l1978 0B52  
                                 l1996 0C0E                                   STR_1 0601  
                                 u2030 0BB4                                   _LATA 000F89  
                                 _LATB 000F8A                                   u2055 0BE8  
                                 _LATC 000F8B                                   u1504 07E6  
                                 _LATD 000F8C                                   u1505 07E2  
                                 _LATE 000F8D                                   u1514 0800  
                                 u1515 07FC                                   u1604 08B4  
                                 u1605 08B0                                   u1534 0822  
                                 u1535 081E                                   u1544 083C  
                                 u1704 06DC                                   u1800 0D48  
                                 u1545 0838                                   u1705 06D8  
                                 u1474 07AA                                   u1634 064A  
                                 u1810 0D4A                                   u1475 07A6  
                                 u1635 0646                                   u1564 085E  
                                 u1484 07C4                                   u1724 06FE  
                                 u1644 0664                                   u1900 0DA6  
                                 u1820 0D5A                                   u1565 085A  
                                 u1485 07C0                                   u1725 06FA  
                                 u1645 0660                                   u1574 0878  
                                 u1734 0718                                   u1910 0DA8  
                                 u1830 0D5C                                   u1575 0874  
                                 u1735 0714                                   u1664 0686  
                                 u1920 0DB8                                   u1840 0D6C  
                                 u1665 0682                                   u1594 089A  
                                 u1754 073A                                   u1674 06A0  
                                 u1930 0DBA                                   u1850 0D6E  
                                 u1595 0896                                   u1755 0736  
                                 u1675 069C                                   u1764 0754  
                                 u1940 0DCA                                   u1860 0D7E  
                                 u1765 0750                                   u1694 06C2  
                                 u1950 0DCC                                   u1870 0D80  
                                 u1695 06BE                                   u1880 0D94  
                                 u1890 0D96                                   _RCIF 007CF5  
                                 _TXIF 007CF4                                   _main 0C18  
                   __size_of_LCD_Clear 000E                                   fsr1l 000FE1  
                                 indf2 000FDF                                   fsr2l 000FD9  
                   __size_of_LCD_SetUp 00C0                                   prodl 000FF3  
                                 start 0000                          __CFG_IESO$OFF 000000  
                     __end_of_DELAY_ms 0FC0                       __end_of_DELAY_us 0FD2  
                        __CFG_MCLRE$ON 000000                           ___param_bank 000010  
                        ?_GPIO_PinRead 0001                         ??_LCD_CmdWrite 0007  
                          LCD_SetUp@D0 0008                            LCD_SetUp@D1 0009  
                          LCD_SetUp@D2 000A                            LCD_SetUp@D3 000B  
                          LCD_SetUp@D4 000C                            LCD_SetUp@D5 000D  
                          LCD_SetUp@D6 000E                            LCD_SetUp@D7 000F  
                          LCD_SetUp@EN 0007                            LCD_SetUp@RS 0010  
                          LCD_SetUp@RW 0006                         ??_LCD_GoToLine 0008  
                        _GPIO_PinWrite 0622                       __end_of_LCD_Init 0CE4  
              LCD_CmdWrite@v_lcdCmd_u8 0007                                  ?_main 0001  
                      __end_of___lldiv 0BA2                                  _RCREG 000FAE  
                                _RCSTA 000FAB                                  _SPBRG 000FAF  
                                _PORTA 000F80                                  _PORTB 000F81  
                                _PORTC 000F82                                  _PORTD 000F83  
                                _PORTE 000F84                                  _TRISA 000F92  
                                _TRISB 000F93                                  _TRISC 000F94  
                                _TRISD 000F95                                  _TRISE 000F96  
                                _TXREG 000FAD                                  _TXSTA 000FAC  
                        __CFG_PWRT$OFF 000000                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                   __size_of_UART_Init 0022                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000  LCD_DisplayString@ptr_stringPointer_u8 0009  
                       __CFG_BOREN$OFF 000000                                  tablat 000FF5  
         __end_of_lcd_SendHigherNibble 0DD6                                  status 000FD8  
                       ??_GPIO_PinRead 0001                        __initialization 0DD6  
           GPIO_PinWrite@enm_pinNumber 0005                           __end_of_main 0C8A  
                       ?_GPIO_PinWrite 0001                      _GPIO_PinDirection 0782  
                               ??_main 001B            __size_of_lcd_SendCmdSignals 0036  
                    __end_of_LCD_Clear 0FEE                          __activetblptr 000002  
                   ?_GPIO_PinDirection 0001                      __end_of_LCD_SetUp 0A74  
                     ?_LCD_DisplayChar 0001            LCD_DisplayChar@v_lcdData_u8 0008  
                  ??_GPIO_PinDirection 0002                      ?_UART_SetBaudRate 000E  
                lcd_BusyCheck@busyflag 0006                     ??_UART_SetBaudRate 0012  
                         ?_UART_RxChar 0001                           ?_UART_TxChar 0001  
                       __CFG_XINST$OFF 000000              GPIO_PinRead@enm_pinNumber 0005  
                    __end_of_UART_Init 0FA2                              ??___lldiv 0009  
            __end_of_GPIO_PinDirection 08E2                                 clear_0 0DDC  
       GPIO_PinDirection@enm_pinNumber 0005                                 main@ch 001B  
                     DELAY_ms@ms_count 0003                           __pdataCOMRAM 002C  
                         __mediumconst 0000                      ?_LCD_GoToNextLine 0001  
                               tblptrh 000FF7                                 tblptrl 000FF6  
                               tblptru 000FF8                              ?_DELAY_ms 0003  
                            ?_DELAY_us 0001            __end_of_lcd_SendLowerNibble 0D8A  
                   ??_LCD_GoToNextLine 0008                   __end_of_LCD_CmdWrite 0EDC  
                 __end_of_LCD_GoToLine 0F06            lcd_SendLowerNibble@dataByte 0006  
                           __accesstop 0080                __end_of__initialization 0E02  
                            ?_LCD_Init 0009                        __CFG_PBADEN$OFF 000000  
                        ___rparam_used 000001                        ??_GPIO_PinWrite 0002  
                       __pcstackCOMRAM 0001                  __end_of_lcd_DataWrite 0EAA  
                 _lcd_SendHigherNibble 0D8A                     __size_of_lcd_Reset 005A  
         __size_of_lcd_SendDataSignals 0036                             ??_DELAY_ms 0005  
                           ??_DELAY_us 0003                   __end_of_GPIO_PinRead 09B4  
       GPIO_PinWrite@var_portNumber_u8 0004                  __end_of_lcd_BusyCheck 0B20  
         lcd_SendHigherNibble@dataByte 0006           GPIO_PinWrite@var_pinValue_u8 0001  
                           ??_LCD_Init 000A             __size_of_GPIO_PinDirection 0160  
                ?_lcd_SendHigherNibble 0001                       DELAY_us@us_count 0001  
                              __Hparam 0000                      __end_of_lcd_Reset 0D3E  
                              __Lparam 0000                   __size_of_UART_RxChar 000A  
                 __size_of_UART_TxChar 000E              LCD_Init@v_lcdNoOfLines_u8 000A  
                              ___lldiv 0B20                           __psmallconst 0600  
                      __CFG_STVREN$OFF 000000                                __pcinit 0DD6  
                              __ramtop 0600                                __ptext0 0C18  
                              __ptext1 0FD2                                __ptext2 0FEE  
                              __ptext3 0F80                                __ptext4 0BA2  
                              __ptext5 0B20                                __ptext6 09B4  
                              __ptext7 0C8A                                __ptext8 0CE4  
                              __ptext9 0FE0                  __size_of_LCD_CmdWrite 0032  
                            _LCDConfig 001C                  __size_of_LCD_GoToLine 002A  
                            _LCD_Clear 0FE0                              _LCD_SetUp 09B4  
                 end_of_initialization 0E02           LCD_Init@v_MaxCharsPerLine_u8 0009  
                        __Lmediumconst 0000                        ___lldiv@divisor 0005  
                      ___lldiv@counter 000D         UART_SetBaudRate@v_baudRate_u32 000E  
                              postdec1 000FE5                                postinc0 000FEE  
               ??_lcd_SendHigherNibble 0006             __end_of_lcd_SendCmdSignals 0E78  
                         _LCD_CmdWrite 0EAA                              _UART_Init 0F80  
            __size_of_UART_SetBaudRate 0076                           _LCD_GoToLine 0EDC  
                __size_of_GPIO_PinRead 00D2                             ?_LCD_Clear 0001  
                           ?_LCD_SetUp 0006                      __size_of_DELAY_ms 001E  
                    __size_of_DELAY_us 0012               __size_of_LCD_DisplayChar 0026  
                    __size_of_LCD_Init 005A              __size_of_LCD_GoToNextLine 002A  
                  _lcd_SendDataSignals 0E0C     GPIO_PinDirection@var_portNumber_u8 0004  
                         _GPIO_PinRead 08E2                             ?_UART_Init 0017  
                        __pidataCOMRAM 0FF8               _ARR_LcdLineNumAddress_U8 002C  
                  start_initialization 0DD6                   ?_lcd_SendDataSignals 0001  
               _v_LcdTrackCursorPos_U8 002A          GPIO_PinRead@var_portNumber_u8 0003  
         __size_of_lcd_SendLowerNibble 004C        GPIO_PinDirection@var_pinDirn_u8 0001  
                __end_of_GPIO_PinWrite 0782                       __CFG_LPT1OSC$OFF 000000  
                ??_lcd_SendDataSignals 0006                   _v_LcdTrackLineNum_U8 002B  
                          __pbssCOMRAM 001C                  lcd_DataWrite@dataByte 0007  
                          ??_LCD_Clear 0009                            ??_LCD_SetUp 0010  
               __size_of_lcd_DataWrite 0032            LCD_GoToLine@v_lineNumber_u8 0008  
                    __CFG_CCP2MX$PORTC 000000                               ?___lldiv 0001  
                            _lcd_Reset 0CE4                      ??_LCD_DisplayChar 0008  
                          ??_UART_Init 001B                       _UART_SetBaudRate 0BA2  
               __size_of_lcd_BusyCheck 00AC                            __smallconst 0600  
                    _LCD_DisplayString 0F06                               _DELAY_ms 0FA2  
                             _DELAY_us 0FC0                     ?_LCD_DisplayString 0009  
                             _LCD_Init 0C8A                    ??_LCD_DisplayString 000B  
                        ??_UART_RxChar 0001                          ??_UART_TxChar 0001  
                     _LCD_GoToNextLine 0F30                       __CFG_WDTPS$32768 000000  
              UART_Init@v_baudRate_u32 0017                             ?_lcd_Reset 0001  
                        _lcd_DataWrite 0E78               GPIO_PinRead@returnStatus 0004  
            __end_of_LCD_DisplayString 0F30                     _lcd_SendCmdSignals 0E42  
                            copy_data0 0DF6                          _lcd_BusyCheck 0A74  
                  ?_lcd_SendCmdSignals 0001                               __Hrparam 0000  
             UART_TxChar@v_uartData_u8 0001                               __Lrparam 0000  
                       ?_lcd_DataWrite 0001                    __end_of_UART_RxChar 0FF8  
                  __end_of_UART_TxChar 0FE0                       __size_of___lldiv 0082  
                 ??_lcd_SendCmdSignals 0006          __size_of_lcd_SendHigherNibble 004C  
                  _lcd_SendLowerNibble 0D3E                               __ptext10 0EDC  
                             __ptext11 0F06                               __ptext20 0A74  
                             __ptext12 0F5A                               __ptext21 0622  
                             __ptext13 0E78                               __ptext22 08E2  
                             __ptext14 0E0C                               __ptext23 0782  
                             __ptext15 0F30                               __ptext24 0FA2  
                             __ptext16 0EAA                               __ptext25 0FC0  
                             __ptext17 0D3E                               __ptext18 0D8A  
                             __ptext19 0E42                         ?_lcd_BusyCheck 0001  
                        __size_of_main 0072                   ?_lcd_SendLowerNibble 0001  
                          ??_lcd_Reset 0007               UART_SetBaudRate@RegValue 0016  
           __size_of_LCD_DisplayString 002A               __end_of_UART_SetBaudRate 0C18  
                ??_lcd_SendLowerNibble 0006                       ___lldiv@dividend 0001  
                      _LCD_DisplayChar 0F5A                            _UART_RxChar 0FEE  
                          _UART_TxChar 0FD2                        ??_lcd_DataWrite 0007  
          __end_of_lcd_SendDataSignals 0E42                       ___lldiv@quotient 0009  
             __end_of_LCD_GoToNextLine 0F5A                        ??_lcd_BusyCheck 0006  
               __size_of_GPIO_PinWrite 0160  
