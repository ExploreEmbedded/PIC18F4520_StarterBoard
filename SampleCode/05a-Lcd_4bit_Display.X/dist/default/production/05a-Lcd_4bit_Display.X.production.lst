

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 13 19:28:52 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           	psect	idataCOMRAM
    36  000EA6                     __pidataCOMRAM:
    37                           	opt stack 0
    38                           
    39                           ;initializer for _ARR_LcdLineNumAddress_U8
    40  000EA6  80                 	db	128
    41  000EA7  C0                 	db	192
    42  000EA8  90                 	db	144
    43  000EA9  D0                 	db	208
    44  0000                     _LATA	set	3977
    45  0000                     _LATB	set	3978
    46  0000                     _LATC	set	3979
    47  0000                     _LATD	set	3980
    48  0000                     _LATE	set	3981
    49  0000                     _PORTA	set	3968
    50  0000                     _PORTB	set	3969
    51  0000                     _PORTC	set	3970
    52  0000                     _PORTD	set	3971
    53  0000                     _PORTE	set	3972
    54  0000                     _TRISA	set	3986
    55  0000                     _TRISB	set	3987
    56  0000                     _TRISC	set	3988
    57  0000                     _TRISD	set	3989
    58  0000                     _TRISE	set	3990
    59                           
    60                           	psect	smallconst
    61  000600                     __psmallconst:
    62                           	opt stack 0
    63  000600  00                 	db	0
    64  000601                     STR_1:
    65  000601  45                 	db	69	;'E'
    66  000602  78                 	db	120	;'x'
    67  000603  70                 	db	112	;'p'
    68  000604  6C                 	db	108	;'l'
    69  000605  6F                 	db	111	;'o'
    70  000606  72                 	db	114	;'r'
    71  000607  65                 	db	101	;'e'
    72  000608  20                 	db	32
    73  000609  45                 	db	69	;'E'
    74  00060A  6D                 	db	109	;'m'
    75  00060B  62                 	db	98	;'b'
    76  00060C  65                 	db	101	;'e'
    77  00060D  64                 	db	100	;'d'
    78  00060E  64                 	db	100	;'d'
    79  00060F  65                 	db	101	;'e'
    80  000610  64                 	db	100	;'d'
    81  000611  00                 	db	0
    82  000612                     STR_2:
    83  000612  4C                 	db	76	;'L'
    84  000613  63                 	db	99	;'c'
    85  000614  64                 	db	100	;'d'
    86  000615  20                 	db	32
    87  000616  34                 	db	52	;'4'
    88  000617  2D                 	db	45
    89  000618  62                 	db	98	;'b'
    90  000619  69                 	db	105	;'i'
    91  00061A  74                 	db	116	;'t'
    92  00061B  20                 	db	32
    93  00061C  4D                 	db	77	;'M'
    94  00061D  6F                 	db	111	;'o'
    95  00061E  64                 	db	100	;'d'
    96  00061F  65                 	db	101	;'e'
    97  000620  00                 	db	0
    98                           
    99                           ; #config settings
   100  000621  00                 	db	0	; dummy byte at the end
   101  0000                     
   102                           	psect	cinit
   103  000CBE                     __pcinit:
   104                           	opt stack 0
   105  000CBE                     start_initialization:
   106                           	opt stack 0
   107  000CBE                     __initialization:
   108                           	opt stack 0
   109                           
   110                           ; Clear objects allocated to COMRAM (16 bytes)
   111  000CBE  EE00  F001         	lfsr	0,__pbssCOMRAM
   112  000CC2  0E10               	movlw	16
   113  000CC4                     clear_0:
   114  000CC4  6AEE               	clrf	postinc0,c
   115  000CC6  06E8               	decf	wreg,f,c
   116  000CC8  E1FD               	bnz	clear_0
   117                           
   118                           ; Initialize objects allocated to COMRAM (4 bytes)
   119                           ; load TBLPTR registers with __pidataCOMRAM
   120  000CCA  0EA6               	movlw	low __pidataCOMRAM
   121  000CCC  6EF6               	movwf	tblptrl,c
   122  000CCE  0E0E               	movlw	high __pidataCOMRAM
   123  000CD0  6EF7               	movwf	tblptrh,c
   124  000CD2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   125  000CD4  6EF8               	movwf	tblptru,c
   126  000CD6  EE00  F021         	lfsr	0,__pdataCOMRAM
   127  000CDA  EE10 F004          	lfsr	1,4
   128  000CDE                     copy_data0:
   129  000CDE  0009               	tblrd		*+
   130  000CE0  CFF5 FFEE          	movff	tablat,postinc0
   131  000CE4  50E5               	movf	postdec1,w,c
   132  000CE6  50E1               	movf	fsr1l,w,c
   133  000CE8  E1FA               	bnz	copy_data0
   134  000CEA                     end_of_initialization:
   135                           	opt stack 0
   136  000CEA                     __end_of__initialization:
   137                           	opt stack 0
   138  000CEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   139  000CEC  6EF8               	movwf	tblptru,c
   140  000CEE  0100               	movlb	0
   141  000CF0  EFEA  F005         	goto	_main	;jump to C main() function
   142                           tblptru	equ	0xFF8
   143                           tblptrh	equ	0xFF7
   144                           tblptrl	equ	0xFF6
   145                           tablat	equ	0xFF5
   146                           postinc0	equ	0xFEE
   147                           wreg	equ	0xFE8
   148                           postdec1	equ	0xFE5
   149                           fsr1l	equ	0xFE1
   150                           
   151                           	psect	bssCOMRAM
   152  000001                     __pbssCOMRAM:
   153                           	opt stack 0
   154  000001                     _LCDConfig:
   155                           	opt stack 0
   156  000001                     	ds	14
   157  00000F                     _v_LcdTrackCursorPos_U8:
   158                           	opt stack 0
   159  00000F                     	ds	1
   160  000010                     _v_LcdTrackLineNum_U8:
   161                           	opt stack 0
   162  000010                     	ds	1
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           postdec1	equ	0xFE5
   170                           fsr1l	equ	0xFE1
   171                           
   172                           	psect	dataCOMRAM
   173  000021                     __pdataCOMRAM:
   174                           	opt stack 0
   175  000021                     _ARR_LcdLineNumAddress_U8:
   176                           	opt stack 0
   177  000021                     	ds	4
   178                           tblptru	equ	0xFF8
   179                           tblptrh	equ	0xFF7
   180                           tblptrl	equ	0xFF6
   181                           tablat	equ	0xFF5
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           postdec1	equ	0xFE5
   185                           fsr1l	equ	0xFE1
   186                           
   187                           	psect	cstackCOMRAM
   188  000011                     __pcstackCOMRAM:
   189                           	opt stack 0
   190  000011                     ??_GPIO_PinRead:
   191  000011                     GPIO_PinDirection@var_pinDirn_u8:
   192                           	opt stack 0
   193  000011                     GPIO_PinWrite@var_pinValue_u8:
   194                           	opt stack 0
   195  000011                     DELAY_us@us_count:
   196                           	opt stack 0
   197                           
   198                           ; 2 bytes @ 0x0
   199  000011                     	ds	1
   200  000012                     ??_GPIO_PinDirection:
   201  000012                     ??_GPIO_PinWrite:
   202                           
   203                           ; 1 bytes @ 0x1
   204  000012                     	ds	1
   205  000013                     GPIO_PinRead@var_portNumber_u8:
   206                           	opt stack 0
   207  000013                     DELAY_ms@ms_count:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x2
   211  000013                     	ds	1
   212  000014                     GPIO_PinDirection@var_portNumber_u8:
   213                           	opt stack 0
   214  000014                     GPIO_PinWrite@var_portNumber_u8:
   215                           	opt stack 0
   216  000014                     GPIO_PinRead@returnStatus:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x3
   220  000014                     	ds	1
   221  000015                     GPIO_PinDirection@enm_pinNumber:
   222                           	opt stack 0
   223  000015                     GPIO_PinWrite@enm_pinNumber:
   224                           	opt stack 0
   225  000015                     GPIO_PinRead@enm_pinNumber:
   226                           	opt stack 0
   227                           
   228                           ; 1 bytes @ 0x4
   229  000015                     	ds	1
   230  000016                     LCD_SetUp@RW:
   231                           	opt stack 0
   232  000016                     lcd_BusyCheck@busyflag:
   233                           	opt stack 0
   234  000016                     lcd_SendHigherNibble@dataByte:
   235                           	opt stack 0
   236  000016                     lcd_SendLowerNibble@dataByte:
   237                           	opt stack 0
   238                           
   239                           ; 1 bytes @ 0x5
   240  000016                     	ds	1
   241  000017                     LCD_SetUp@EN:
   242                           	opt stack 0
   243  000017                     LCD_CmdWrite@v_lcdCmd_u8:
   244                           	opt stack 0
   245  000017                     lcd_DataWrite@dataByte:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x6
   249  000017                     	ds	1
   250  000018                     LCD_SetUp@D0:
   251                           	opt stack 0
   252  000018                     LCD_GoToLine@v_lineNumber_u8:
   253                           	opt stack 0
   254  000018                     LCD_DisplayChar@v_lcdData_u8:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x7
   258  000018                     	ds	1
   259  000019                     LCD_SetUp@D1:
   260                           	opt stack 0
   261  000019                     LCD_Init@v_MaxCharsPerLine_u8:
   262                           	opt stack 0
   263  000019                     LCD_DisplayString@ptr_stringPointer_u8:
   264                           	opt stack 0
   265                           
   266                           ; 2 bytes @ 0x8
   267  000019                     	ds	1
   268  00001A                     LCD_SetUp@D2:
   269                           	opt stack 0
   270  00001A                     LCD_Init@v_lcdNoOfLines_u8:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0x9
   274  00001A                     	ds	1
   275  00001B                     LCD_SetUp@D3:
   276                           	opt stack 0
   277                           
   278                           ; 1 bytes @ 0xA
   279  00001B                     	ds	1
   280  00001C                     LCD_SetUp@D4:
   281                           	opt stack 0
   282                           
   283                           ; 1 bytes @ 0xB
   284  00001C                     	ds	1
   285  00001D                     LCD_SetUp@D5:
   286                           	opt stack 0
   287                           
   288                           ; 1 bytes @ 0xC
   289  00001D                     	ds	1
   290  00001E                     LCD_SetUp@D6:
   291                           	opt stack 0
   292                           
   293                           ; 1 bytes @ 0xD
   294  00001E                     	ds	1
   295  00001F                     LCD_SetUp@D7:
   296                           	opt stack 0
   297                           
   298                           ; 1 bytes @ 0xE
   299  00001F                     	ds	1
   300  000020                     LCD_SetUp@RS:
   301                           	opt stack 0
   302                           
   303                           ; 1 bytes @ 0xF
   304  000020                     	ds	1
   305  000021                     tblptru	equ	0xFF8
   306                           tblptrh	equ	0xFF7
   307                           tblptrl	equ	0xFF6
   308                           tablat	equ	0xFF5
   309                           postinc0	equ	0xFEE
   310                           wreg	equ	0xFE8
   311                           postdec1	equ	0xFE5
   312                           fsr1l	equ	0xFE1
   313                           
   314                           ; 1 bytes @ 0x10
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 39 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;                  2  261[None  ] int 
   327 ;; Registers used:
   328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   334 ;;      Params:         0       0       0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels required when called:    7
   340 ;; This function calls:
   341 ;;		_LCD_DisplayString
   342 ;;		_LCD_Init
   343 ;;		_LCD_SetUp
   344 ;; This function is called by:
   345 ;;		Startup code after reset
   346 ;; This function uses a non-reentrant model
   347 ;;
   348                           
   349                           	psect	text0
   350  000BD4                     __ptext0:
   351                           	opt stack 0
   352  000BD4                     _main:
   353                           	opt stack 24
   354                           
   355                           ;main.c: 42: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   356                           
   357                           ;incstack = 0
   358  000BD4  0E09               	movlw	9
   359  000BD6  6E16               	movwf	LCD_SetUp@RW,c
   360  000BD8  0E0A               	movlw	10
   361  000BDA  6E17               	movwf	LCD_SetUp@EN,c
   362  000BDC  0EFF               	movlw	255
   363  000BDE  6E18               	movwf	LCD_SetUp@D0,c
   364  000BE0  0EFF               	movlw	255
   365  000BE2  6E19               	movwf	LCD_SetUp@D1,c
   366  000BE4  0EFF               	movlw	255
   367  000BE6  6E1A               	movwf	LCD_SetUp@D2,c
   368  000BE8  0EFF               	movlw	255
   369  000BEA  6E1B               	movwf	LCD_SetUp@D3,c
   370  000BEC  0E0C               	movlw	12
   371  000BEE  6E1C               	movwf	LCD_SetUp@D4,c
   372  000BF0  0E0D               	movlw	13
   373  000BF2  6E1D               	movwf	LCD_SetUp@D5,c
   374  000BF4  0E0E               	movlw	14
   375  000BF6  6E1E               	movwf	LCD_SetUp@D6,c
   376  000BF8  0E0F               	movlw	15
   377  000BFA  6E1F               	movwf	LCD_SetUp@D7,c
   378  000BFC  0E08               	movlw	8
   379  000BFE  ECDA  F004         	call	_LCD_SetUp
   380                           
   381                           ;main.c: 43: LCD_Init(2,16);
   382  000C02  0E10               	movlw	16
   383  000C04  6E19               	movwf	LCD_Init@v_MaxCharsPerLine_u8,c
   384  000C06  0E02               	movlw	2
   385  000C08  EC90  F005         	call	_LCD_Init
   386                           
   387                           ;main.c: 45: LCD_DisplayString("Explore Embedded");
   388  000C0C  0E01               	movlw	low STR_1
   389  000C0E  6E19               	movwf	LCD_DisplayString@ptr_stringPointer_u8,c
   390  000C10  0E06               	movlw	high STR_1
   391  000C12  6E1A               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1,c
   392  000C14  ECF7  F006         	call	_LCD_DisplayString	;wreg free
   393                           
   394                           ;main.c: 46: LCD_DisplayString("Lcd 4-bit Mode");
   395  000C18  0E12               	movlw	low STR_2
   396  000C1A  6E19               	movwf	LCD_DisplayString@ptr_stringPointer_u8,c
   397  000C1C  0E06               	movlw	high STR_2
   398  000C1E  6E1A               	movwf	LCD_DisplayString@ptr_stringPointer_u8+1,c
   399  000C20  ECF7  F006         	call	_LCD_DisplayString	;wreg free
   400  000C24                     l262:
   401  000C24  D7FF               	goto	l262
   402  000C26                     __end_of_main:
   403                           	opt stack 0
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           postdec1	equ	0xFE5
   411                           fsr1l	equ	0xFE1
   412                           
   413 ;; *************** function _LCD_SetUp *****************
   414 ;; Defined at:
   415 ;;		line 135 in file "../00-libfiles/lcd.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;  RS              1    wreg     enum E3222
   418 ;;  RW              1    5[COMRAM] enum E3222
   419 ;;  EN              1    6[COMRAM] enum E3222
   420 ;;  D0              1    7[COMRAM] enum E3222
   421 ;;  D1              1    8[COMRAM] enum E3222
   422 ;;  D2              1    9[COMRAM] enum E3222
   423 ;;  D3              1   10[COMRAM] enum E3222
   424 ;;  D4              1   11[COMRAM] enum E3222
   425 ;;  D5              1   12[COMRAM] enum E3222
   426 ;;  D6              1   13[COMRAM] enum E3222
   427 ;;  D7              1   14[COMRAM] enum E3222
   428 ;; Auto vars:     Size  Location     Type
   429 ;;  RS              1   15[COMRAM] enum E3222
   430 ;; Return value:  Size  Location     Type
   431 ;;                  1    wreg      void 
   432 ;; Registers used:
   433 ;;		wreg, status,2, status,0, cstack
   434 ;; Tracked objects:
   435 ;;		On entry : 0/0
   436 ;;		On exit  : 0/0
   437 ;;		Unchanged: 0/0
   438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   439 ;;      Params:        10       0       0       0       0       0       0
   440 ;;      Locals:         1       0       0       0       0       0       0
   441 ;;      Temps:          0       0       0       0       0       0       0
   442 ;;      Totals:        11       0       0       0       0       0       0
   443 ;;Total ram usage:       11 bytes
   444 ;; Hardware stack levels used:    1
   445 ;; Hardware stack levels required when called:    1
   446 ;; This function calls:
   447 ;;		_GPIO_PinDirection
   448 ;; This function is called by:
   449 ;;		_main
   450 ;; This function uses a non-reentrant model
   451 ;;
   452                           
   453                           	psect	text1
   454  0009B4                     __ptext1:
   455                           	opt stack 0
   456  0009B4                     _LCD_SetUp:
   457                           	opt stack 29
   458                           
   459                           ;incstack = 0
   460                           ;LCD_SetUp@RS stored from wreg
   461  0009B4  6E20               	movwf	LCD_SetUp@RS,c
   462                           
   463                           ;lcd.c: 148: LCDConfig.RS = RS;
   464  0009B6  C020  F004         	movff	LCD_SetUp@RS,_LCDConfig+3
   465                           
   466                           ;lcd.c: 149: LCDConfig.RW = RW;
   467  0009BA  C016  F005         	movff	LCD_SetUp@RW,_LCDConfig+4
   468                           
   469                           ;lcd.c: 150: LCDConfig.EN = EN;
   470  0009BE  C017  F006         	movff	LCD_SetUp@EN,_LCDConfig+5
   471                           
   472                           ;lcd.c: 152: LCDConfig.D0 = D0;
   473  0009C2  C018  F007         	movff	LCD_SetUp@D0,_LCDConfig+6
   474                           
   475                           ;lcd.c: 153: LCDConfig.D1 = D1;
   476  0009C6  C019  F008         	movff	LCD_SetUp@D1,_LCDConfig+7
   477                           
   478                           ;lcd.c: 154: LCDConfig.D2 = D2;
   479  0009CA  C01A  F009         	movff	LCD_SetUp@D2,_LCDConfig+8
   480                           
   481                           ;lcd.c: 155: LCDConfig.D3 = D3;
   482  0009CE  C01B  F00A         	movff	LCD_SetUp@D3,_LCDConfig+9
   483                           
   484                           ;lcd.c: 156: LCDConfig.D4 = D4;
   485  0009D2  C01C  F00B         	movff	LCD_SetUp@D4,_LCDConfig+10
   486                           
   487                           ;lcd.c: 157: LCDConfig.D5 = D5;
   488  0009D6  C01D  F00C         	movff	LCD_SetUp@D5,_LCDConfig+11
   489                           
   490                           ;lcd.c: 158: LCDConfig.D6 = D6;
   491  0009DA  C01E  F00D         	movff	LCD_SetUp@D6,_LCDConfig+12
   492                           
   493                           ;lcd.c: 159: LCDConfig.D7 = D7;
   494  0009DE  C01F  F00E         	movff	LCD_SetUp@D7,_LCDConfig+13
   495                           
   496                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
   497  0009E2  2818               	incf	LCD_SetUp@D0,w,c
   498  0009E4  B4D8               	btfsc	status,2,c
   499  0009E6  D009               	goto	l1425
   500  0009E8  2819               	incf	LCD_SetUp@D1,w,c
   501  0009EA  B4D8               	btfsc	status,2,c
   502  0009EC  D006               	goto	l1425
   503  0009EE  281A               	incf	LCD_SetUp@D2,w,c
   504  0009F0  B4D8               	btfsc	status,2,c
   505  0009F2  D003               	goto	l1425
   506  0009F4  281B               	incf	LCD_SetUp@D3,w,c
   507  0009F6  A4D8               	btfss	status,2,c
   508  0009F8  D003               	goto	l1427
   509  0009FA                     l1425:
   510                           
   511                           ;lcd.c: 163: {
   512                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
   513  0009FA  0E04               	movlw	4
   514  0009FC  6E03               	movwf	_LCDConfig+2,c
   515                           
   516                           ;lcd.c: 165: }
   517  0009FE  D016               	goto	l1437
   518  000A00                     l1427:
   519                           
   520                           ;lcd.c: 166: else
   521                           ;lcd.c: 167: {
   522                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
   523  000A00  0E08               	movlw	8
   524  000A02  6E03               	movwf	_LCDConfig+2,c
   525                           
   526                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
   527  000A04  0E00               	movlw	0
   528  000A06  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   529  000A08  5018               	movf	LCD_SetUp@D0,w,c
   530  000A0A  ECC1  F003         	call	_GPIO_PinDirection
   531                           
   532                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
   533  000A0E  0E00               	movlw	0
   534  000A10  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   535  000A12  5019               	movf	LCD_SetUp@D1,w,c
   536  000A14  ECC1  F003         	call	_GPIO_PinDirection
   537                           
   538                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
   539  000A18  0E00               	movlw	0
   540  000A1A  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   541  000A1C  501A               	movf	LCD_SetUp@D2,w,c
   542  000A1E  ECC1  F003         	call	_GPIO_PinDirection
   543                           
   544                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
   545  000A22  0E00               	movlw	0
   546  000A24  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   547  000A26  501B               	movf	LCD_SetUp@D3,w,c
   548  000A28  ECC1  F003         	call	_GPIO_PinDirection
   549  000A2C                     l1437:
   550                           
   551                           ;lcd.c: 173: }
   552                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
   553  000A2C  0E00               	movlw	0
   554  000A2E  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   555  000A30  5020               	movf	LCD_SetUp@RS,w,c
   556  000A32  ECC1  F003         	call	_GPIO_PinDirection
   557                           
   558                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
   559  000A36  0E00               	movlw	0
   560  000A38  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   561  000A3A  5016               	movf	LCD_SetUp@RW,w,c
   562  000A3C  ECC1  F003         	call	_GPIO_PinDirection
   563                           
   564                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
   565  000A40  0E00               	movlw	0
   566  000A42  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   567  000A44  5017               	movf	LCD_SetUp@EN,w,c
   568  000A46  ECC1  F003         	call	_GPIO_PinDirection
   569                           
   570                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
   571  000A4A  0E00               	movlw	0
   572  000A4C  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   573  000A4E  501C               	movf	LCD_SetUp@D4,w,c
   574  000A50  ECC1  F003         	call	_GPIO_PinDirection
   575                           
   576                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
   577  000A54  0E00               	movlw	0
   578  000A56  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   579  000A58  501D               	movf	LCD_SetUp@D5,w,c
   580  000A5A  ECC1  F003         	call	_GPIO_PinDirection
   581                           
   582                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
   583  000A5E  0E00               	movlw	0
   584  000A60  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   585  000A62  501E               	movf	LCD_SetUp@D6,w,c
   586  000A64  ECC1  F003         	call	_GPIO_PinDirection
   587                           
   588                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
   589  000A68  0E00               	movlw	0
   590  000A6A  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
   591  000A6C  501F               	movf	LCD_SetUp@D7,w,c
   592  000A6E  ECC1  F003         	call	_GPIO_PinDirection
   593  000A72  0012               	return		;funcret
   594  000A74                     __end_of_LCD_SetUp:
   595                           	opt stack 0
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1l	equ	0xFE1
   604                           status	equ	0xFD8
   605                           
   606 ;; *************** function _LCD_Init *****************
   607 ;; Defined at:
   608 ;;		line 198 in file "../00-libfiles/lcd.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
   611 ;;  v_MaxCharsPe    1    8[COMRAM] unsigned char 
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  v_lcdNoOfLin    1    9[COMRAM] unsigned char 
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : 0/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   623 ;;      Params:         1       0       0       0       0       0       0
   624 ;;      Locals:         1       0       0       0       0       0       0
   625 ;;      Temps:          0       0       0       0       0       0       0
   626 ;;      Totals:         2       0       0       0       0       0       0
   627 ;;Total ram usage:        2 bytes
   628 ;; Hardware stack levels used:    1
   629 ;; Hardware stack levels required when called:    6
   630 ;; This function calls:
   631 ;;		_DELAY_ms
   632 ;;		_LCD_Clear
   633 ;;		_LCD_CmdWrite
   634 ;;		_lcd_Reset
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text2
   641  000B20                     __ptext2:
   642                           	opt stack 0
   643  000B20                     _LCD_Init:
   644                           	opt stack 24
   645                           
   646                           ;incstack = 0
   647                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
   648  000B20  6E1A               	movwf	LCD_Init@v_lcdNoOfLines_u8,c
   649                           
   650                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
   651  000B22  C019  F002         	movff	LCD_Init@v_MaxCharsPerLine_u8,_LCDConfig+1
   652                           
   653                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
   654  000B26  C01A  F001         	movff	LCD_Init@v_lcdNoOfLines_u8,_LCDConfig
   655                           
   656                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
   657  000B2A  0E02               	movlw	2
   658  000B2C  641A               	cpfsgt	LCD_Init@v_lcdNoOfLines_u8,c
   659  000B2E  D008               	goto	l1459
   660                           
   661                           ;lcd.c: 205: {
   662                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
   663  000B30  5019               	movf	LCD_Init@v_MaxCharsPerLine_u8,w,c
   664  000B32  0B0F               	andlw	15
   665  000B34  0F90               	addlw	144
   666  000B36  6E23               	movwf	_ARR_LcdLineNumAddress_U8+2,c
   667                           
   668                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
   669  000B38  5019               	movf	LCD_Init@v_MaxCharsPerLine_u8,w,c
   670  000B3A  0B0F               	andlw	15
   671  000B3C  0FD0               	addlw	208
   672  000B3E  6E24               	movwf	_ARR_LcdLineNumAddress_U8+3,c
   673  000B40                     l1459:
   674                           
   675                           ;lcd.c: 208: }
   676                           ;lcd.c: 210: DELAY_ms(100);
   677  000B40  0E00               	movlw	0
   678  000B42  6E14               	movwf	DELAY_ms@ms_count+1,c
   679  000B44  0E64               	movlw	100
   680  000B46  6E13               	movwf	DELAY_ms@ms_count,c
   681  000B48  EC34  F007         	call	_DELAY_ms	;wreg free
   682                           
   683                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
   684  000B4C  0E08               	movlw	8
   685  000B4E  1803               	xorwf	_LCDConfig+2,w,c
   686  000B50  A4D8               	btfss	status,2,c
   687  000B52  D004               	goto	l1465
   688                           
   689                           ;lcd.c: 213: {
   690                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
   691  000B54  0E38               	movlw	56
   692  000B56  ECC9  F006         	call	_LCD_CmdWrite
   693                           
   694                           ;lcd.c: 215: }
   695  000B5A  D009               	goto	l168
   696  000B5C                     l1465:
   697                           
   698                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
   699  000B5C  0E04               	movlw	4
   700  000B5E  1803               	xorwf	_LCDConfig+2,w,c
   701  000B60  A4D8               	btfss	status,2,c
   702  000B62  D005               	goto	l168
   703                           
   704                           ;lcd.c: 217: {
   705                           ;lcd.c: 218: lcd_Reset();
   706  000B64  ECBD  F005         	call	_lcd_Reset	;wreg free
   707                           
   708                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
   709  000B68  0E28               	movlw	40
   710  000B6A  ECC9  F006         	call	_LCD_CmdWrite
   711  000B6E                     l168:
   712                           
   713                           ;lcd.c: 220: }
   714                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
   715  000B6E  0E0E               	movlw	14
   716  000B70  ECC9  F006         	call	_LCD_CmdWrite
   717                           
   718                           ;lcd.c: 223: LCD_Clear();
   719  000B74  EC4C  F007         	call	_LCD_Clear	;wreg free
   720  000B78  0012               	return		;funcret
   721  000B7A                     __end_of_LCD_Init:
   722                           	opt stack 0
   723                           tblptru	equ	0xFF8
   724                           tblptrh	equ	0xFF7
   725                           tblptrl	equ	0xFF6
   726                           tablat	equ	0xFF5
   727                           postinc0	equ	0xFEE
   728                           wreg	equ	0xFE8
   729                           postdec1	equ	0xFE5
   730                           fsr1l	equ	0xFE1
   731                           status	equ	0xFD8
   732                           
   733 ;; *************** function _lcd_Reset *****************
   734 ;; Defined at:
   735 ;;		line 913 in file "../00-libfiles/lcd.c"
   736 ;; Parameters:    Size  Location     Type
   737 ;;		None
   738 ;; Auto vars:     Size  Location     Type
   739 ;;		None
   740 ;; Return value:  Size  Location     Type
   741 ;;                  1    wreg      void 
   742 ;; Registers used:
   743 ;;		wreg, status,2, status,0, cstack
   744 ;; Tracked objects:
   745 ;;		On entry : 0/0
   746 ;;		On exit  : 0/0
   747 ;;		Unchanged: 0/0
   748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   749 ;;      Params:         0       0       0       0       0       0       0
   750 ;;      Locals:         0       0       0       0       0       0       0
   751 ;;      Temps:          0       0       0       0       0       0       0
   752 ;;      Totals:         0       0       0       0       0       0       0
   753 ;;Total ram usage:        0 bytes
   754 ;; Hardware stack levels used:    1
   755 ;; Hardware stack levels required when called:    2
   756 ;; This function calls:
   757 ;;		_DELAY_ms
   758 ;;		_DELAY_us
   759 ;;		_lcd_SendCmdSignals
   760 ;;		_lcd_SendHigherNibble
   761 ;; This function is called by:
   762 ;;		_LCD_Init
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           	psect	text3
   767  000B7A                     __ptext3:
   768                           	opt stack 0
   769  000B7A                     _lcd_Reset:
   770                           	opt stack 27
   771                           
   772                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
   773                           
   774                           ;incstack = 0
   775  000B7A  0E30               	movlw	48
   776  000B7C  EC39  F006         	call	_lcd_SendHigherNibble
   777                           
   778                           ;lcd.c: 917: lcd_SendCmdSignals();
   779  000B80  EC95  F006         	call	_lcd_SendCmdSignals	;wreg free
   780                           
   781                           ;lcd.c: 918: DELAY_ms(100);
   782  000B84  0E00               	movlw	0
   783  000B86  6E14               	movwf	DELAY_ms@ms_count+1,c
   784  000B88  0E64               	movlw	100
   785  000B8A  6E13               	movwf	DELAY_ms@ms_count,c
   786  000B8C  EC34  F007         	call	_DELAY_ms	;wreg free
   787                           
   788                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
   789  000B90  0E30               	movlw	48
   790  000B92  EC39  F006         	call	_lcd_SendHigherNibble
   791                           
   792                           ;lcd.c: 920: lcd_SendCmdSignals();
   793  000B96  EC95  F006         	call	_lcd_SendCmdSignals	;wreg free
   794                           
   795                           ;lcd.c: 921: DELAY_us(200);
   796  000B9A  0E00               	movlw	0
   797  000B9C  6E12               	movwf	DELAY_us@us_count+1,c
   798  000B9E  0EC8               	movlw	200
   799  000BA0  6E11               	movwf	DELAY_us@us_count,c
   800  000BA2  EC43  F007         	call	_DELAY_us	;wreg free
   801                           
   802                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
   803  000BA6  0E30               	movlw	48
   804  000BA8  EC39  F006         	call	_lcd_SendHigherNibble
   805                           
   806                           ;lcd.c: 923: lcd_SendCmdSignals();
   807  000BAC  EC95  F006         	call	_lcd_SendCmdSignals	;wreg free
   808                           
   809                           ;lcd.c: 924: DELAY_us(200);
   810  000BB0  0E00               	movlw	0
   811  000BB2  6E12               	movwf	DELAY_us@us_count+1,c
   812  000BB4  0EC8               	movlw	200
   813  000BB6  6E11               	movwf	DELAY_us@us_count,c
   814  000BB8  EC43  F007         	call	_DELAY_us	;wreg free
   815                           
   816                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
   817  000BBC  0E20               	movlw	32
   818  000BBE  EC39  F006         	call	_lcd_SendHigherNibble
   819                           
   820                           ;lcd.c: 926: lcd_SendCmdSignals();
   821  000BC2  EC95  F006         	call	_lcd_SendCmdSignals	;wreg free
   822                           
   823                           ;lcd.c: 927: DELAY_us(200);
   824  000BC6  0E00               	movlw	0
   825  000BC8  6E12               	movwf	DELAY_us@us_count+1,c
   826  000BCA  0EC8               	movlw	200
   827  000BCC  6E11               	movwf	DELAY_us@us_count,c
   828  000BCE  EC43  F007         	call	_DELAY_us	;wreg free
   829  000BD2  0012               	return		;funcret
   830  000BD4                     __end_of_lcd_Reset:
   831                           	opt stack 0
   832                           tblptru	equ	0xFF8
   833                           tblptrh	equ	0xFF7
   834                           tblptrl	equ	0xFF6
   835                           tablat	equ	0xFF5
   836                           postinc0	equ	0xFEE
   837                           wreg	equ	0xFE8
   838                           postdec1	equ	0xFE5
   839                           fsr1l	equ	0xFE1
   840                           status	equ	0xFD8
   841                           
   842 ;; *************** function _LCD_Clear *****************
   843 ;; Defined at:
   844 ;;		line 237 in file "../00-libfiles/lcd.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   858 ;;      Params:         0       0       0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0       0       0
   861 ;;      Totals:         0       0       0       0       0       0       0
   862 ;;Total ram usage:        0 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    5
   865 ;; This function calls:
   866 ;;		_LCD_CmdWrite
   867 ;;		_LCD_GoToLine
   868 ;; This function is called by:
   869 ;;		_LCD_Init
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           	psect	text4
   874  000E98                     __ptext4:
   875                           	opt stack 0
   876  000E98                     _LCD_Clear:
   877                           	opt stack 24
   878                           
   879                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
   880                           
   881                           ;incstack = 0
   882  000E98  0E01               	movlw	1
   883  000E9A  ECC9  F006         	call	_LCD_CmdWrite
   884                           
   885                           ;lcd.c: 240: LCD_GoToLine(0x00);
   886  000E9E  0E00               	movlw	0
   887  000EA0  ECE2  F006         	call	_LCD_GoToLine
   888  000EA4  0012               	return		;funcret
   889  000EA6                     __end_of_LCD_Clear:
   890                           	opt stack 0
   891                           tblptru	equ	0xFF8
   892                           tblptrh	equ	0xFF7
   893                           tblptrl	equ	0xFF6
   894                           tablat	equ	0xFF5
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           postdec1	equ	0xFE5
   898                           fsr1l	equ	0xFE1
   899                           status	equ	0xFD8
   900                           
   901 ;; *************** function _LCD_GoToLine *****************
   902 ;; Defined at:
   903 ;;		line 265 in file "../00-libfiles/lcd.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  v_lineNumber    1    wreg     unsigned char 
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  v_lineNumber    1    7[COMRAM] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   917 ;;      Params:         0       0       0       0       0       0       0
   918 ;;      Locals:         1       0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0
   920 ;;      Totals:         1       0       0       0       0       0       0
   921 ;;Total ram usage:        1 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    4
   924 ;; This function calls:
   925 ;;		_LCD_CmdWrite
   926 ;; This function is called by:
   927 ;;		_LCD_Clear
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text5
   932  000DC4                     __ptext5:
   933                           	opt stack 0
   934  000DC4                     _LCD_GoToLine:
   935                           	opt stack 24
   936                           
   937                           ;incstack = 0
   938                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
   939  000DC4  6E18               	movwf	LCD_GoToLine@v_lineNumber_u8,c
   940                           
   941                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
   942  000DC6  5001               	movf	_LCDConfig,w,c
   943  000DC8  5C18               	subwf	LCD_GoToLine@v_lineNumber_u8,w,c
   944  000DCA  B0D8               	btfsc	status,0,c
   945  000DCC  0012               	return	
   946                           
   947                           ;lcd.c: 268: {
   948                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
   949  000DCE  0E00               	movlw	0
   950  000DD0  6E0F               	movwf	_v_LcdTrackCursorPos_U8,c
   951                           
   952                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
   953  000DD2  C018  F010         	movff	LCD_GoToLine@v_lineNumber_u8,_v_LcdTrackLineNum_U8
   954                           
   955                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
   956  000DD6  5018               	movf	LCD_GoToLine@v_lineNumber_u8,w,c
   957  000DD8  0D01               	mullw	1
   958  000DDA  0E21               	movlw	low _ARR_LcdLineNumAddress_U8
   959  000DDC  24F3               	addwf	prodl,w,c
   960  000DDE  6ED9               	movwf	fsr2l,c
   961  000DE0  0E00               	movlw	high _ARR_LcdLineNumAddress_U8
   962  000DE2  20F4               	addwfc	prodh,w,c
   963  000DE4  6EDA               	movwf	fsr2h,c
   964  000DE6  50DF               	movf	indf2,w,c
   965  000DE8  ECC9  F006         	call	_LCD_CmdWrite
   966  000DEC  0012               	return	
   967  000DEE                     __end_of_LCD_GoToLine:
   968                           	opt stack 0
   969                           tblptru	equ	0xFF8
   970                           tblptrh	equ	0xFF7
   971                           tblptrl	equ	0xFF6
   972                           tablat	equ	0xFF5
   973                           prodh	equ	0xFF4
   974                           prodl	equ	0xFF3
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           postdec1	equ	0xFE5
   978                           fsr1l	equ	0xFE1
   979                           indf2	equ	0xFDF
   980                           fsr2h	equ	0xFDA
   981                           fsr2l	equ	0xFD9
   982                           status	equ	0xFD8
   983                           
   984 ;; *************** function _LCD_DisplayString *****************
   985 ;; Defined at:
   986 ;;		line 427 in file "../00-libfiles/lcd.c"
   987 ;; Parameters:    Size  Location     Type
   988 ;;  ptr_stringPo    2    8[COMRAM] PTR const unsigned char 
   989 ;;		 -> STR_2(15), STR_1(17), 
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1001 ;;      Params:         2       0       0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0
  1004 ;;      Totals:         2       0       0       0       0       0       0
  1005 ;;Total ram usage:        2 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    6
  1008 ;; This function calls:
  1009 ;;		_LCD_DisplayChar
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text6
  1016  000DEE                     __ptext6:
  1017                           	opt stack 0
  1018  000DEE                     _LCD_DisplayString:
  1019                           	opt stack 24
  1020                           
  1021                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  1022                           
  1023                           ;incstack = 0
  1024  000DEE  D00A               	goto	l1477
  1025  000DF0                     l1473:
  1026                           
  1027                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1028  000DF0  C019  FFF6         	movff	LCD_DisplayString@ptr_stringPointer_u8,tblptrl
  1029  000DF4  C01A  FFF7         	movff	LCD_DisplayString@ptr_stringPointer_u8+1,tblptrh
  1030  000DF8                     	if	0	;tblptru may be non-zero
  1031  000DF8                     	endif
  1032  000DF8                     	if	0	;tblptru may be non-zero
  1033  000DF8                     	endif
  1034  000DF8  0008               	tblrd		*
  1035  000DFA  50F5               	movf	tablat,w,c
  1036  000DFC  EC21  F007         	call	_LCD_DisplayChar
  1037  000E00  4A19               	infsnz	LCD_DisplayString@ptr_stringPointer_u8,f,c
  1038  000E02  2A1A               	incf	LCD_DisplayString@ptr_stringPointer_u8+1,f,c
  1039  000E04                     l1477:
  1040  000E04  C019  FFF6         	movff	LCD_DisplayString@ptr_stringPointer_u8,tblptrl
  1041  000E08  C01A  FFF7         	movff	LCD_DisplayString@ptr_stringPointer_u8+1,tblptrh
  1042  000E0C                     	if	0	;tblptru may be non-zero
  1043  000E0C                     	endif
  1044  000E0C                     	if	0	;tblptru may be non-zero
  1045  000E0C                     	endif
  1046  000E0C  0008               	tblrd		*
  1047  000E0E  50F5               	movf	tablat,w,c
  1048  000E10  0900               	iorlw	0
  1049  000E12  B4D8               	btfsc	status,2,c
  1050  000E14  0012               	return	
  1051  000E16  D7EC               	goto	l1473
  1052  000E18                     __end_of_LCD_DisplayString:
  1053                           	opt stack 0
  1054                           tblptru	equ	0xFF8
  1055                           tblptrh	equ	0xFF7
  1056                           tblptrl	equ	0xFF6
  1057                           tablat	equ	0xFF5
  1058                           prodh	equ	0xFF4
  1059                           prodl	equ	0xFF3
  1060                           postinc0	equ	0xFEE
  1061                           wreg	equ	0xFE8
  1062                           postdec1	equ	0xFE5
  1063                           fsr1l	equ	0xFE1
  1064                           indf2	equ	0xFDF
  1065                           fsr2h	equ	0xFDA
  1066                           fsr2l	equ	0xFD9
  1067                           status	equ	0xFD8
  1068                           
  1069 ;; *************** function _LCD_DisplayChar *****************
  1070 ;; Defined at:
  1071 ;;		line 392 in file "../00-libfiles/lcd.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  v_lcdData_u8    1    wreg     unsigned char 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  v_lcdData_u8    1    7[COMRAM] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1085 ;;      Params:         0       0       0       0       0       0       0
  1086 ;;      Locals:         1       0       0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0       0       0
  1088 ;;      Totals:         1       0       0       0       0       0       0
  1089 ;;Total ram usage:        1 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    5
  1092 ;; This function calls:
  1093 ;;		_LCD_GoToNextLine
  1094 ;;		_lcd_DataWrite
  1095 ;; This function is called by:
  1096 ;;		_LCD_DisplayString
  1097 ;;		_LCD_DisplayNumber
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text7
  1102  000E42                     __ptext7:
  1103                           	opt stack 0
  1104  000E42                     _LCD_DisplayChar:
  1105                           	opt stack 24
  1106                           
  1107                           ;incstack = 0
  1108                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  1109  000E42  6E18               	movwf	LCD_DisplayChar@v_lcdData_u8,c
  1110                           
  1111                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  1112  000E44  5002               	movf	_LCDConfig+1,w,c
  1113  000E46  5C0F               	subwf	_v_LcdTrackCursorPos_U8,w,c
  1114  000E48  B0D8               	btfsc	status,0,c
  1115  000E4A  D003               	goto	l1387
  1116  000E4C  0E0A               	movlw	10
  1117  000E4E  1818               	xorwf	LCD_DisplayChar@v_lcdData_u8,w,c
  1118  000E50  B4D8               	btfsc	status,2,c
  1119  000E52                     l1387:
  1120                           
  1121                           ;lcd.c: 395: {
  1122                           ;lcd.c: 398: LCD_GoToNextLine();
  1123  000E52  EC0C  F007         	call	_LCD_GoToNextLine	;wreg free
  1124                           
  1125                           ;lcd.c: 399: }
  1126                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  1127  000E56  0E0A               	movlw	10
  1128  000E58  1818               	xorwf	LCD_DisplayChar@v_lcdData_u8,w,c
  1129  000E5A  B4D8               	btfsc	status,2,c
  1130  000E5C  0012               	return	
  1131                           
  1132                           ;lcd.c: 401: {
  1133                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  1134  000E5E  5018               	movf	LCD_DisplayChar@v_lcdData_u8,w,c
  1135  000E60  ECB0  F006         	call	_lcd_DataWrite
  1136                           
  1137                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  1138  000E64  2A0F               	incf	_v_LcdTrackCursorPos_U8,f,c
  1139  000E66  0012               	return	
  1140  000E68                     __end_of_LCD_DisplayChar:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           prodh	equ	0xFF4
  1147                           prodl	equ	0xFF3
  1148                           postinc0	equ	0xFEE
  1149                           wreg	equ	0xFE8
  1150                           postdec1	equ	0xFE5
  1151                           fsr1l	equ	0xFE1
  1152                           indf2	equ	0xFDF
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function _lcd_DataWrite *****************
  1158 ;; Defined at:
  1159 ;;		line 826 in file "../00-libfiles/lcd.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  dataByte        1    wreg     unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  dataByte        1    6[COMRAM] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1173 ;;      Params:         0       0       0       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0
  1176 ;;      Totals:         1       0       0       0       0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    3
  1180 ;; This function calls:
  1181 ;;		_lcd_BusyCheck
  1182 ;;		_lcd_SendDataSignals
  1183 ;;		_lcd_SendHigherNibble
  1184 ;;		_lcd_SendLowerNibble
  1185 ;; This function is called by:
  1186 ;;		_LCD_DisplayChar
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text8
  1191  000D60                     __ptext8:
  1192                           	opt stack 0
  1193  000D60                     _lcd_DataWrite:
  1194                           	opt stack 25
  1195                           
  1196                           ;incstack = 0
  1197                           ;lcd_DataWrite@dataByte stored from wreg
  1198  000D60  6E17               	movwf	lcd_DataWrite@dataByte,c
  1199                           
  1200                           ;lcd.c: 828: lcd_BusyCheck();
  1201  000D62  EC3A  F005         	call	_lcd_BusyCheck	;wreg free
  1202                           
  1203                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  1204  000D66  0E08               	movlw	8
  1205  000D68  1803               	xorwf	_LCDConfig+2,w,c
  1206  000D6A  A4D8               	btfss	status,2,c
  1207  000D6C  D004               	goto	l1369
  1208                           
  1209                           ;lcd.c: 830: {
  1210                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  1211  000D6E  5017               	movf	lcd_DataWrite@dataByte,w,c
  1212  000D70  EC13  F006         	call	_lcd_SendLowerNibble
  1213                           
  1214                           ;lcd.c: 832: }
  1215  000D74  D008               	goto	l1373
  1216  000D76                     l1369:
  1217                           
  1218                           ;lcd.c: 833: else
  1219                           ;lcd.c: 834: {
  1220                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  1221  000D76  5017               	movf	lcd_DataWrite@dataByte,w,c
  1222  000D78  EC39  F006         	call	_lcd_SendHigherNibble
  1223                           
  1224                           ;lcd.c: 836: lcd_SendDataSignals();
  1225  000D7C  EC7A  F006         	call	_lcd_SendDataSignals	;wreg free
  1226                           
  1227                           ;lcd.c: 837: dataByte = dataByte << 4;
  1228  000D80  3817               	swapf	lcd_DataWrite@dataByte,w,c
  1229  000D82  0BF0               	andlw	240
  1230  000D84  6E17               	movwf	lcd_DataWrite@dataByte,c
  1231  000D86                     l1373:
  1232                           
  1233                           ;lcd.c: 838: }
  1234                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  1235  000D86  5017               	movf	lcd_DataWrite@dataByte,w,c
  1236  000D88  EC39  F006         	call	_lcd_SendHigherNibble
  1237                           
  1238                           ;lcd.c: 841: lcd_SendDataSignals();
  1239  000D8C  EC7A  F006         	call	_lcd_SendDataSignals	;wreg free
  1240  000D90  0012               	return		;funcret
  1241  000D92                     __end_of_lcd_DataWrite:
  1242                           	opt stack 0
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           prodh	equ	0xFF4
  1248                           prodl	equ	0xFF3
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1l	equ	0xFE1
  1253                           indf2	equ	0xFDF
  1254                           fsr2h	equ	0xFDA
  1255                           fsr2l	equ	0xFD9
  1256                           status	equ	0xFD8
  1257                           
  1258 ;; *************** function _lcd_SendDataSignals *****************
  1259 ;; Defined at:
  1260 ;;		line 1002 in file "../00-libfiles/lcd.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;		None
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;		None
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1274 ;;      Params:         0       0       0       0       0       0       0
  1275 ;;      Locals:         0       0       0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0
  1277 ;;      Totals:         0       0       0       0       0       0       0
  1278 ;;Total ram usage:        0 bytes
  1279 ;; Hardware stack levels used:    1
  1280 ;; Hardware stack levels required when called:    1
  1281 ;; This function calls:
  1282 ;;		_DELAY_us
  1283 ;;		_GPIO_PinWrite
  1284 ;; This function is called by:
  1285 ;;		_lcd_DataWrite
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text9
  1290  000CF4                     __ptext9:
  1291                           	opt stack 0
  1292  000CF4                     _lcd_SendDataSignals:
  1293                           	opt stack 26
  1294                           
  1295                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  1296                           
  1297                           ;incstack = 0
  1298  000CF4  0E01               	movlw	1
  1299  000CF6  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1300  000CF8  5004               	movf	_LCDConfig+3,w,c
  1301  000CFA  EC11  F003         	call	_GPIO_PinWrite
  1302                           
  1303                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  1304  000CFE  0E00               	movlw	0
  1305  000D00  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1306  000D02  5005               	movf	_LCDConfig+4,w,c
  1307  000D04  EC11  F003         	call	_GPIO_PinWrite
  1308                           
  1309                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  1310  000D08  0E01               	movlw	1
  1311  000D0A  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1312  000D0C  5006               	movf	_LCDConfig+5,w,c
  1313  000D0E  EC11  F003         	call	_GPIO_PinWrite
  1314                           
  1315                           ;lcd.c: 1007: DELAY_us(10);
  1316  000D12  0E00               	movlw	0
  1317  000D14  6E12               	movwf	DELAY_us@us_count+1,c
  1318  000D16  0E0A               	movlw	10
  1319  000D18  6E11               	movwf	DELAY_us@us_count,c
  1320  000D1A  EC43  F007         	call	_DELAY_us	;wreg free
  1321                           
  1322                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  1323  000D1E  0E00               	movlw	0
  1324  000D20  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1325  000D22  5006               	movf	_LCDConfig+5,w,c
  1326  000D24  EC11  F003         	call	_GPIO_PinWrite
  1327  000D28  0012               	return		;funcret
  1328  000D2A                     __end_of_lcd_SendDataSignals:
  1329                           	opt stack 0
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           prodh	equ	0xFF4
  1335                           prodl	equ	0xFF3
  1336                           postinc0	equ	0xFEE
  1337                           wreg	equ	0xFE8
  1338                           postdec1	equ	0xFE5
  1339                           fsr1l	equ	0xFE1
  1340                           indf2	equ	0xFDF
  1341                           fsr2h	equ	0xFDA
  1342                           fsr2l	equ	0xFD9
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _LCD_GoToNextLine *****************
  1346 ;; Defined at:
  1347 ;;		line 292 in file "../00-libfiles/lcd.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1361 ;;      Params:         0       0       0       0       0       0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    4
  1368 ;; This function calls:
  1369 ;;		_LCD_CmdWrite
  1370 ;; This function is called by:
  1371 ;;		_LCD_DisplayChar
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text10
  1376  000E18                     __ptext10:
  1377                           	opt stack 0
  1378  000E18                     _LCD_GoToNextLine:
  1379                           	opt stack 24
  1380                           
  1381                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  1382                           
  1383                           ;incstack = 0
  1384  000E18  2A10               	incf	_v_LcdTrackLineNum_U8,f,c
  1385                           
  1386                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  1387  000E1A  0E00               	movlw	0
  1388  000E1C  6E0F               	movwf	_v_LcdTrackCursorPos_U8,c
  1389                           
  1390                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  1391  000E1E  5001               	movf	_LCDConfig,w,c
  1392  000E20  5C10               	subwf	_v_LcdTrackLineNum_U8,w,c
  1393  000E22  A0D8               	btfss	status,0,c
  1394  000E24  D002               	goto	l1361
  1395                           
  1396                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  1397  000E26  0E00               	movlw	0
  1398  000E28  6E10               	movwf	_v_LcdTrackLineNum_U8,c
  1399  000E2A                     l1361:
  1400                           
  1401                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  1402  000E2A  5010               	movf	_v_LcdTrackLineNum_U8,w,c
  1403  000E2C  0D01               	mullw	1
  1404  000E2E  0E21               	movlw	low _ARR_LcdLineNumAddress_U8
  1405  000E30  24F3               	addwf	prodl,w,c
  1406  000E32  6ED9               	movwf	fsr2l,c
  1407  000E34  0E00               	movlw	high _ARR_LcdLineNumAddress_U8
  1408  000E36  20F4               	addwfc	prodh,w,c
  1409  000E38  6EDA               	movwf	fsr2h,c
  1410  000E3A  50DF               	movf	indf2,w,c
  1411  000E3C  ECC9  F006         	call	_LCD_CmdWrite
  1412  000E40  0012               	return		;funcret
  1413  000E42                     __end_of_LCD_GoToNextLine:
  1414                           	opt stack 0
  1415                           tblptru	equ	0xFF8
  1416                           tblptrh	equ	0xFF7
  1417                           tblptrl	equ	0xFF6
  1418                           tablat	equ	0xFF5
  1419                           prodh	equ	0xFF4
  1420                           prodl	equ	0xFF3
  1421                           postinc0	equ	0xFEE
  1422                           wreg	equ	0xFE8
  1423                           postdec1	equ	0xFE5
  1424                           fsr1l	equ	0xFE1
  1425                           indf2	equ	0xFDF
  1426                           fsr2h	equ	0xFDA
  1427                           fsr2l	equ	0xFD9
  1428                           status	equ	0xFD8
  1429                           
  1430 ;; *************** function _LCD_CmdWrite *****************
  1431 ;; Defined at:
  1432 ;;		line 358 in file "../00-libfiles/lcd.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  v_lcdCmd_u8     1    6[COMRAM] unsigned char 
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0, cstack
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1446 ;;      Params:         0       0       0       0       0       0       0
  1447 ;;      Locals:         1       0       0       0       0       0       0
  1448 ;;      Temps:          0       0       0       0       0       0       0
  1449 ;;      Totals:         1       0       0       0       0       0       0
  1450 ;;Total ram usage:        1 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    3
  1453 ;; This function calls:
  1454 ;;		_lcd_BusyCheck
  1455 ;;		_lcd_SendCmdSignals
  1456 ;;		_lcd_SendHigherNibble
  1457 ;;		_lcd_SendLowerNibble
  1458 ;; This function is called by:
  1459 ;;		_LCD_Init
  1460 ;;		_LCD_Clear
  1461 ;;		_LCD_GoToLine
  1462 ;;		_LCD_GoToNextLine
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           	psect	text11
  1467  000D92                     __ptext11:
  1468                           	opt stack 0
  1469  000D92                     _LCD_CmdWrite:
  1470                           	opt stack 26
  1471                           
  1472                           ;incstack = 0
  1473                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  1474  000D92  6E17               	movwf	LCD_CmdWrite@v_lcdCmd_u8,c
  1475                           
  1476                           ;lcd.c: 360: lcd_BusyCheck();
  1477  000D94  EC3A  F005         	call	_lcd_BusyCheck	;wreg free
  1478                           
  1479                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  1480  000D98  0E08               	movlw	8
  1481  000D9A  1803               	xorwf	_LCDConfig+2,w,c
  1482  000D9C  A4D8               	btfss	status,2,c
  1483  000D9E  D004               	goto	l1335
  1484                           
  1485                           ;lcd.c: 362: {
  1486                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  1487  000DA0  5017               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  1488  000DA2  EC13  F006         	call	_lcd_SendLowerNibble
  1489                           
  1490                           ;lcd.c: 364: }
  1491  000DA6  D008               	goto	l1339
  1492  000DA8                     l1335:
  1493                           
  1494                           ;lcd.c: 365: else
  1495                           ;lcd.c: 366: {
  1496                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  1497  000DA8  5017               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  1498  000DAA  EC39  F006         	call	_lcd_SendHigherNibble
  1499                           
  1500                           ;lcd.c: 368: lcd_SendCmdSignals();
  1501  000DAE  EC95  F006         	call	_lcd_SendCmdSignals	;wreg free
  1502                           
  1503                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  1504  000DB2  3817               	swapf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  1505  000DB4  0BF0               	andlw	240
  1506  000DB6  6E17               	movwf	LCD_CmdWrite@v_lcdCmd_u8,c
  1507  000DB8                     l1339:
  1508                           
  1509                           ;lcd.c: 370: }
  1510                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  1511  000DB8  5017               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  1512  000DBA  EC39  F006         	call	_lcd_SendHigherNibble
  1513                           
  1514                           ;lcd.c: 373: lcd_SendCmdSignals();
  1515  000DBE  EC95  F006         	call	_lcd_SendCmdSignals	;wreg free
  1516  000DC2  0012               	return		;funcret
  1517  000DC4                     __end_of_LCD_CmdWrite:
  1518                           	opt stack 0
  1519                           tblptru	equ	0xFF8
  1520                           tblptrh	equ	0xFF7
  1521                           tblptrl	equ	0xFF6
  1522                           tablat	equ	0xFF5
  1523                           prodh	equ	0xFF4
  1524                           prodl	equ	0xFF3
  1525                           postinc0	equ	0xFEE
  1526                           wreg	equ	0xFE8
  1527                           postdec1	equ	0xFE5
  1528                           fsr1l	equ	0xFE1
  1529                           indf2	equ	0xFDF
  1530                           fsr2h	equ	0xFDA
  1531                           fsr2l	equ	0xFD9
  1532                           status	equ	0xFD8
  1533                           
  1534 ;; *************** function _lcd_SendLowerNibble *****************
  1535 ;; Defined at:
  1536 ;;		line 962 in file "../00-libfiles/lcd.c"
  1537 ;; Parameters:    Size  Location     Type
  1538 ;;  dataByte        1    wreg     unsigned char 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  dataByte        1    5[COMRAM] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1550 ;;      Params:         0       0       0       0       0       0       0
  1551 ;;      Locals:         1       0       0       0       0       0       0
  1552 ;;      Temps:          0       0       0       0       0       0       0
  1553 ;;      Totals:         1       0       0       0       0       0       0
  1554 ;;Total ram usage:        1 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    1
  1557 ;; This function calls:
  1558 ;;		_GPIO_PinWrite
  1559 ;; This function is called by:
  1560 ;;		_LCD_CmdWrite
  1561 ;;		_lcd_DataWrite
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text12
  1566  000C26                     __ptext12:
  1567                           	opt stack 0
  1568  000C26                     _lcd_SendLowerNibble:
  1569                           	opt stack 27
  1570                           
  1571                           ;incstack = 0
  1572                           ;lcd_SendLowerNibble@dataByte stored from wreg
  1573  000C26  6E16               	movwf	lcd_SendLowerNibble@dataByte,c
  1574                           
  1575                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&(((uint8_t)1<<(0))))!=0u));
  1576  000C28  A016               	btfss	lcd_SendLowerNibble@dataByte,0,c
  1577  000C2A  D002               	goto	u1300
  1578  000C2C  0E01               	movlw	1
  1579  000C2E  D001               	goto	u1310
  1580  000C30                     u1300:
  1581  000C30  0E00               	movlw	0
  1582  000C32                     u1310:
  1583  000C32  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1584  000C34  5007               	movf	_LCDConfig+6,w,c
  1585  000C36  EC11  F003         	call	_GPIO_PinWrite
  1586                           
  1587                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&(((uint8_t)1<<(1))))!=0u));
  1588  000C3A  A216               	btfss	lcd_SendLowerNibble@dataByte,1,c
  1589  000C3C  D002               	goto	u1320
  1590  000C3E  0E01               	movlw	1
  1591  000C40  D001               	goto	u1330
  1592  000C42                     u1320:
  1593  000C42  0E00               	movlw	0
  1594  000C44                     u1330:
  1595  000C44  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1596  000C46  5008               	movf	_LCDConfig+7,w,c
  1597  000C48  EC11  F003         	call	_GPIO_PinWrite
  1598                           
  1599                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&(((uint8_t)1<<(2))))!=0u));
  1600  000C4C  A416               	btfss	lcd_SendLowerNibble@dataByte,2,c
  1601  000C4E  D002               	goto	u1340
  1602  000C50  0E01               	movlw	1
  1603  000C52  D001               	goto	u1350
  1604  000C54                     u1340:
  1605  000C54  0E00               	movlw	0
  1606  000C56                     u1350:
  1607  000C56  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1608  000C58  5009               	movf	_LCDConfig+8,w,c
  1609  000C5A  EC11  F003         	call	_GPIO_PinWrite
  1610                           
  1611                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&(((uint8_t)1<<(3))))!=0u));
  1612  000C5E  A616               	btfss	lcd_SendLowerNibble@dataByte,3,c
  1613  000C60  D002               	goto	u1360
  1614  000C62  0E01               	movlw	1
  1615  000C64  D001               	goto	u1370
  1616  000C66                     u1360:
  1617  000C66  0E00               	movlw	0
  1618  000C68                     u1370:
  1619  000C68  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1620  000C6A  500A               	movf	_LCDConfig+9,w,c
  1621  000C6C  EC11  F003         	call	_GPIO_PinWrite
  1622  000C70  0012               	return		;funcret
  1623  000C72                     __end_of_lcd_SendLowerNibble:
  1624                           	opt stack 0
  1625                           tblptru	equ	0xFF8
  1626                           tblptrh	equ	0xFF7
  1627                           tblptrl	equ	0xFF6
  1628                           tablat	equ	0xFF5
  1629                           prodh	equ	0xFF4
  1630                           prodl	equ	0xFF3
  1631                           postinc0	equ	0xFEE
  1632                           wreg	equ	0xFE8
  1633                           postdec1	equ	0xFE5
  1634                           fsr1l	equ	0xFE1
  1635                           indf2	equ	0xFDF
  1636                           fsr2h	equ	0xFDA
  1637                           fsr2l	equ	0xFD9
  1638                           status	equ	0xFD8
  1639                           
  1640 ;; *************** function _lcd_SendHigherNibble *****************
  1641 ;; Defined at:
  1642 ;;		line 943 in file "../00-libfiles/lcd.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;  dataByte        1    wreg     unsigned char 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  dataByte        1    5[COMRAM] unsigned char 
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1656 ;;      Params:         0       0       0       0       0       0       0
  1657 ;;      Locals:         1       0       0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0
  1659 ;;      Totals:         1       0       0       0       0       0       0
  1660 ;;Total ram usage:        1 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    1
  1663 ;; This function calls:
  1664 ;;		_GPIO_PinWrite
  1665 ;; This function is called by:
  1666 ;;		_LCD_CmdWrite
  1667 ;;		_lcd_DataWrite
  1668 ;;		_lcd_Reset
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text13
  1673  000C72                     __ptext13:
  1674                           	opt stack 0
  1675  000C72                     _lcd_SendHigherNibble:
  1676                           	opt stack 27
  1677                           
  1678                           ;incstack = 0
  1679                           ;lcd_SendHigherNibble@dataByte stored from wreg
  1680  000C72  6E16               	movwf	lcd_SendHigherNibble@dataByte,c
  1681                           
  1682                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&(((uint8_t)1<<(4))))!=0u));
  1683  000C74  A816               	btfss	lcd_SendHigherNibble@dataByte,4,c
  1684  000C76  D002               	goto	u1380
  1685  000C78  0E01               	movlw	1
  1686  000C7A  D001               	goto	u1390
  1687  000C7C                     u1380:
  1688  000C7C  0E00               	movlw	0
  1689  000C7E                     u1390:
  1690  000C7E  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1691  000C80  500B               	movf	_LCDConfig+10,w,c
  1692  000C82  EC11  F003         	call	_GPIO_PinWrite
  1693                           
  1694                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&(((uint8_t)1<<(5))))!=0u));
  1695  000C86  AA16               	btfss	lcd_SendHigherNibble@dataByte,5,c
  1696  000C88  D002               	goto	u1400
  1697  000C8A  0E01               	movlw	1
  1698  000C8C  D001               	goto	u1410
  1699  000C8E                     u1400:
  1700  000C8E  0E00               	movlw	0
  1701  000C90                     u1410:
  1702  000C90  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1703  000C92  500C               	movf	_LCDConfig+11,w,c
  1704  000C94  EC11  F003         	call	_GPIO_PinWrite
  1705                           
  1706                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&(((uint8_t)1<<(6))))!=0u));
  1707  000C98  AC16               	btfss	lcd_SendHigherNibble@dataByte,6,c
  1708  000C9A  D002               	goto	u1420
  1709  000C9C  0E01               	movlw	1
  1710  000C9E  D001               	goto	u1430
  1711  000CA0                     u1420:
  1712  000CA0  0E00               	movlw	0
  1713  000CA2                     u1430:
  1714  000CA2  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1715  000CA4  500D               	movf	_LCDConfig+12,w,c
  1716  000CA6  EC11  F003         	call	_GPIO_PinWrite
  1717                           
  1718                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&(((uint8_t)1<<(7))))!=0u));
  1719  000CAA  AE16               	btfss	lcd_SendHigherNibble@dataByte,7,c
  1720  000CAC  D002               	goto	u1440
  1721  000CAE  0E01               	movlw	1
  1722  000CB0  D001               	goto	u1450
  1723  000CB2                     u1440:
  1724  000CB2  0E00               	movlw	0
  1725  000CB4                     u1450:
  1726  000CB4  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1727  000CB6  500E               	movf	_LCDConfig+13,w,c
  1728  000CB8  EC11  F003         	call	_GPIO_PinWrite
  1729  000CBC  0012               	return		;funcret
  1730  000CBE                     __end_of_lcd_SendHigherNibble:
  1731                           	opt stack 0
  1732                           tblptru	equ	0xFF8
  1733                           tblptrh	equ	0xFF7
  1734                           tblptrl	equ	0xFF6
  1735                           tablat	equ	0xFF5
  1736                           prodh	equ	0xFF4
  1737                           prodl	equ	0xFF3
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           postdec1	equ	0xFE5
  1741                           fsr1l	equ	0xFE1
  1742                           indf2	equ	0xFDF
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _lcd_SendCmdSignals *****************
  1748 ;; Defined at:
  1749 ;;		line 981 in file "../00-libfiles/lcd.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1763 ;;      Params:         0       0       0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0
  1766 ;;      Totals:         0       0       0       0       0       0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    1
  1770 ;; This function calls:
  1771 ;;		_DELAY_us
  1772 ;;		_GPIO_PinWrite
  1773 ;; This function is called by:
  1774 ;;		_LCD_CmdWrite
  1775 ;;		_lcd_Reset
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           	psect	text14
  1780  000D2A                     __ptext14:
  1781                           	opt stack 0
  1782  000D2A                     _lcd_SendCmdSignals:
  1783                           	opt stack 27
  1784                           
  1785                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  1786                           
  1787                           ;incstack = 0
  1788  000D2A  0E00               	movlw	0
  1789  000D2C  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1790  000D2E  5004               	movf	_LCDConfig+3,w,c
  1791  000D30  EC11  F003         	call	_GPIO_PinWrite
  1792                           
  1793                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  1794  000D34  0E00               	movlw	0
  1795  000D36  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1796  000D38  5005               	movf	_LCDConfig+4,w,c
  1797  000D3A  EC11  F003         	call	_GPIO_PinWrite
  1798                           
  1799                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  1800  000D3E  0E01               	movlw	1
  1801  000D40  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1802  000D42  5006               	movf	_LCDConfig+5,w,c
  1803  000D44  EC11  F003         	call	_GPIO_PinWrite
  1804                           
  1805                           ;lcd.c: 986: DELAY_us(10);
  1806  000D48  0E00               	movlw	0
  1807  000D4A  6E12               	movwf	DELAY_us@us_count+1,c
  1808  000D4C  0E0A               	movlw	10
  1809  000D4E  6E11               	movwf	DELAY_us@us_count,c
  1810  000D50  EC43  F007         	call	_DELAY_us	;wreg free
  1811                           
  1812                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  1813  000D54  0E00               	movlw	0
  1814  000D56  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1815  000D58  5006               	movf	_LCDConfig+5,w,c
  1816  000D5A  EC11  F003         	call	_GPIO_PinWrite
  1817  000D5E  0012               	return		;funcret
  1818  000D60                     __end_of_lcd_SendCmdSignals:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           prodh	equ	0xFF4
  1825                           prodl	equ	0xFF3
  1826                           postinc0	equ	0xFEE
  1827                           wreg	equ	0xFE8
  1828                           postdec1	equ	0xFE5
  1829                           fsr1l	equ	0xFE1
  1830                           indf2	equ	0xFDF
  1831                           fsr2h	equ	0xFDA
  1832                           fsr2l	equ	0xFD9
  1833                           status	equ	0xFD8
  1834                           
  1835 ;; *************** function _lcd_BusyCheck *****************
  1836 ;; Defined at:
  1837 ;;		line 860 in file "../00-libfiles/lcd.c"
  1838 ;; Parameters:    Size  Location     Type
  1839 ;;		None
  1840 ;; Auto vars:     Size  Location     Type
  1841 ;;  busyflag        1    5[COMRAM] unsigned char 
  1842 ;; Return value:  Size  Location     Type
  1843 ;;                  1    wreg      void 
  1844 ;; Registers used:
  1845 ;;		wreg, status,2, status,0, cstack
  1846 ;; Tracked objects:
  1847 ;;		On entry : 0/0
  1848 ;;		On exit  : 0/0
  1849 ;;		Unchanged: 0/0
  1850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1851 ;;      Params:         0       0       0       0       0       0       0
  1852 ;;      Locals:         1       0       0       0       0       0       0
  1853 ;;      Temps:          0       0       0       0       0       0       0
  1854 ;;      Totals:         1       0       0       0       0       0       0
  1855 ;;Total ram usage:        1 bytes
  1856 ;; Hardware stack levels used:    1
  1857 ;; Hardware stack levels required when called:    2
  1858 ;; This function calls:
  1859 ;;		_DELAY_ms
  1860 ;;		_DELAY_us
  1861 ;;		_GPIO_PinDirection
  1862 ;;		_GPIO_PinRead
  1863 ;;		_GPIO_PinWrite
  1864 ;; This function is called by:
  1865 ;;		_LCD_CmdWrite
  1866 ;;		_lcd_DataWrite
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           	psect	text15
  1871  000A74                     __ptext15:
  1872                           	opt stack 0
  1873  000A74                     _lcd_BusyCheck:
  1874                           	opt stack 26
  1875                           
  1876                           ;lcd.c: 862: uint8_t busyflag;
  1877                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  1878                           
  1879                           ;incstack = 0
  1880  000A74  2805               	incf	_LCDConfig+4,w,c
  1881  000A76  B4D8               	btfsc	status,2,c
  1882  000A78  D04C               	goto	l1321
  1883                           
  1884                           ;lcd.c: 865: {
  1885                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  1886  000A7A  0E01               	movlw	1
  1887  000A7C  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1888  000A7E  500E               	movf	_LCDConfig+13,w,c
  1889  000A80  ECC1  F003         	call	_GPIO_PinDirection
  1890                           
  1891                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  1892  000A84  0E00               	movlw	0
  1893  000A86  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1894  000A88  5004               	movf	_LCDConfig+3,w,c
  1895  000A8A  EC11  F003         	call	_GPIO_PinWrite
  1896                           
  1897                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  1898  000A8E  0E01               	movlw	1
  1899  000A90  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1900  000A92  5005               	movf	_LCDConfig+4,w,c
  1901  000A94  EC11  F003         	call	_GPIO_PinWrite
  1902  000A98                     l234:
  1903                           
  1904                           ;lcd.c: 870: {
  1905                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  1906  000A98  0E00               	movlw	0
  1907  000A9A  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1908  000A9C  5006               	movf	_LCDConfig+5,w,c
  1909  000A9E  EC11  F003         	call	_GPIO_PinWrite
  1910                           
  1911                           ;lcd.c: 873: DELAY_us(10);
  1912  000AA2  0E00               	movlw	0
  1913  000AA4  6E12               	movwf	DELAY_us@us_count+1,c
  1914  000AA6  0E0A               	movlw	10
  1915  000AA8  6E11               	movwf	DELAY_us@us_count,c
  1916  000AAA  EC43  F007         	call	_DELAY_us	;wreg free
  1917                           
  1918                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  1919  000AAE  0E01               	movlw	1
  1920  000AB0  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1921  000AB2  5006               	movf	_LCDConfig+5,w,c
  1922  000AB4  EC11  F003         	call	_GPIO_PinWrite
  1923                           
  1924                           ;lcd.c: 875: DELAY_us(10);
  1925  000AB8  0E00               	movlw	0
  1926  000ABA  6E12               	movwf	DELAY_us@us_count+1,c
  1927  000ABC  0E0A               	movlw	10
  1928  000ABE  6E11               	movwf	DELAY_us@us_count,c
  1929  000AC0  EC43  F007         	call	_DELAY_us	;wreg free
  1930                           
  1931                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  1932  000AC4  500E               	movf	_LCDConfig+13,w,c
  1933  000AC6  EC71  F004         	call	_GPIO_PinRead
  1934  000ACA  6E16               	movwf	lcd_BusyCheck@busyflag,c
  1935                           
  1936                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  1937  000ACC  0E04               	movlw	4
  1938  000ACE  1803               	xorwf	_LCDConfig+2,w,c
  1939  000AD0  A4D8               	btfss	status,2,c
  1940  000AD2  D016               	goto	l1317
  1941                           
  1942                           ;lcd.c: 880: {
  1943                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  1944  000AD4  0E00               	movlw	0
  1945  000AD6  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1946  000AD8  5006               	movf	_LCDConfig+5,w,c
  1947  000ADA  EC11  F003         	call	_GPIO_PinWrite
  1948                           
  1949                           ;lcd.c: 883: DELAY_us(10);
  1950  000ADE  0E00               	movlw	0
  1951  000AE0  6E12               	movwf	DELAY_us@us_count+1,c
  1952  000AE2  0E0A               	movlw	10
  1953  000AE4  6E11               	movwf	DELAY_us@us_count,c
  1954  000AE6  EC43  F007         	call	_DELAY_us	;wreg free
  1955                           
  1956                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  1957  000AEA  0E01               	movlw	1
  1958  000AEC  6E11               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  1959  000AEE  5006               	movf	_LCDConfig+5,w,c
  1960  000AF0  EC11  F003         	call	_GPIO_PinWrite
  1961                           
  1962                           ;lcd.c: 885: DELAY_us(10);
  1963  000AF4  0E00               	movlw	0
  1964  000AF6  6E12               	movwf	DELAY_us@us_count+1,c
  1965  000AF8  0E0A               	movlw	10
  1966  000AFA  6E11               	movwf	DELAY_us@us_count,c
  1967  000AFC  EC43  F007         	call	_DELAY_us	;wreg free
  1968  000B00                     l1317:
  1969                           
  1970                           ;lcd.c: 886: }
  1971                           ;lcd.c: 887: }while(busyflag!=0);
  1972  000B00  5016               	movf	lcd_BusyCheck@busyflag,w,c
  1973  000B02  A4D8               	btfss	status,2,c
  1974  000B04  D7C9               	goto	l234
  1975                           
  1976                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  1977  000B06  0E00               	movlw	0
  1978  000B08  6E11               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1979  000B0A  500E               	movf	_LCDConfig+13,w,c
  1980  000B0C  ECC1  F003         	call	_GPIO_PinDirection
  1981                           
  1982                           ;lcd.c: 890: }
  1983  000B10  0012               	return	
  1984  000B12                     l1321:
  1985                           
  1986                           ;lcd.c: 891: else
  1987                           ;lcd.c: 892: {
  1988                           ;lcd.c: 895: DELAY_ms(1);
  1989  000B12  0E00               	movlw	0
  1990  000B14  6E14               	movwf	DELAY_ms@ms_count+1,c
  1991  000B16  0E01               	movlw	1
  1992  000B18  6E13               	movwf	DELAY_ms@ms_count,c
  1993  000B1A  EC34  F007         	call	_DELAY_ms	;wreg free
  1994  000B1E  0012               	return	
  1995  000B20                     __end_of_lcd_BusyCheck:
  1996                           	opt stack 0
  1997                           tblptru	equ	0xFF8
  1998                           tblptrh	equ	0xFF7
  1999                           tblptrl	equ	0xFF6
  2000                           tablat	equ	0xFF5
  2001                           prodh	equ	0xFF4
  2002                           prodl	equ	0xFF3
  2003                           postinc0	equ	0xFEE
  2004                           wreg	equ	0xFE8
  2005                           postdec1	equ	0xFE5
  2006                           fsr1l	equ	0xFE1
  2007                           indf2	equ	0xFDF
  2008                           fsr2h	equ	0xFDA
  2009                           fsr2l	equ	0xFD9
  2010                           status	equ	0xFD8
  2011                           
  2012 ;; *************** function _GPIO_PinWrite *****************
  2013 ;; Defined at:
  2014 ;;		line 127 in file "../00-libfiles/gpio.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  enm_pinNumbe    1    wreg     enum E3211
  2017 ;;  var_pinValue    1    0[COMRAM] unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  2020 ;;  var_portNumb    1    3[COMRAM] unsigned char 
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2030 ;;      Params:         1       0       0       0       0       0       0
  2031 ;;      Locals:         2       0       0       0       0       0       0
  2032 ;;      Temps:          2       0       0       0       0       0       0
  2033 ;;      Totals:         5       0       0       0       0       0       0
  2034 ;;Total ram usage:        5 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_lcd_BusyCheck
  2040 ;;		_lcd_SendHigherNibble
  2041 ;;		_lcd_SendLowerNibble
  2042 ;;		_lcd_SendCmdSignals
  2043 ;;		_lcd_SendDataSignals
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text16
  2048  000622                     __ptext16:
  2049                           	opt stack 0
  2050  000622                     _GPIO_PinWrite:
  2051                           	opt stack 27
  2052                           
  2053                           ;incstack = 0
  2054                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  2055  000622  6E15               	movwf	GPIO_PinWrite@enm_pinNumber,c
  2056                           
  2057                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  2058                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  2059  000624  3815               	swapf	GPIO_PinWrite@enm_pinNumber,w,c
  2060  000626  46E8               	rlncf	wreg,f,c
  2061  000628  0B1F               	andlw	31
  2062  00062A  6E14               	movwf	GPIO_PinWrite@var_portNumber_u8,c
  2063                           
  2064                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  2065  00062C  5015               	movf	GPIO_PinWrite@enm_pinNumber,w,c
  2066  00062E  0B07               	andlw	7
  2067  000630  6E15               	movwf	GPIO_PinWrite@enm_pinNumber,c
  2068                           
  2069                           ;gpio.c: 138: switch(var_portNumber_u8)
  2070  000632  D096               	goto	l1299
  2071  000634                     l1267:
  2072                           
  2073                           ;gpio.c: 142: ((var_pinValue_u8)? ((LATA) |= ((uint8_t)1<<(enm_pinNumber))): ((LATA) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2074  000634  5011               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2075  000636  B4D8               	btfsc	status,2,c
  2076  000638  D00D               	goto	l1271
  2077  00063A  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2078  00063E  0E01               	movlw	1
  2079  000640  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2080  000642  2A12               	incf	??_GPIO_PinWrite,f,c
  2081  000644  D002               	goto	u1124
  2082  000646                     u1125:
  2083  000646  90D8               	bcf	status,0,c
  2084  000648  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2085  00064A                     u1124:
  2086  00064A  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2087  00064C  D7FC               	goto	u1125
  2088  00064E  5013               	movf	??_GPIO_PinWrite+1,w,c
  2089  000650  1289               	iorwf	3977,f,c	;volatile
  2090  000652  0012               	return	
  2091  000654                     l1271:
  2092  000654  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2093  000658  0E01               	movlw	1
  2094  00065A  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2095  00065C  2A12               	incf	??_GPIO_PinWrite,f,c
  2096  00065E  D002               	goto	u1134
  2097  000660                     u1135:
  2098  000660  90D8               	bcf	status,0,c
  2099  000662  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2100  000664                     u1134:
  2101  000664  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2102  000666  D7FC               	goto	u1135
  2103  000668  5013               	movf	??_GPIO_PinWrite+1,w,c
  2104  00066A  0AFF               	xorlw	255
  2105  00066C  1689               	andwf	3977,f,c	;volatile
  2106                           
  2107                           ;gpio.c: 143: break;
  2108  00066E  0012               	return	
  2109  000670                     l1273:
  2110                           
  2111                           ;gpio.c: 148: ((var_pinValue_u8)? ((LATB) |= ((uint8_t)1<<(enm_pinNumber))): ((LATB) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2112  000670  5011               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2113  000672  B4D8               	btfsc	status,2,c
  2114  000674  D00D               	goto	l1277
  2115  000676  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2116  00067A  0E01               	movlw	1
  2117  00067C  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2118  00067E  2A12               	incf	??_GPIO_PinWrite,f,c
  2119  000680  D002               	goto	u1154
  2120  000682                     u1155:
  2121  000682  90D8               	bcf	status,0,c
  2122  000684  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2123  000686                     u1154:
  2124  000686  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2125  000688  D7FC               	goto	u1155
  2126  00068A  5013               	movf	??_GPIO_PinWrite+1,w,c
  2127  00068C  128A               	iorwf	3978,f,c	;volatile
  2128  00068E  0012               	return	
  2129  000690                     l1277:
  2130  000690  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2131  000694  0E01               	movlw	1
  2132  000696  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2133  000698  2A12               	incf	??_GPIO_PinWrite,f,c
  2134  00069A  D002               	goto	u1164
  2135  00069C                     u1165:
  2136  00069C  90D8               	bcf	status,0,c
  2137  00069E  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2138  0006A0                     u1164:
  2139  0006A0  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2140  0006A2  D7FC               	goto	u1165
  2141  0006A4  5013               	movf	??_GPIO_PinWrite+1,w,c
  2142  0006A6  0AFF               	xorlw	255
  2143  0006A8  168A               	andwf	3978,f,c	;volatile
  2144                           
  2145                           ;gpio.c: 149: break;
  2146  0006AA  0012               	return	
  2147  0006AC                     l1279:
  2148                           
  2149                           ;gpio.c: 154: ((var_pinValue_u8)? ((LATC) |= ((uint8_t)1<<(enm_pinNumber))): ((LATC) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2150  0006AC  5011               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2151  0006AE  B4D8               	btfsc	status,2,c
  2152  0006B0  D00D               	goto	l1283
  2153  0006B2  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2154  0006B6  0E01               	movlw	1
  2155  0006B8  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2156  0006BA  2A12               	incf	??_GPIO_PinWrite,f,c
  2157  0006BC  D002               	goto	u1184
  2158  0006BE                     u1185:
  2159  0006BE  90D8               	bcf	status,0,c
  2160  0006C0  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2161  0006C2                     u1184:
  2162  0006C2  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2163  0006C4  D7FC               	goto	u1185
  2164  0006C6  5013               	movf	??_GPIO_PinWrite+1,w,c
  2165  0006C8  128B               	iorwf	3979,f,c	;volatile
  2166  0006CA  0012               	return	
  2167  0006CC                     l1283:
  2168  0006CC  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2169  0006D0  0E01               	movlw	1
  2170  0006D2  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2171  0006D4  2A12               	incf	??_GPIO_PinWrite,f,c
  2172  0006D6  D002               	goto	u1194
  2173  0006D8                     u1195:
  2174  0006D8  90D8               	bcf	status,0,c
  2175  0006DA  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2176  0006DC                     u1194:
  2177  0006DC  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2178  0006DE  D7FC               	goto	u1195
  2179  0006E0  5013               	movf	??_GPIO_PinWrite+1,w,c
  2180  0006E2  0AFF               	xorlw	255
  2181  0006E4  168B               	andwf	3979,f,c	;volatile
  2182                           
  2183                           ;gpio.c: 155: break;
  2184  0006E6  0012               	return	
  2185  0006E8                     l1285:
  2186                           
  2187                           ;gpio.c: 160: ((var_pinValue_u8)? ((LATD) |= ((uint8_t)1<<(enm_pinNumber))): ((LATD) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2188  0006E8  5011               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2189  0006EA  B4D8               	btfsc	status,2,c
  2190  0006EC  D00D               	goto	l1289
  2191  0006EE  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2192  0006F2  0E01               	movlw	1
  2193  0006F4  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2194  0006F6  2A12               	incf	??_GPIO_PinWrite,f,c
  2195  0006F8  D002               	goto	u1214
  2196  0006FA                     u1215:
  2197  0006FA  90D8               	bcf	status,0,c
  2198  0006FC  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2199  0006FE                     u1214:
  2200  0006FE  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2201  000700  D7FC               	goto	u1215
  2202  000702  5013               	movf	??_GPIO_PinWrite+1,w,c
  2203  000704  128C               	iorwf	3980,f,c	;volatile
  2204  000706  0012               	return	
  2205  000708                     l1289:
  2206  000708  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2207  00070C  0E01               	movlw	1
  2208  00070E  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2209  000710  2A12               	incf	??_GPIO_PinWrite,f,c
  2210  000712  D002               	goto	u1224
  2211  000714                     u1225:
  2212  000714  90D8               	bcf	status,0,c
  2213  000716  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2214  000718                     u1224:
  2215  000718  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2216  00071A  D7FC               	goto	u1225
  2217  00071C  5013               	movf	??_GPIO_PinWrite+1,w,c
  2218  00071E  0AFF               	xorlw	255
  2219  000720  168C               	andwf	3980,f,c	;volatile
  2220                           
  2221                           ;gpio.c: 161: break;
  2222  000722  0012               	return	
  2223  000724                     l1291:
  2224                           
  2225                           ;gpio.c: 166: ((var_pinValue_u8)? ((LATE) |= ((uint8_t)1<<(enm_pinNumber))): ((LATE) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2226  000724  5011               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  2227  000726  B4D8               	btfsc	status,2,c
  2228  000728  D00D               	goto	l1295
  2229  00072A  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2230  00072E  0E01               	movlw	1
  2231  000730  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2232  000732  2A12               	incf	??_GPIO_PinWrite,f,c
  2233  000734  D002               	goto	u1244
  2234  000736                     u1245:
  2235  000736  90D8               	bcf	status,0,c
  2236  000738  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2237  00073A                     u1244:
  2238  00073A  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2239  00073C  D7FC               	goto	u1245
  2240  00073E  5013               	movf	??_GPIO_PinWrite+1,w,c
  2241  000740  128D               	iorwf	3981,f,c	;volatile
  2242  000742  0012               	return	
  2243  000744                     l1295:
  2244  000744  C015  F012         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  2245  000748  0E01               	movlw	1
  2246  00074A  6E13               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  2247  00074C  2A12               	incf	??_GPIO_PinWrite,f,c
  2248  00074E  D002               	goto	u1254
  2249  000750                     u1255:
  2250  000750  90D8               	bcf	status,0,c
  2251  000752  3613               	rlcf	??_GPIO_PinWrite+1,f,c
  2252  000754                     u1254:
  2253  000754  2E12               	decfsz	??_GPIO_PinWrite,f,c
  2254  000756  D7FC               	goto	u1255
  2255  000758  5013               	movf	??_GPIO_PinWrite+1,w,c
  2256  00075A  0AFF               	xorlw	255
  2257  00075C  168D               	andwf	3981,f,c	;volatile
  2258                           
  2259                           ;gpio.c: 169: }
  2260                           
  2261                           ;gpio.c: 167: break;
  2262  00075E  0012               	return	
  2263  000760                     l1299:
  2264  000760  5014               	movf	GPIO_PinWrite@var_portNumber_u8,w,c
  2265                           
  2266                           ; Switch size 1, requested type "space"
  2267                           ; Number of cases is 5, Range of values is 0 to 4
  2268                           ; switch strategies available:
  2269                           ; Name         Instructions Cycles
  2270                           ; simple_byte           16     9 (average)
  2271                           ;	Chosen strategy is simple_byte
  2272  000762  0A00               	xorlw	0	; case 0
  2273  000764  B4D8               	btfsc	status,2,c
  2274  000766  D766               	goto	l1267
  2275  000768  0A01               	xorlw	1	; case 1
  2276  00076A  B4D8               	btfsc	status,2,c
  2277  00076C  D781               	goto	l1273
  2278  00076E  0A03               	xorlw	3	; case 2
  2279  000770  B4D8               	btfsc	status,2,c
  2280  000772  D79C               	goto	l1279
  2281  000774  0A01               	xorlw	1	; case 3
  2282  000776  B4D8               	btfsc	status,2,c
  2283  000778  D7B7               	goto	l1285
  2284  00077A  0A07               	xorlw	7	; case 4
  2285  00077C  A4D8               	btfss	status,2,c
  2286  00077E  0012               	return	
  2287  000780  D7D1               	goto	l1291
  2288  000782                     __end_of_GPIO_PinWrite:
  2289                           	opt stack 0
  2290                           tblptru	equ	0xFF8
  2291                           tblptrh	equ	0xFF7
  2292                           tblptrl	equ	0xFF6
  2293                           tablat	equ	0xFF5
  2294                           prodh	equ	0xFF4
  2295                           prodl	equ	0xFF3
  2296                           postinc0	equ	0xFEE
  2297                           wreg	equ	0xFE8
  2298                           postdec1	equ	0xFE5
  2299                           fsr1l	equ	0xFE1
  2300                           indf2	equ	0xFDF
  2301                           fsr2h	equ	0xFDA
  2302                           fsr2l	equ	0xFD9
  2303                           status	equ	0xFD8
  2304                           
  2305 ;; *************** function _GPIO_PinRead *****************
  2306 ;; Defined at:
  2307 ;;		line 192 in file "../00-libfiles/gpio.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  enm_pinNumbe    1    wreg     enum E3211
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  2312 ;;  returnStatus    1    3[COMRAM] unsigned char 
  2313 ;;  var_portNumb    1    2[COMRAM] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      unsigned char 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2323 ;;      Params:         0       0       0       0       0       0       0
  2324 ;;      Locals:         3       0       0       0       0       0       0
  2325 ;;      Temps:          2       0       0       0       0       0       0
  2326 ;;      Totals:         5       0       0       0       0       0       0
  2327 ;;Total ram usage:        5 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; This function calls:
  2330 ;;		Nothing
  2331 ;; This function is called by:
  2332 ;;		_lcd_BusyCheck
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text17
  2337  0008E2                     __ptext17:
  2338                           	opt stack 0
  2339  0008E2                     _GPIO_PinRead:
  2340                           	opt stack 27
  2341                           
  2342                           ;incstack = 0
  2343                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  2344  0008E2  6E15               	movwf	GPIO_PinRead@enm_pinNumber,c
  2345                           
  2346                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  2347                           ;gpio.c: 195: uint8_t returnStatus = 0;
  2348  0008E4  0E00               	movlw	0
  2349  0008E6  6E14               	movwf	GPIO_PinRead@returnStatus,c
  2350                           
  2351                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  2352  0008E8  3815               	swapf	GPIO_PinRead@enm_pinNumber,w,c
  2353  0008EA  46E8               	rlncf	wreg,f,c
  2354  0008EC  0B1F               	andlw	31
  2355  0008EE  6E13               	movwf	GPIO_PinRead@var_portNumber_u8,c
  2356                           
  2357                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  2358  0008F0  5015               	movf	GPIO_PinRead@enm_pinNumber,w,c
  2359  0008F2  0B07               	andlw	7
  2360  0008F4  6E15               	movwf	GPIO_PinRead@enm_pinNumber,c
  2361                           
  2362                           ;gpio.c: 201: switch(var_portNumber_u8)
  2363  0008F6  D04C               	goto	l975
  2364  0008F8                     l963:
  2365                           
  2366                           ;gpio.c: 205: returnStatus = (((PORTA)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2367  0008F8  C015  F011         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2368  0008FC  0E01               	movlw	1
  2369  0008FE  6E12               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2370  000900  2A11               	incf	??_GPIO_PinRead,f,c
  2371  000902  D002               	goto	u324
  2372  000904                     u325:
  2373  000904  90D8               	bcf	status,0,c
  2374  000906  3612               	rlcf	??_GPIO_PinRead+1,f,c
  2375  000908                     u324:
  2376  000908  2E11               	decfsz	??_GPIO_PinRead,f,c
  2377  00090A  D7FC               	goto	u325
  2378  00090C  5012               	movf	??_GPIO_PinRead+1,w,c
  2379  00090E  1480               	andwf	3968,w,c	;volatile
  2380  000910  0900               	iorlw	0
  2381  000912  B4D8               	btfsc	status,2,c
  2382  000914  D03B               	goto	u450
  2383  000916  D029               	goto	u421
  2384  000918                     u340:
  2385  000918  6E14               	movwf	GPIO_PinRead@returnStatus,c
  2386                           
  2387                           ;gpio.c: 206: break;
  2388  00091A  D04A               	goto	l977
  2389  00091C                     l965:
  2390                           
  2391                           ;gpio.c: 210: returnStatus = (((PORTB)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2392  00091C  C015  F011         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2393  000920  0E01               	movlw	1
  2394  000922  6E12               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2395  000924  2A11               	incf	??_GPIO_PinRead,f,c
  2396  000926  D002               	goto	u354
  2397  000928                     u355:
  2398  000928  90D8               	bcf	status,0,c
  2399  00092A  3612               	rlcf	??_GPIO_PinRead+1,f,c
  2400  00092C                     u354:
  2401  00092C  2E11               	decfsz	??_GPIO_PinRead,f,c
  2402  00092E  D7FC               	goto	u355
  2403  000930  5012               	movf	??_GPIO_PinRead+1,w,c
  2404  000932  1481               	andwf	3969,w,c	;volatile
  2405  000934  D028               	goto	L3
  2406  000936                     l967:
  2407                           
  2408                           ;gpio.c: 215: returnStatus = (((PORTC)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2409  000936  C015  F011         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2410  00093A  0E01               	movlw	1
  2411  00093C  6E12               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2412  00093E  2A11               	incf	??_GPIO_PinRead,f,c
  2413  000940  D002               	goto	u384
  2414  000942                     u385:
  2415  000942  90D8               	bcf	status,0,c
  2416  000944  3612               	rlcf	??_GPIO_PinRead+1,f,c
  2417  000946                     u384:
  2418  000946  2E11               	decfsz	??_GPIO_PinRead,f,c
  2419  000948  D7FC               	goto	u385
  2420  00094A  5012               	movf	??_GPIO_PinRead+1,w,c
  2421  00094C  1482               	andwf	3970,w,c	;volatile
  2422  00094E  D01B               	goto	L3
  2423  000950                     l969:
  2424                           
  2425                           ;gpio.c: 221: returnStatus = (((PORTD)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2426  000950  C015  F011         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2427  000954  0E01               	movlw	1
  2428  000956  6E12               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2429  000958  2A11               	incf	??_GPIO_PinRead,f,c
  2430  00095A  D002               	goto	u414
  2431  00095C                     u415:
  2432  00095C  90D8               	bcf	status,0,c
  2433  00095E  3612               	rlcf	??_GPIO_PinRead+1,f,c
  2434  000960                     u414:
  2435  000960  2E11               	decfsz	??_GPIO_PinRead,f,c
  2436  000962  D7FC               	goto	u415
  2437  000964  5012               	movf	??_GPIO_PinRead+1,w,c
  2438  000966  1483               	andwf	3971,w,c	;volatile
  2439  000968  D00E               	goto	L3
  2440  00096A                     u421:
  2441  00096A  0E01               	movlw	1
  2442  00096C  D7D5               	goto	u340
  2443  00096E                     l971:
  2444                           
  2445                           ;gpio.c: 227: returnStatus = (((PORTE)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  2446  00096E  C015  F011         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  2447  000972  0E01               	movlw	1
  2448  000974  6E12               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  2449  000976  2A11               	incf	??_GPIO_PinRead,f,c
  2450  000978  D002               	goto	u444
  2451  00097A                     u445:
  2452  00097A  90D8               	bcf	status,0,c
  2453  00097C  3612               	rlcf	??_GPIO_PinRead+1,f,c
  2454  00097E                     u444:
  2455  00097E  2E11               	decfsz	??_GPIO_PinRead,f,c
  2456  000980  D7FC               	goto	u445
  2457  000982  5012               	movf	??_GPIO_PinRead+1,w,c
  2458  000984  1484               	andwf	3972,w,c	;volatile
  2459  000986                     L3:
  2460  000986  0900               	iorlw	0
  2461  000988  A4D8               	btfss	status,2,c
  2462  00098A  D7EF               	goto	u421
  2463  00098C                     u450:
  2464  00098C  0E00               	movlw	0
  2465  00098E  D7C4               	goto	u340
  2466  000990                     l975:
  2467  000990  5013               	movf	GPIO_PinRead@var_portNumber_u8,w,c
  2468                           
  2469                           ; Switch size 1, requested type "space"
  2470                           ; Number of cases is 5, Range of values is 0 to 4
  2471                           ; switch strategies available:
  2472                           ; Name         Instructions Cycles
  2473                           ; simple_byte           16     9 (average)
  2474                           ;	Chosen strategy is simple_byte
  2475  000992  0A00               	xorlw	0	; case 0
  2476  000994  B4D8               	btfsc	status,2,c
  2477  000996  D7B0               	goto	l963
  2478  000998  0A01               	xorlw	1	; case 1
  2479  00099A  B4D8               	btfsc	status,2,c
  2480  00099C  D7BF               	goto	l965
  2481  00099E  0A03               	xorlw	3	; case 2
  2482  0009A0  B4D8               	btfsc	status,2,c
  2483  0009A2  D7C9               	goto	l967
  2484  0009A4  0A01               	xorlw	1	; case 3
  2485  0009A6  B4D8               	btfsc	status,2,c
  2486  0009A8  D7D3               	goto	l969
  2487  0009AA  0A07               	xorlw	7	; case 4
  2488  0009AC  B4D8               	btfsc	status,2,c
  2489  0009AE  D7DF               	goto	l971
  2490  0009B0                     l977:
  2491                           
  2492                           ;gpio.c: 230: return returnStatus;
  2493  0009B0  5014               	movf	GPIO_PinRead@returnStatus,w,c
  2494  0009B2  0012               	return	
  2495  0009B4                     __end_of_GPIO_PinRead:
  2496                           	opt stack 0
  2497                           tblptru	equ	0xFF8
  2498                           tblptrh	equ	0xFF7
  2499                           tblptrl	equ	0xFF6
  2500                           tablat	equ	0xFF5
  2501                           prodh	equ	0xFF4
  2502                           prodl	equ	0xFF3
  2503                           postinc0	equ	0xFEE
  2504                           wreg	equ	0xFE8
  2505                           postdec1	equ	0xFE5
  2506                           fsr1l	equ	0xFE1
  2507                           indf2	equ	0xFDF
  2508                           fsr2h	equ	0xFDA
  2509                           fsr2l	equ	0xFD9
  2510                           status	equ	0xFD8
  2511                           
  2512 ;; *************** function _GPIO_PinDirection *****************
  2513 ;; Defined at:
  2514 ;;		line 60 in file "../00-libfiles/gpio.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  enm_pinNumbe    1    wreg     enum E3211
  2517 ;;  var_pinDirn_    1    0[COMRAM] unsigned char 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  2520 ;;  var_portNumb    1    3[COMRAM] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2530 ;;      Params:         1       0       0       0       0       0       0
  2531 ;;      Locals:         2       0       0       0       0       0       0
  2532 ;;      Temps:          2       0       0       0       0       0       0
  2533 ;;      Totals:         5       0       0       0       0       0       0
  2534 ;;Total ram usage:        5 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; This function calls:
  2537 ;;		Nothing
  2538 ;; This function is called by:
  2539 ;;		_LCD_SetUp
  2540 ;;		_lcd_BusyCheck
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text18
  2545  000782                     __ptext18:
  2546                           	opt stack 0
  2547  000782                     _GPIO_PinDirection:
  2548                           	opt stack 29
  2549                           
  2550                           ;incstack = 0
  2551                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  2552  000782  6E15               	movwf	GPIO_PinDirection@enm_pinNumber,c
  2553                           
  2554                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  2555                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  2556  000784  3815               	swapf	GPIO_PinDirection@enm_pinNumber,w,c
  2557  000786  46E8               	rlncf	wreg,f,c
  2558  000788  0B1F               	andlw	31
  2559  00078A  6E14               	movwf	GPIO_PinDirection@var_portNumber_u8,c
  2560                           
  2561                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  2562  00078C  5015               	movf	GPIO_PinDirection@enm_pinNumber,w,c
  2563  00078E  0B07               	andlw	7
  2564  000790  6E15               	movwf	GPIO_PinDirection@enm_pinNumber,c
  2565                           
  2566                           ;gpio.c: 71: switch(var_portNumber_u8)
  2567  000792  D096               	goto	l1263
  2568  000794                     l1231:
  2569                           
  2570                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISA) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2571  000794  5011               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  2572  000796  B4D8               	btfsc	status,2,c
  2573  000798  D00D               	goto	l1235
  2574  00079A  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2575  00079E  0E01               	movlw	1
  2576  0007A0  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2577  0007A2  2A12               	incf	??_GPIO_PinDirection,f,c
  2578  0007A4  D002               	goto	u974
  2579  0007A6                     u975:
  2580  0007A6  90D8               	bcf	status,0,c
  2581  0007A8  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2582  0007AA                     u974:
  2583  0007AA  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2584  0007AC  D7FC               	goto	u975
  2585  0007AE  5013               	movf	??_GPIO_PinDirection+1,w,c
  2586  0007B0  1292               	iorwf	3986,f,c	;volatile
  2587  0007B2  0012               	return	
  2588  0007B4                     l1235:
  2589  0007B4  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2590  0007B8  0E01               	movlw	1
  2591  0007BA  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2592  0007BC  2A12               	incf	??_GPIO_PinDirection,f,c
  2593  0007BE  D002               	goto	u984
  2594  0007C0                     u985:
  2595  0007C0  90D8               	bcf	status,0,c
  2596  0007C2  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2597  0007C4                     u984:
  2598  0007C4  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2599  0007C6  D7FC               	goto	u985
  2600  0007C8  5013               	movf	??_GPIO_PinDirection+1,w,c
  2601  0007CA  0AFF               	xorlw	255
  2602  0007CC  1692               	andwf	3986,f,c	;volatile
  2603                           
  2604                           ;gpio.c: 76: break;
  2605  0007CE  0012               	return	
  2606  0007D0                     l1237:
  2607                           
  2608                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISB) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2609  0007D0  5011               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  2610  0007D2  B4D8               	btfsc	status,2,c
  2611  0007D4  D00D               	goto	l1241
  2612  0007D6  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2613  0007DA  0E01               	movlw	1
  2614  0007DC  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2615  0007DE  2A12               	incf	??_GPIO_PinDirection,f,c
  2616  0007E0  D002               	goto	u1004
  2617  0007E2                     u1005:
  2618  0007E2  90D8               	bcf	status,0,c
  2619  0007E4  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2620  0007E6                     u1004:
  2621  0007E6  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2622  0007E8  D7FC               	goto	u1005
  2623  0007EA  5013               	movf	??_GPIO_PinDirection+1,w,c
  2624  0007EC  1293               	iorwf	3987,f,c	;volatile
  2625  0007EE  0012               	return	
  2626  0007F0                     l1241:
  2627  0007F0  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2628  0007F4  0E01               	movlw	1
  2629  0007F6  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2630  0007F8  2A12               	incf	??_GPIO_PinDirection,f,c
  2631  0007FA  D002               	goto	u1014
  2632  0007FC                     u1015:
  2633  0007FC  90D8               	bcf	status,0,c
  2634  0007FE  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2635  000800                     u1014:
  2636  000800  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2637  000802  D7FC               	goto	u1015
  2638  000804  5013               	movf	??_GPIO_PinDirection+1,w,c
  2639  000806  0AFF               	xorlw	255
  2640  000808  1693               	andwf	3987,f,c	;volatile
  2641                           
  2642                           ;gpio.c: 82: break;
  2643  00080A  0012               	return	
  2644  00080C                     l1243:
  2645                           
  2646                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISC) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2647  00080C  5011               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  2648  00080E  B4D8               	btfsc	status,2,c
  2649  000810  D00D               	goto	l1247
  2650  000812  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2651  000816  0E01               	movlw	1
  2652  000818  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2653  00081A  2A12               	incf	??_GPIO_PinDirection,f,c
  2654  00081C  D002               	goto	u1034
  2655  00081E                     u1035:
  2656  00081E  90D8               	bcf	status,0,c
  2657  000820  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2658  000822                     u1034:
  2659  000822  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2660  000824  D7FC               	goto	u1035
  2661  000826  5013               	movf	??_GPIO_PinDirection+1,w,c
  2662  000828  1294               	iorwf	3988,f,c	;volatile
  2663  00082A  0012               	return	
  2664  00082C                     l1247:
  2665  00082C  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2666  000830  0E01               	movlw	1
  2667  000832  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2668  000834  2A12               	incf	??_GPIO_PinDirection,f,c
  2669  000836  D002               	goto	u1044
  2670  000838                     u1045:
  2671  000838  90D8               	bcf	status,0,c
  2672  00083A  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2673  00083C                     u1044:
  2674  00083C  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2675  00083E  D7FC               	goto	u1045
  2676  000840  5013               	movf	??_GPIO_PinDirection+1,w,c
  2677  000842  0AFF               	xorlw	255
  2678  000844  1694               	andwf	3988,f,c	;volatile
  2679                           
  2680                           ;gpio.c: 88: break;
  2681  000846  0012               	return	
  2682  000848                     l1249:
  2683                           
  2684                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISD) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2685  000848  5011               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  2686  00084A  B4D8               	btfsc	status,2,c
  2687  00084C  D00D               	goto	l1253
  2688  00084E  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2689  000852  0E01               	movlw	1
  2690  000854  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2691  000856  2A12               	incf	??_GPIO_PinDirection,f,c
  2692  000858  D002               	goto	u1064
  2693  00085A                     u1065:
  2694  00085A  90D8               	bcf	status,0,c
  2695  00085C  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2696  00085E                     u1064:
  2697  00085E  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2698  000860  D7FC               	goto	u1065
  2699  000862  5013               	movf	??_GPIO_PinDirection+1,w,c
  2700  000864  1295               	iorwf	3989,f,c	;volatile
  2701  000866  0012               	return	
  2702  000868                     l1253:
  2703  000868  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2704  00086C  0E01               	movlw	1
  2705  00086E  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2706  000870  2A12               	incf	??_GPIO_PinDirection,f,c
  2707  000872  D002               	goto	u1074
  2708  000874                     u1075:
  2709  000874  90D8               	bcf	status,0,c
  2710  000876  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2711  000878                     u1074:
  2712  000878  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2713  00087A  D7FC               	goto	u1075
  2714  00087C  5013               	movf	??_GPIO_PinDirection+1,w,c
  2715  00087E  0AFF               	xorlw	255
  2716  000880  1695               	andwf	3989,f,c	;volatile
  2717                           
  2718                           ;gpio.c: 94: break;
  2719  000882  0012               	return	
  2720  000884                     l1255:
  2721                           
  2722                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISE) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  2723  000884  5011               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  2724  000886  B4D8               	btfsc	status,2,c
  2725  000888  D00D               	goto	l1259
  2726  00088A  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2727  00088E  0E01               	movlw	1
  2728  000890  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2729  000892  2A12               	incf	??_GPIO_PinDirection,f,c
  2730  000894  D002               	goto	u1094
  2731  000896                     u1095:
  2732  000896  90D8               	bcf	status,0,c
  2733  000898  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2734  00089A                     u1094:
  2735  00089A  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2736  00089C  D7FC               	goto	u1095
  2737  00089E  5013               	movf	??_GPIO_PinDirection+1,w,c
  2738  0008A0  1296               	iorwf	3990,f,c	;volatile
  2739  0008A2  0012               	return	
  2740  0008A4                     l1259:
  2741  0008A4  C015  F012         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  2742  0008A8  0E01               	movlw	1
  2743  0008AA  6E13               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  2744  0008AC  2A12               	incf	??_GPIO_PinDirection,f,c
  2745  0008AE  D002               	goto	u1104
  2746  0008B0                     u1105:
  2747  0008B0  90D8               	bcf	status,0,c
  2748  0008B2  3613               	rlcf	??_GPIO_PinDirection+1,f,c
  2749  0008B4                     u1104:
  2750  0008B4  2E12               	decfsz	??_GPIO_PinDirection,f,c
  2751  0008B6  D7FC               	goto	u1105
  2752  0008B8  5013               	movf	??_GPIO_PinDirection+1,w,c
  2753  0008BA  0AFF               	xorlw	255
  2754  0008BC  1696               	andwf	3990,f,c	;volatile
  2755                           
  2756                           ;gpio.c: 101: }
  2757                           
  2758                           ;gpio.c: 99: break;
  2759  0008BE  0012               	return	
  2760  0008C0                     l1263:
  2761  0008C0  5014               	movf	GPIO_PinDirection@var_portNumber_u8,w,c
  2762                           
  2763                           ; Switch size 1, requested type "space"
  2764                           ; Number of cases is 5, Range of values is 0 to 4
  2765                           ; switch strategies available:
  2766                           ; Name         Instructions Cycles
  2767                           ; simple_byte           16     9 (average)
  2768                           ;	Chosen strategy is simple_byte
  2769  0008C2  0A00               	xorlw	0	; case 0
  2770  0008C4  B4D8               	btfsc	status,2,c
  2771  0008C6  D766               	goto	l1231
  2772  0008C8  0A01               	xorlw	1	; case 1
  2773  0008CA  B4D8               	btfsc	status,2,c
  2774  0008CC  D781               	goto	l1237
  2775  0008CE  0A03               	xorlw	3	; case 2
  2776  0008D0  B4D8               	btfsc	status,2,c
  2777  0008D2  D79C               	goto	l1243
  2778  0008D4  0A01               	xorlw	1	; case 3
  2779  0008D6  B4D8               	btfsc	status,2,c
  2780  0008D8  D7B7               	goto	l1249
  2781  0008DA  0A07               	xorlw	7	; case 4
  2782  0008DC  A4D8               	btfss	status,2,c
  2783  0008DE  0012               	return	
  2784  0008E0  D7D1               	goto	l1255
  2785  0008E2                     __end_of_GPIO_PinDirection:
  2786                           	opt stack 0
  2787                           tblptru	equ	0xFF8
  2788                           tblptrh	equ	0xFF7
  2789                           tblptrl	equ	0xFF6
  2790                           tablat	equ	0xFF5
  2791                           prodh	equ	0xFF4
  2792                           prodl	equ	0xFF3
  2793                           postinc0	equ	0xFEE
  2794                           wreg	equ	0xFE8
  2795                           postdec1	equ	0xFE5
  2796                           fsr1l	equ	0xFE1
  2797                           indf2	equ	0xFDF
  2798                           fsr2h	equ	0xFDA
  2799                           fsr2l	equ	0xFD9
  2800                           status	equ	0xFD8
  2801                           
  2802 ;; *************** function _DELAY_ms *****************
  2803 ;; Defined at:
  2804 ;;		line 75 in file "../00-libfiles/delay.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;  ms_count        2    2[COMRAM] unsigned int 
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2, status,0, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2818 ;;      Params:         2       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0
  2821 ;;      Totals:         2       0       0       0       0       0       0
  2822 ;;Total ram usage:        2 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		_DELAY_us
  2827 ;; This function is called by:
  2828 ;;		_LCD_Init
  2829 ;;		_lcd_BusyCheck
  2830 ;;		_lcd_Reset
  2831 ;;		_DELAY_sec
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text19
  2836  000E68                     __ptext19:
  2837                           	opt stack 0
  2838  000E68                     _DELAY_ms:
  2839                           	opt stack 27
  2840                           
  2841                           ;delay.c: 77: while (ms_count != 0)
  2842                           
  2843                           ;incstack = 0
  2844  000E68  D009               	goto	l1307
  2845  000E6A                     l1303:
  2846                           
  2847                           ;delay.c: 78: {
  2848                           ;delay.c: 79: DELAY_us(350u);
  2849  000E6A  0E01               	movlw	1
  2850  000E6C  6E12               	movwf	DELAY_us@us_count+1,c
  2851  000E6E  0E5E               	movlw	94
  2852  000E70  6E11               	movwf	DELAY_us@us_count,c
  2853  000E72  EC43  F007         	call	_DELAY_us	;wreg free
  2854                           
  2855                           ;delay.c: 80: ms_count--;
  2856  000E76  0613               	decf	DELAY_ms@ms_count,f,c
  2857  000E78  A0D8               	btfss	status,0,c
  2858  000E7A  0614               	decf	DELAY_ms@ms_count+1,f,c
  2859  000E7C                     l1307:
  2860  000E7C  5013               	movf	DELAY_ms@ms_count,w,c
  2861  000E7E  1014               	iorwf	DELAY_ms@ms_count+1,w,c
  2862  000E80  B4D8               	btfsc	status,2,c
  2863  000E82  0012               	return	
  2864  000E84  D7F2               	goto	l1303
  2865  000E86                     __end_of_DELAY_ms:
  2866                           	opt stack 0
  2867                           tblptru	equ	0xFF8
  2868                           tblptrh	equ	0xFF7
  2869                           tblptrl	equ	0xFF6
  2870                           tablat	equ	0xFF5
  2871                           prodh	equ	0xFF4
  2872                           prodl	equ	0xFF3
  2873                           postinc0	equ	0xFEE
  2874                           wreg	equ	0xFE8
  2875                           postdec1	equ	0xFE5
  2876                           fsr1l	equ	0xFE1
  2877                           indf2	equ	0xFDF
  2878                           fsr2h	equ	0xFDA
  2879                           fsr2l	equ	0xFD9
  2880                           status	equ	0xFD8
  2881                           
  2882 ;; *************** function _DELAY_us *****************
  2883 ;; Defined at:
  2884 ;;		line 56 in file "../00-libfiles/delay.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  us_count        2    0[COMRAM] unsigned int 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2898 ;;      Params:         2       0       0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0
  2901 ;;      Totals:         2       0       0       0       0       0       0
  2902 ;;Total ram usage:        2 bytes
  2903 ;; Hardware stack levels used:    1
  2904 ;; This function calls:
  2905 ;;		Nothing
  2906 ;; This function is called by:
  2907 ;;		_DELAY_ms
  2908 ;;		_lcd_BusyCheck
  2909 ;;		_lcd_Reset
  2910 ;;		_lcd_SendCmdSignals
  2911 ;;		_lcd_SendDataSignals
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text20
  2916  000E86                     __ptext20:
  2917                           	opt stack 0
  2918  000E86                     _DELAY_us:
  2919                           	opt stack 27
  2920                           
  2921                           ;delay.c: 58: while (us_count != 0)
  2922                           
  2923                           ;incstack = 0
  2924  000E86  D003               	goto	l1227
  2925  000E88                     l1225:
  2926                           
  2927                           ;delay.c: 59: {
  2928                           ;delay.c: 60: us_count--;
  2929  000E88  0611               	decf	DELAY_us@us_count,f,c
  2930  000E8A  A0D8               	btfss	status,0,c
  2931  000E8C  0612               	decf	DELAY_us@us_count+1,f,c
  2932  000E8E                     l1227:
  2933  000E8E  5011               	movf	DELAY_us@us_count,w,c
  2934  000E90  1012               	iorwf	DELAY_us@us_count+1,w,c
  2935  000E92  B4D8               	btfsc	status,2,c
  2936  000E94  0012               	return	
  2937  000E96  D7F8               	goto	l1225
  2938  000E98                     __end_of_DELAY_us:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           prodh	equ	0xFF4
  2945                           prodl	equ	0xFF3
  2946                           postinc0	equ	0xFEE
  2947                           wreg	equ	0xFE8
  2948                           postdec1	equ	0xFE5
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           tblptru	equ	0xFF8
  2955                           tblptrh	equ	0xFF7
  2956                           tblptrl	equ	0xFF6
  2957                           tablat	equ	0xFF5
  2958                           prodh	equ	0xFF4
  2959                           prodl	equ	0xFF3
  2960                           postinc0	equ	0xFEE
  2961                           wreg	equ	0xFE8
  2962                           postdec1	equ	0xFE5
  2963                           fsr1l	equ	0xFE1
  2964                           indf2	equ	0xFDF
  2965                           fsr2h	equ	0xFDA
  2966                           fsr2l	equ	0xFD9
  2967                           status	equ	0xFD8
  2968                           
  2969                           	psect	rparam
  2970  0000                     tblptru	equ	0xFF8
  2971                           tblptrh	equ	0xFF7
  2972                           tblptrl	equ	0xFF6
  2973                           tablat	equ	0xFF5
  2974                           prodh	equ	0xFF4
  2975                           prodl	equ	0xFF3
  2976                           postinc0	equ	0xFEE
  2977                           wreg	equ	0xFE8
  2978                           postdec1	equ	0xFE5
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           fsr2h	equ	0xFDA
  2982                           fsr2l	equ	0xFD9
  2983                           status	equ	0xFD8


Data Sizes:
    Strings     32
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      36
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_LCD_SetUp
    _LCD_SetUp->_GPIO_PinDirection
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayChar->_lcd_DataWrite
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   65556
                  _LCD_DisplayString
                           _LCD_Init
                          _LCD_SetUp
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           11     1     10    2442
                                              5 COMRAM    11     1     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     1      1   40585
                                              8 COMRAM     2     1      1
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    5968
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   22356
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         1     1      0   11211
                                              7 COMRAM     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_DisplayString                                    2     0      2   22529
                                              8 COMRAM     2     0      2
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayChar                                      1     1      0   22356
                                              7 COMRAM     1     1      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_DataWrite                                        1     1      0   11145
                                              6 COMRAM     1     1      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (4) _lcd_SendDataSignals                                  0     0      0    2469
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToNextLine                                     0     0      0   11145
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (2) _LCD_CmdWrite                                         1     1      0   11145
                                              6 COMRAM     1     1      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (3) _lcd_SendLowerNibble                                  1     1      0    1894
                                              5 COMRAM     1     1      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendHigherNibble                                 1     1      0    1894
                                              5 COMRAM     1     1      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_SendCmdSignals                                   0     0      0    2469
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (3) _lcd_BusyCheck                                        1     1      0    4799
                                              5 COMRAM     1     1      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinWrite                                        5     4      1    1806
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (4) _GPIO_PinRead                                         5     5      0     135
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1230
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (3) _DELAY_ms                                             2     0      2     942
                                              2 COMRAM     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (4) _DELAY_us                                             2     0      2     663
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_DisplayString
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_SetUp
     _GPIO_PinDirection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      24       1       28.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      15        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 13 19:28:52 2016

                        ?_LCD_CmdWrite 0011                          ?_LCD_GoToLine 0011  
                          __CFG_BORV$2 000000                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                            __CFG_OSC$HS 000000  
                                  l234 0A98                                    l262 0C24  
                                  l168 0B6E                                    l971 096E  
                                  l963 08F8                                    l965 091C  
                                  l967 0936                                    l975 0990  
                                  l969 0950                                    l977 09B0  
                         __CFG_CPB$OFF 000000                                    u340 0918  
                                  u324 0908                                    u421 096A  
                                  u325 0904                                    u414 0960  
                                  u415 095C                                    u450 098C  
                                  u354 092C                           __CFG_CPD$OFF 000000  
                                  u355 0928                                    u444 097E  
                                  u445 097A                                    u384 0946  
                                  u385 0942                                    u974 07AA  
                                  u975 07A6                                    u984 07C4  
                                  u985 07C0                                    prod 000FF3  
                                  wreg 000FE8                __end_of_LCD_DisplayChar 0E68  
                         __CFG_LVP$OFF 000000                           __CFG_WDT$OFF 000000  
                                 l1303 0E6A                                   l1231 0794  
                                 l1225 0E88                                   l1241 07F0  
                                 l1321 0B12                                   l1227 0E8E  
                                 l1307 0E7C                                   l1243 080C  
                                 l1235 07B4                                   l1253 0868  
                                 l1237 07D0                                   l1317 0B00  
                                 l1255 0884                                   l1247 082C  
                                 l1263 08C0                                   l1271 0654  
                                 l1335 0DA8                                   l1249 0848  
                                 l1273 0670                                   l1361 0E2A  
                                 l1425 09FA                                   l1259 08A4  
                                 l1291 0724                                   l1283 06CC  
                                 l1267 0634                                   l1339 0DB8  
                                 l1427 0A00                                   l1285 06E8  
                                 l1277 0690                                   l1373 0D86  
                                 l1437 0A2C                                   l1295 0744  
                                 l1279 06AC                                   l1289 0708  
                                 l1369 0D76                                   l1473 0DF0  
                                 l1465 0B5C                                   l1299 0760  
                                 l1387 0E52                                   l1459 0B40  
                                 l1477 0E04                                   STR_1 0601  
                                 STR_2 0612                                   u1004 07E6  
                                 u1005 07E2                                   u1014 0800  
                                 u1015 07FC                                   u1104 08B4  
                                 u1105 08B0                                   u1034 0822  
                                 u1035 081E                                   u1044 083C  
                                 u1124 064A                                   u1300 0C30  
                                 u1045 0838                                   u1125 0646  
                                 u1214 06FE                                   u1134 0664  
                                 u1310 0C32                                   u1215 06FA  
                                 u1135 0660                                   u1064 085E  
                                 u1224 0718                                   u1400 0C8E  
                                 u1320 0C42                                   u1065 085A  
                                 u1225 0714                                   u1074 0878  
                                 u1154 0686                                   u1410 0C90  
                                 u1330 0C44                                   u1075 0874  
                                 u1155 0682                                   u1244 073A  
                                 u1164 06A0                                   u1420 0CA0  
                                 u1340 0C54                                   u1245 0736  
                                 u1165 069C                                   _LATA 000F89  
                                 u1094 089A                                   u1254 0754  
                                 u1430 0CA2                                   u1350 0C56  
                                 _LATB 000F8A                                   u1095 0896  
                                 u1255 0750                                   _LATC 000F8B  
                                 u1184 06C2                                   u1440 0CB2  
                                 u1360 0C66                                   _LATD 000F8C  
                                 u1185 06BE                                   _LATE 000F8D  
                                 u1194 06DC                                   u1450 0CB4  
                                 u1370 0C68                                   u1195 06D8  
                                 u1380 0C7C                                   u1390 0C7E  
                                 _main 0BD4                     __size_of_LCD_Clear 000E  
                                 fsr1l 000FE1                                   indf2 000FDF  
                                 fsr2l 000FD9                     __size_of_LCD_SetUp 00C0  
                                 prodl 000FF3                                   start 0000  
                        __CFG_IESO$OFF 000000                       __end_of_DELAY_ms 0E86  
                     __end_of_DELAY_us 0E98                          __CFG_MCLRE$ON 000000  
                         ___param_bank 000010                          ?_GPIO_PinRead 0011  
                       ??_LCD_CmdWrite 0017                            LCD_SetUp@D0 0018  
                          LCD_SetUp@D1 0019                            LCD_SetUp@D2 001A  
                          LCD_SetUp@D3 001B                            LCD_SetUp@D4 001C  
                          LCD_SetUp@D5 001D                            LCD_SetUp@D6 001E  
                          LCD_SetUp@D7 001F                            LCD_SetUp@EN 0017  
                          LCD_SetUp@RS 0020                            LCD_SetUp@RW 0016  
                       ??_LCD_GoToLine 0018                          _GPIO_PinWrite 0622  
                     __end_of_LCD_Init 0B7A                LCD_CmdWrite@v_lcdCmd_u8 0017  
                                ?_main 0011                                  _PORTA 000F80  
                                _PORTB 000F81                                  _PORTC 000F82  
                                _PORTD 000F83                                  _PORTE 000F84  
                                _TRISA 000F92                                  _TRISB 000F93  
                                _TRISC 000F94                                  _TRISD 000F95  
                                _TRISE 000F96                          __CFG_PWRT$OFF 000000  
                        __CFG_WRT0$OFF 000000                          __CFG_WRT1$OFF 000000  
                        __CFG_WRT2$OFF 000000                          __CFG_WRT3$OFF 000000  
                       __CFG_EBTR0$OFF 000000                         __CFG_FCMEN$OFF 000000  
                       __CFG_EBTR1$OFF 000000                         __CFG_EBTR2$OFF 000000  
                       __CFG_EBTR3$OFF 000000                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                       __CFG_EBTRB$OFF 000000  LCD_DisplayString@ptr_stringPointer_u8 0019  
                       __CFG_BOREN$OFF 000000                                  tablat 000FF5  
         __end_of_lcd_SendHigherNibble 0CBE                                  status 000FD8  
                       ??_GPIO_PinRead 0011                        __initialization 0CBE  
           GPIO_PinWrite@enm_pinNumber 0015                           __end_of_main 0C26  
                       ?_GPIO_PinWrite 0011                      _GPIO_PinDirection 0782  
                               ??_main 0021            __size_of_lcd_SendCmdSignals 0036  
                    __end_of_LCD_Clear 0EA6                          __activetblptr 000002  
                   ?_GPIO_PinDirection 0011                      __end_of_LCD_SetUp 0A74  
                     ?_LCD_DisplayChar 0011            LCD_DisplayChar@v_lcdData_u8 0018  
                  ??_GPIO_PinDirection 0012                  lcd_BusyCheck@busyflag 0016  
                       __CFG_XINST$OFF 000000              GPIO_PinRead@enm_pinNumber 0015  
            __end_of_GPIO_PinDirection 08E2                                 clear_0 0CC4  
       GPIO_PinDirection@enm_pinNumber 0015                       DELAY_ms@ms_count 0013  
                         __pdataCOMRAM 0021                           __mediumconst 0000  
                    ?_LCD_GoToNextLine 0011                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
                            ?_DELAY_ms 0013                              ?_DELAY_us 0011  
          __end_of_lcd_SendLowerNibble 0C72                     ??_LCD_GoToNextLine 0018  
                 __end_of_LCD_CmdWrite 0DC4                   __end_of_LCD_GoToLine 0DEE  
          lcd_SendLowerNibble@dataByte 0016                             __accesstop 0080  
              __end_of__initialization 0CEA                              ?_LCD_Init 0019  
                      __CFG_PBADEN$OFF 000000                          ___rparam_used 000001  
                      ??_GPIO_PinWrite 0012                         __pcstackCOMRAM 0011  
                __end_of_lcd_DataWrite 0D92                   _lcd_SendHigherNibble 0C72  
                   __size_of_lcd_Reset 005A           __size_of_lcd_SendDataSignals 0036  
                           ??_DELAY_ms 0015                             ??_DELAY_us 0013  
                 __end_of_GPIO_PinRead 09B4         GPIO_PinWrite@var_portNumber_u8 0014  
                __end_of_lcd_BusyCheck 0B20           lcd_SendHigherNibble@dataByte 0016  
         GPIO_PinWrite@var_pinValue_u8 0011                             ??_LCD_Init 001A  
           __size_of_GPIO_PinDirection 0160                  ?_lcd_SendHigherNibble 0011  
                     DELAY_us@us_count 0011                                __Hparam 0000  
                    __end_of_lcd_Reset 0BD4                                __Lparam 0000  
            LCD_Init@v_lcdNoOfLines_u8 001A                           __psmallconst 0600  
                      __CFG_STVREN$OFF 000000                                __pcinit 0CBE  
                              __ramtop 0600                                __ptext0 0BD4  
                              __ptext1 09B4                                __ptext2 0B20  
                              __ptext3 0B7A                                __ptext4 0E98  
                              __ptext5 0DC4                                __ptext6 0DEE  
                              __ptext7 0E42                                __ptext8 0D60  
                              __ptext9 0CF4                  __size_of_LCD_CmdWrite 0032  
                            _LCDConfig 0001                  __size_of_LCD_GoToLine 002A  
                            _LCD_Clear 0E98                              _LCD_SetUp 09B4  
                 end_of_initialization 0CEA           LCD_Init@v_MaxCharsPerLine_u8 0019  
                        __Lmediumconst 0000                                postdec1 000FE5  
                              postinc0 000FEE                 ??_lcd_SendHigherNibble 0016  
           __end_of_lcd_SendCmdSignals 0D60                           _LCD_CmdWrite 0D92  
                         _LCD_GoToLine 0DC4                  __size_of_GPIO_PinRead 00D2  
                           ?_LCD_Clear 0011                             ?_LCD_SetUp 0016  
                    __size_of_DELAY_ms 001E                      __size_of_DELAY_us 0012  
             __size_of_LCD_DisplayChar 0026                      __size_of_LCD_Init 005A  
            __size_of_LCD_GoToNextLine 002A                    _lcd_SendDataSignals 0CF4  
   GPIO_PinDirection@var_portNumber_u8 0014                           _GPIO_PinRead 08E2  
                        __pidataCOMRAM 0EA6               _ARR_LcdLineNumAddress_U8 0021  
                  start_initialization 0CBE                   ?_lcd_SendDataSignals 0011  
               _v_LcdTrackCursorPos_U8 000F          GPIO_PinRead@var_portNumber_u8 0013  
         __size_of_lcd_SendLowerNibble 004C        GPIO_PinDirection@var_pinDirn_u8 0011  
                __end_of_GPIO_PinWrite 0782                       __CFG_LPT1OSC$OFF 000000  
                ??_lcd_SendDataSignals 0016                   _v_LcdTrackLineNum_U8 0010  
                          __pbssCOMRAM 0001                  lcd_DataWrite@dataByte 0017  
                          ??_LCD_Clear 0019                            ??_LCD_SetUp 0020  
               __size_of_lcd_DataWrite 0032            LCD_GoToLine@v_lineNumber_u8 0018  
                    __CFG_CCP2MX$PORTC 000000                              _lcd_Reset 0B7A  
                    ??_LCD_DisplayChar 0018                 __size_of_lcd_BusyCheck 00AC  
                          __smallconst 0600                      _LCD_DisplayString 0DEE  
                             _DELAY_ms 0E68                               _DELAY_us 0E86  
                   ?_LCD_DisplayString 0019                               _LCD_Init 0B20  
                  ??_LCD_DisplayString 001B                       _LCD_GoToNextLine 0E18  
                     __CFG_WDTPS$32768 000000                             ?_lcd_Reset 0011  
                        _lcd_DataWrite 0D60               GPIO_PinRead@returnStatus 0014  
            __end_of_LCD_DisplayString 0E18                     _lcd_SendCmdSignals 0D2A  
                            copy_data0 0CDE                          _lcd_BusyCheck 0A74  
                  ?_lcd_SendCmdSignals 0011                               __Hrparam 0000  
                             __Lrparam 0000                         ?_lcd_DataWrite 0011  
                 ??_lcd_SendCmdSignals 0016          __size_of_lcd_SendHigherNibble 004C  
                  _lcd_SendLowerNibble 0C26                               __ptext10 0E18  
                             __ptext11 0D92                               __ptext20 0E86  
                             __ptext12 0C26                               __ptext13 0C72  
                             __ptext14 0D2A                               __ptext15 0A74  
                             __ptext16 0622                               __ptext17 08E2  
                             __ptext18 0782                               __ptext19 0E68  
                       ?_lcd_BusyCheck 0011                          __size_of_main 0052  
                 ?_lcd_SendLowerNibble 0011                            ??_lcd_Reset 0017  
           __size_of_LCD_DisplayString 002A                  ??_lcd_SendLowerNibble 0016  
                      _LCD_DisplayChar 0E42                        ??_lcd_DataWrite 0017  
          __end_of_lcd_SendDataSignals 0D2A               __end_of_LCD_GoToNextLine 0E42  
                      ??_lcd_BusyCheck 0016                 __size_of_GPIO_PinWrite 0160  
