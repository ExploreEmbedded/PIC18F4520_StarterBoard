

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 13 19:49:38 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     _ADCON0	set	4034
    22  0000                     _ADCON1	set	4033
    23  0000                     _ADCON2	set	4032
    24  0000                     _ADRESH	set	4036
    25  0000                     _ADRESL	set	4035
    26  0000                     _RCREG	set	4014
    27  0000                     _RCSTA	set	4011
    28  0000                     _SPBRG	set	4015
    29  0000                     _TRISC	set	3988
    30  0000                     _TXREG	set	4013
    31  0000                     _TXSTA	set	4012
    32  0000                     _ADON	set	32272
    33  0000                     _GO	set	32273
    34  0000                     _GO_DONE	set	32273
    35  0000                     _RCIF	set	31989
    36  0000                     _TXIF	set	31988
    37                           
    38                           	psect	smallconst
    39  000600                     __psmallconst:
    40                           	opt stack 0
    41  000600  00                 	db	0
    42  000601                     STR_1:
    43  000601  41                 	db	65	;'A'
    44  000602  44                 	db	68	;'D'
    45  000603  43                 	db	67	;'C'
    46  000604  30                 	db	48	;'0'
    47  000605  20                 	db	32
    48  000606  56                 	db	86	;'V'
    49  000607  61                 	db	97	;'a'
    50  000608  6C                 	db	108	;'l'
    51  000609  75                 	db	117	;'u'
    52  00060A  65                 	db	101	;'e'
    53  00060B  3A                 	db	58	;':'
    54  00060C  25                 	db	37
    55  00060D  34                 	db	52	;'4'
    56  00060E  64                 	db	100	;'d'
    57  00060F  20                 	db	32
    58  000610  0A                 	db	10
    59  000611  0D                 	db	13
    60  000612  00                 	db	0
    61                           
    62                           ; #config settings
    63  000613  00                 	db	0	; dummy byte at the end
    64  0000                     
    65                           	psect	cinit
    66  000CF6                     __pcinit:
    67                           	opt stack 0
    68  000CF6                     start_initialization:
    69                           	opt stack 0
    70  000CF6                     __initialization:
    71                           	opt stack 0
    72  000CF6                     end_of_initialization:
    73                           	opt stack 0
    74  000CF6                     __end_of__initialization:
    75                           	opt stack 0
    76  000CF6  0E00               	movlw	low (__Lmediumconst shr (0+16))
    77  000CF8  6EF8               	movwf	tblptru,c
    78  000CFA  0100               	movlb	0
    79  000CFC  EF0A  F006         	goto	_main	;jump to C main() function
    80                           tblptru	equ	0xFF8
    81                           
    82                           	psect	cstackCOMRAM
    83  000001                     __pcstackCOMRAM:
    84                           	opt stack 0
    85  000001                     ?___lldiv:
    86                           	opt stack 0
    87  000001                     UART_TxChar@v_uartData_u8:
    88                           	opt stack 0
    89  000001                     DELAY_us@us_count:
    90                           	opt stack 0
    91  000001                     ___lldiv@dividend:
    92                           	opt stack 0
    93                           
    94                           ; 4 bytes @ 0x0
    95  000001                     	ds	1
    96  000002                     UART_TxString@ptr_string:
    97                           	opt stack 0
    98                           
    99                           ; 2 bytes @ 0x1
   100  000002                     	ds	1
   101  000003                     ?_ADC_GetAdcValue:
   102                           	opt stack 0
   103                           
   104                           ; 2 bytes @ 0x2
   105  000003                     	ds	1
   106  000004                     
   107                           ; 1 bytes @ 0x3
   108  000004                     	ds	1
   109  000005                     ??_ADC_GetAdcValue:
   110  000005                     ___lldiv@divisor:
   111                           	opt stack 0
   112                           
   113                           ; 4 bytes @ 0x4
   114  000005                     	ds	2
   115  000007                     ADC_GetAdcValue@var_adcChannel_u8:
   116                           	opt stack 0
   117                           
   118                           ; 1 bytes @ 0x6
   119  000007                     	ds	2
   120  000009                     ___lldiv@quotient:
   121                           	opt stack 0
   122                           
   123                           ; 4 bytes @ 0x8
   124  000009                     	ds	4
   125  00000D                     ___lldiv@counter:
   126                           	opt stack 0
   127                           
   128                           ; 1 bytes @ 0xC
   129  00000D                     	ds	1
   130  00000E                     UART_SetBaudRate@v_baudRate_u32:
   131                           	opt stack 0
   132  00000E                     UART_TxNumber@v_number_u32:
   133                           	opt stack 0
   134                           
   135                           ; 4 bytes @ 0xD
   136  00000E                     	ds	4
   137  000012                     ??_UART_SetBaudRate:
   138  000012                     UART_TxNumber@v_numOfDigitsToTransmit_u8:
   139                           	opt stack 0
   140                           
   141                           ; 1 bytes @ 0x11
   142  000012                     	ds	1
   143  000013                     ??_UART_TxNumber:
   144                           
   145                           ; 1 bytes @ 0x12
   146  000013                     	ds	3
   147  000016                     UART_SetBaudRate@RegValue:
   148                           	opt stack 0
   149                           
   150                           ; 1 bytes @ 0x15
   151  000016                     	ds	1
   152  000017                     UART_Init@v_baudRate_u32:
   153                           	opt stack 0
   154                           
   155                           ; 4 bytes @ 0x16
   156  000017                     	ds	4
   157  00001B                     
   158                           ; 1 bytes @ 0x1A
   159  00001B                     	ds	3
   160  00001E                     UART_TxNumber@a:
   161                           	opt stack 0
   162                           
   163                           ; 10 bytes @ 0x1D
   164  00001E                     	ds	10
   165  000028                     _UART_TxNumber$85:
   166                           	opt stack 0
   167                           
   168                           ; 2 bytes @ 0x27
   169  000028                     	ds	2
   170  00002A                     UART_TxNumber@v_numericSystem_u8:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0x29
   174  00002A                     	ds	1
   175  00002B                     UART_TxNumber@i:
   176                           	opt stack 0
   177                           
   178                           ; 1 bytes @ 0x2A
   179  00002B                     	ds	1
   180  00002C                     ?_UART_Printf:
   181                           	opt stack 0
   182  00002C                     UART_Printf@argList:
   183                           	opt stack 0
   184                           
   185                           ; 2 bytes @ 0x2B
   186  00002C                     	ds	4
   187  000030                     UART_Printf@str:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x2F
   191  000030                     	ds	2
   192  000032                     UART_Printf@v_num_s32:
   193                           	opt stack 0
   194                           
   195                           ; 4 bytes @ 0x31
   196  000032                     	ds	4
   197  000036                     UART_Printf@v_num_s16:
   198                           	opt stack 0
   199                           
   200                           ; 2 bytes @ 0x35
   201  000036                     	ds	2
   202  000038                     UART_Printf@v_num_u32:
   203                           	opt stack 0
   204                           
   205                           ; 4 bytes @ 0x37
   206  000038                     	ds	4
   207  00003C                     UART_Printf@v_num_u16:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0x3B
   211  00003C                     	ds	2
   212  00003E                     UART_Printf@ptr:
   213                           	opt stack 0
   214                           
   215                           ; 2 bytes @ 0x3D
   216  00003E                     	ds	2
   217  000040                     UART_Printf@ch:
   218                           	opt stack 0
   219                           
   220                           ; 1 bytes @ 0x3F
   221  000040                     	ds	1
   222  000041                     UART_Printf@v_numOfDigitsToTransmit_u8:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x40
   226  000041                     	ds	1
   227  000042                     UART_Printf@argp:
   228                           	opt stack 0
   229                           
   230                           ; 2 bytes @ 0x41
   231  000042                     	ds	2
   232  000044                     main@adcValue:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x43
   236  000044                     	ds	2
   237                           tblptru	equ	0xFF8
   238                           
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 41 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  adcValue        2   67[COMRAM] int 
   249 ;; Return value:  Size  Location     Type
   250 ;;                  2  177[None  ] int 
   251 ;; Registers used:
   252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   258 ;;      Params:         0       0       0       0       0       0       0
   259 ;;      Locals:         2       0       0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0       0       0
   261 ;;      Totals:         2       0       0       0       0       0       0
   262 ;;Total ram usage:        2 bytes
   263 ;; Hardware stack levels required when called:    3
   264 ;; This function calls:
   265 ;;		_ADC_GetAdcValue
   266 ;;		_ADC_Init
   267 ;;		_UART_Init
   268 ;;		_UART_Printf
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text0
   275  000C14                     __ptext0:
   276                           	opt stack 0
   277  000C14                     _main:
   278                           	opt stack 28
   279                           
   280                           ;main.c: 43: int adcValue;
   281                           ;main.c: 45: ADC_Init();
   282                           
   283                           ;incstack = 0
   284  000C14  EC74  F006         	call	_ADC_Init	;wreg free
   285                           
   286                           ;main.c: 46: UART_Init(9600);
   287  000C18  0E80               	movlw	128
   288  000C1A  6E17               	movwf	UART_Init@v_baudRate_u32,c
   289  000C1C  0E25               	movlw	37
   290  000C1E  6E18               	movwf	UART_Init@v_baudRate_u32+1,c
   291  000C20  0E00               	movlw	0
   292  000C22  6E19               	movwf	UART_Init@v_baudRate_u32+2,c
   293  000C24  0E00               	movlw	0
   294  000C26  6E1A               	movwf	UART_Init@v_baudRate_u32+3,c
   295  000C28  EC53  F006         	call	_UART_Init	;wreg free
   296  000C2C                     l1355:
   297                           
   298                           ;main.c: 49: {
   299                           ;main.c: 50: adcValue = ADC_GetAdcValue(0);
   300  000C2C  0E00               	movlw	0
   301  000C2E  EC28  F006         	call	_ADC_GetAdcValue
   302  000C32  C003  F044         	movff	?_ADC_GetAdcValue,main@adcValue
   303  000C36  C004  F045         	movff	?_ADC_GetAdcValue+1,main@adcValue+1
   304                           
   305                           ;main.c: 51: UART_Printf("ADC0 Value:%4d \n\r",adcValue);
   306  000C3A  0E01               	movlw	low STR_1
   307  000C3C  6E2C               	movwf	UART_Printf@argList,c
   308  000C3E  0E06               	movlw	high STR_1
   309  000C40  6E2D               	movwf	UART_Printf@argList+1,c
   310  000C42  C044  F02E         	movff	main@adcValue,?_UART_Printf+2
   311  000C46  C045  F02F         	movff	main@adcValue+1,?_UART_Printf+3
   312  000C4A  EC0A  F003         	call	_UART_Printf	;wreg free
   313  000C4E  D7EE               	goto	l1355
   314  000C50                     __end_of_main:
   315                           	opt stack 0
   316                           tblptru	equ	0xFF8
   317                           
   318 ;; *************** function _UART_Printf *****************
   319 ;; Defined at:
   320 ;;		line 413 in file "../00-libfiles/uart.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;  argList         2   43[COMRAM] PTR const unsigned char 
   323 ;;		 -> STR_1(18), 
   324 ;; Auto vars:     Size  Location     Type
   325 ;;  v_num_u32       4   55[COMRAM] unsigned long 
   326 ;;  v_num_s32       4   49[COMRAM] long 
   327 ;;  argp            2   65[COMRAM] PTR void [1]
   328 ;;		 -> ?_UART_Printf(1), 
   329 ;;  ptr             2   61[COMRAM] PTR const unsigned char 
   330 ;;		 -> STR_1(18), 
   331 ;;  v_num_u16       2   59[COMRAM] unsigned int 
   332 ;;  v_num_s16       2   53[COMRAM] int 
   333 ;;  str             2   47[COMRAM] PTR unsigned char 
   334 ;;  v_numOfDigit    1   64[COMRAM] unsigned char 
   335 ;;  ch              1   63[COMRAM] unsigned char 
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   345 ;;      Params:         4       0       0       0       0       0       0
   346 ;;      Locals:        20       0       0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0       0       0
   348 ;;      Totals:        24       0       0       0       0       0       0
   349 ;;Total ram usage:       24 bytes
   350 ;; Hardware stack levels used:    1
   351 ;; Hardware stack levels required when called:    2
   352 ;; This function calls:
   353 ;;		_UART_TxChar
   354 ;;		_UART_TxNumber
   355 ;;		_UART_TxString
   356 ;; This function is called by:
   357 ;;		_main
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text1
   362  000614                     __ptext1:
   363                           	opt stack 0
   364  000614                     _UART_Printf:
   365                           	opt stack 28
   366                           
   367                           ;uart.c: 415: const char *ptr;
   368                           ;uart.c: 416: va_list argp;
   369                           ;uart.c: 417: sint16_t v_num_s16;
   370                           ;uart.c: 418: sint32_t v_num_s32;
   371                           ;uart.c: 419: uint16_t v_num_u16;
   372                           ;uart.c: 420: uint32_t v_num_u32;
   373                           ;uart.c: 421: char *str;
   374                           ;uart.c: 422: char ch;
   375                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
   376                           ;uart.c: 429: *argp = __va_start();
   377                           
   378                           ;incstack = 0
   379  000614  0E2E               	movlw	low (?_UART_Printf+2)
   380  000616  6E42               	movwf	UART_Printf@argp,c
   381  000618  0E00               	movlw	high (?_UART_Printf+2)
   382  00061A  6E43               	movwf	UART_Printf@argp+1,c
   383                           
   384                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
   385  00061C  C02C  F03E         	movff	UART_Printf@argList,UART_Printf@ptr
   386  000620  C02D  F03F         	movff	UART_Printf@argList+1,UART_Printf@ptr+1
   387  000624  D189               	goto	l1321
   388  000626                     l1207:
   389                           
   390                           ;uart.c: 433: {
   391                           ;uart.c: 435: ch= *ptr;
   392  000626  C03E  FFF6         	movff	UART_Printf@ptr,tblptrl
   393  00062A  C03F  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   394  00062E                     	if	0	;tblptru may be non-zero
   395  00062E                     	endif
   396  00062E                     	if	0	;tblptru may be non-zero
   397  00062E                     	endif
   398  00062E  0008               	tblrd		*
   399  000630  CFF5 F040          	movff	tablat,UART_Printf@ch
   400                           
   401                           ;uart.c: 436: if(ch == '%')
   402  000634  0E25               	movlw	37
   403  000636  1840               	xorwf	UART_Printf@ch,w,c
   404  000638  A4D8               	btfss	status,2,c
   405  00063A  D179               	goto	l1317
   406                           
   407                           ;uart.c: 437: {
   408                           ;uart.c: 438: ptr++;
   409  00063C  4A3E               	infsnz	UART_Printf@ptr,f,c
   410  00063E  2A3F               	incf	UART_Printf@ptr+1,f,c
   411                           
   412                           ;uart.c: 439: ch = *ptr;
   413  000640  C03E  FFF6         	movff	UART_Printf@ptr,tblptrl
   414  000644  C03F  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   415  000648                     	if	0	;tblptru may be non-zero
   416  000648                     	endif
   417  000648                     	if	0	;tblptru may be non-zero
   418  000648                     	endif
   419  000648  0008               	tblrd		*
   420  00064A  CFF5 F040          	movff	tablat,UART_Printf@ch
   421                           
   422                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
   423  00064E  0E2F               	movlw	47
   424  000650  6440               	cpfsgt	UART_Printf@ch,c
   425  000652  D01C               	goto	l137
   426  000654  0E3A               	movlw	58
   427  000656  6040               	cpfslt	UART_Printf@ch,c
   428  000658  D019               	goto	l137
   429                           
   430                           ;uart.c: 441: {
   431                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
   432  00065A  0E00               	movlw	0
   433  00065C  6E41               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   434                           
   435                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
   436  00065E  D00F               	goto	l1227
   437  000660                     l1221:
   438                           
   439                           ;uart.c: 444: {
   440                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
   441  000660  5041               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   442  000662  0D0A               	mullw	10
   443  000664  50F3               	movf	prodl,w,c
   444  000666  2440               	addwf	UART_Printf@ch,w,c
   445  000668  0FD0               	addlw	208
   446  00066A  6E41               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   447                           
   448                           ;uart.c: 446: ptr++;
   449  00066C  4A3E               	infsnz	UART_Printf@ptr,f,c
   450  00066E  2A3F               	incf	UART_Printf@ptr+1,f,c
   451                           
   452                           ;uart.c: 447: ch = *ptr;
   453  000670  C03E  FFF6         	movff	UART_Printf@ptr,tblptrl
   454  000674  C03F  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   455  000678                     	if	0	;tblptru may be non-zero
   456  000678                     	endif
   457  000678                     	if	0	;tblptru may be non-zero
   458  000678                     	endif
   459  000678  0008               	tblrd		*
   460  00067A  CFF5 F040          	movff	tablat,UART_Printf@ch
   461  00067E                     l1227:
   462  00067E  0E2F               	movlw	47
   463  000680  6440               	cpfsgt	UART_Printf@ch,c
   464  000682  D126               	goto	l1315
   465  000684  0E39               	movlw	57
   466  000686  6440               	cpfsgt	UART_Printf@ch,c
   467  000688  D7EB               	goto	l1221
   468  00068A  D122               	goto	l1315
   469  00068C                     l137:
   470                           
   471                           ;uart.c: 450: else
   472                           ;uart.c: 451: {
   473                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
   474  00068C  6841               	setf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   475                           
   476                           ;uart.c: 453: }
   477                           ;uart.c: 456: switch(ch)
   478  00068E  D120               	goto	l1315
   479  000690                     l1231:
   480                           
   481                           ;uart.c: 459: case 'c':
   482                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
   483  000690  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   484  000694  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   485  000698  50DF               	movf	indf2,w,c
   486  00069A  6E40               	movwf	UART_Printf@ch,c
   487  00069C  0E02               	movlw	2
   488  00069E  2642               	addwf	UART_Printf@argp,f,c
   489  0006A0  0E00               	movlw	0
   490  0006A2  2243               	addwfc	UART_Printf@argp+1,f,c
   491                           
   492                           ;uart.c: 461: UART_TxChar(ch);
   493  0006A4  5040               	movf	UART_Printf@ch,w,c
   494  0006A6  EC6D  F006         	call	_UART_TxChar
   495                           
   496                           ;uart.c: 462: break;
   497  0006AA  D144               	goto	l1319
   498  0006AC                     l1237:
   499                           
   500                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   501  0006AC  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   502  0006B0  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   503  0006B4  CFDE F036          	movff	postinc2,UART_Printf@v_num_s16
   504  0006B8  CFDD F037          	movff	postdec2,UART_Printf@v_num_s16+1
   505  0006BC  0E02               	movlw	2
   506  0006BE  2642               	addwf	UART_Printf@argp,f,c
   507  0006C0  0E00               	movlw	0
   508  0006C2  2243               	addwfc	UART_Printf@argp+1,f,c
   509                           
   510                           ;uart.c: 466: if(v_num_s16<0)
   511  0006C4  AE37               	btfss	UART_Printf@v_num_s16+1,7,c
   512  0006C6  D007               	goto	l1247
   513                           
   514                           ;uart.c: 467: {
   515                           ;uart.c: 468: v_num_s16 = -v_num_s16;
   516  0006C8  6C36               	negf	UART_Printf@v_num_s16,c
   517  0006CA  1E37               	comf	UART_Printf@v_num_s16+1,f,c
   518  0006CC  B0D8               	btfsc	status,0,c
   519  0006CE  2A37               	incf	UART_Printf@v_num_s16+1,f,c
   520                           
   521                           ;uart.c: 469: UART_TxChar('-');
   522  0006D0  0E2D               	movlw	45
   523  0006D2  EC6D  F006         	call	_UART_TxChar
   524  0006D6                     l1247:
   525                           
   526                           ;uart.c: 470: }
   527                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
   528  0006D6  C036  F00E         	movff	UART_Printf@v_num_s16,UART_TxNumber@v_number_u32
   529  0006DA  C037  F00F         	movff	UART_Printf@v_num_s16+1,UART_TxNumber@v_number_u32+1
   530  0006DE  0E00               	movlw	0
   531  0006E0  BE0F               	btfsc	UART_TxNumber@v_number_u32+1,7,c
   532  0006E2  0EFF               	movlw	-1
   533  0006E4  6E10               	movwf	UART_TxNumber@v_number_u32+2,c
   534  0006E6  6E11               	movwf	UART_TxNumber@v_number_u32+3,c
   535  0006E8  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   536  0006EC  0E0A               	movlw	10
   537  0006EE  ECA6  F004         	call	_UART_TxNumber
   538                           
   539                           ;uart.c: 472: break;
   540  0006F2  D120               	goto	l1319
   541  0006F4                     l1249:
   542                           
   543                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   544  0006F4  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   545  0006F8  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   546  0006FC  CFDE F032          	movff	postinc2,UART_Printf@v_num_s32
   547  000700  CFDE F033          	movff	postinc2,UART_Printf@v_num_s32+1
   548  000704  CFDE F034          	movff	postinc2,UART_Printf@v_num_s32+2
   549  000708  CFDE F035          	movff	postinc2,UART_Printf@v_num_s32+3
   550  00070C  0E04               	movlw	4
   551  00070E  2642               	addwf	UART_Printf@argp,f,c
   552  000710  0E00               	movlw	0
   553  000712  2243               	addwfc	UART_Printf@argp+1,f,c
   554                           
   555                           ;uart.c: 476: if(v_num_s32<0)
   556  000714  AE35               	btfss	UART_Printf@v_num_s32+3,7,c
   557  000716  D00B               	goto	l1259
   558                           
   559                           ;uart.c: 477: {
   560                           ;uart.c: 478: v_num_s32 = -v_num_s32;
   561  000718  1E35               	comf	UART_Printf@v_num_s32+3,f,c
   562  00071A  1E34               	comf	UART_Printf@v_num_s32+2,f,c
   563  00071C  1E33               	comf	UART_Printf@v_num_s32+1,f,c
   564  00071E  6C32               	negf	UART_Printf@v_num_s32,c
   565  000720  0E00               	movlw	0
   566  000722  2233               	addwfc	UART_Printf@v_num_s32+1,f,c
   567  000724  2234               	addwfc	UART_Printf@v_num_s32+2,f,c
   568  000726  2235               	addwfc	UART_Printf@v_num_s32+3,f,c
   569                           
   570                           ;uart.c: 479: UART_TxChar('-');
   571  000728  0E2D               	movlw	45
   572  00072A  EC6D  F006         	call	_UART_TxChar
   573  00072E                     l1259:
   574                           
   575                           ;uart.c: 480: }
   576                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
   577  00072E  C032  F00E         	movff	UART_Printf@v_num_s32,UART_TxNumber@v_number_u32
   578  000732  C033  F00F         	movff	UART_Printf@v_num_s32+1,UART_TxNumber@v_number_u32+1
   579  000736  C034  F010         	movff	UART_Printf@v_num_s32+2,UART_TxNumber@v_number_u32+2
   580  00073A  C035  F011         	movff	UART_Printf@v_num_s32+3,UART_TxNumber@v_number_u32+3
   581  00073E  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   582  000742  0E0A               	movlw	10
   583  000744  ECA6  F004         	call	_UART_TxNumber
   584                           
   585                           ;uart.c: 482: break;
   586  000748  D0F5               	goto	l1319
   587  00074A                     l1261:
   588                           
   589                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   590  00074A  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   591  00074E  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   592  000752  CFDE F03C          	movff	postinc2,UART_Printf@v_num_u16
   593  000756  CFDD F03D          	movff	postdec2,UART_Printf@v_num_u16+1
   594  00075A  0E02               	movlw	2
   595  00075C  2642               	addwf	UART_Printf@argp,f,c
   596  00075E  0E00               	movlw	0
   597  000760  2243               	addwfc	UART_Printf@argp+1,f,c
   598                           
   599                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
   600  000762  C03C  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   601  000766  C03D  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   602  00076A  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   603  00076C  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   604  00076E  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   605  000772  0E0A               	movlw	10
   606  000774  ECA6  F004         	call	_UART_TxNumber
   607                           
   608                           ;uart.c: 487: break;
   609  000778  D0DD               	goto	l1319
   610  00077A                     l1267:
   611                           
   612                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   613  00077A  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   614  00077E  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   615  000782  CFDE F038          	movff	postinc2,UART_Printf@v_num_u32
   616  000786  CFDE F039          	movff	postinc2,UART_Printf@v_num_u32+1
   617  00078A  CFDE F03A          	movff	postinc2,UART_Printf@v_num_u32+2
   618  00078E  CFDE F03B          	movff	postinc2,UART_Printf@v_num_u32+3
   619  000792  0E04               	movlw	4
   620  000794  2642               	addwf	UART_Printf@argp,f,c
   621  000796  0E00               	movlw	0
   622  000798  2243               	addwfc	UART_Printf@argp+1,f,c
   623                           
   624                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
   625  00079A  C038  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
   626  00079E  C039  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
   627  0007A2  C03A  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
   628  0007A6  C03B  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
   629  0007AA  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   630  0007AE  0E0A               	movlw	10
   631  0007B0  ECA6  F004         	call	_UART_TxNumber
   632                           
   633                           ;uart.c: 492: break;
   634  0007B4  D0BF               	goto	l1319
   635  0007B6                     l1273:
   636                           
   637                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   638  0007B6  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   639  0007BA  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   640  0007BE  CFDE F03C          	movff	postinc2,UART_Printf@v_num_u16
   641  0007C2  CFDD F03D          	movff	postdec2,UART_Printf@v_num_u16+1
   642  0007C6  0E02               	movlw	2
   643  0007C8  2642               	addwf	UART_Printf@argp,f,c
   644  0007CA  0E00               	movlw	0
   645  0007CC  2243               	addwfc	UART_Printf@argp+1,f,c
   646                           
   647                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
   648  0007CE  C03C  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   649  0007D2  C03D  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   650  0007D6  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   651  0007D8  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   652  0007DA  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   653  0007DE  0E10               	movlw	16
   654  0007E0  ECA6  F004         	call	_UART_TxNumber
   655                           
   656                           ;uart.c: 497: break;
   657  0007E4  D0A7               	goto	l1319
   658  0007E6                     l1279:
   659                           
   660                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   661  0007E6  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   662  0007EA  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   663  0007EE  CFDE F038          	movff	postinc2,UART_Printf@v_num_u32
   664  0007F2  CFDE F039          	movff	postinc2,UART_Printf@v_num_u32+1
   665  0007F6  CFDE F03A          	movff	postinc2,UART_Printf@v_num_u32+2
   666  0007FA  CFDE F03B          	movff	postinc2,UART_Printf@v_num_u32+3
   667  0007FE  0E04               	movlw	4
   668  000800  2642               	addwf	UART_Printf@argp,f,c
   669  000802  0E00               	movlw	0
   670  000804  2243               	addwfc	UART_Printf@argp+1,f,c
   671                           
   672                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
   673  000806  C038  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
   674  00080A  C039  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
   675  00080E  C03A  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
   676  000812  C03B  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
   677  000816  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   678  00081A  0E10               	movlw	16
   679  00081C  ECA6  F004         	call	_UART_TxNumber
   680                           
   681                           ;uart.c: 502: break;
   682  000820  D089               	goto	l1319
   683  000822                     l1285:
   684                           
   685                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   686  000822  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   687  000826  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   688  00082A  CFDE F03C          	movff	postinc2,UART_Printf@v_num_u16
   689  00082E  CFDD F03D          	movff	postdec2,UART_Printf@v_num_u16+1
   690  000832  0E02               	movlw	2
   691  000834  2642               	addwf	UART_Printf@argp,f,c
   692  000836  0E00               	movlw	0
   693  000838  2243               	addwfc	UART_Printf@argp+1,f,c
   694                           
   695                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
   696  00083A  2841               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   697  00083C  A4D8               	btfss	status,2,c
   698  00083E  D002               	goto	l1293
   699                           
   700                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
   701  000840  0E10               	movlw	16
   702  000842  6E41               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   703  000844                     l1293:
   704                           
   705                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
   706  000844  C03C  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   707  000848  C03D  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   708  00084C  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   709  00084E  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   710  000850  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   711  000854  0E02               	movlw	2
   712  000856  ECA6  F004         	call	_UART_TxNumber
   713                           
   714                           ;uart.c: 512: break;
   715  00085A  D06C               	goto	l1319
   716  00085C                     l1295:
   717                           
   718                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   719  00085C  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   720  000860  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   721  000864  CFDE F038          	movff	postinc2,UART_Printf@v_num_u32
   722  000868  CFDE F039          	movff	postinc2,UART_Printf@v_num_u32+1
   723  00086C  CFDE F03A          	movff	postinc2,UART_Printf@v_num_u32+2
   724  000870  CFDE F03B          	movff	postinc2,UART_Printf@v_num_u32+3
   725  000874  0E04               	movlw	4
   726  000876  2642               	addwf	UART_Printf@argp,f,c
   727  000878  0E00               	movlw	0
   728  00087A  2243               	addwfc	UART_Printf@argp+1,f,c
   729                           
   730                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
   731  00087C  2841               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   732  00087E  A4D8               	btfss	status,2,c
   733  000880  D002               	goto	l1303
   734                           
   735                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
   736  000882  0E20               	movlw	32
   737  000884  6E41               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   738  000886                     l1303:
   739                           
   740                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
   741  000886  C038  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
   742  00088A  C039  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
   743  00088E  C03A  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
   744  000892  C03B  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
   745  000896  C041  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   746  00089A  0E02               	movlw	2
   747  00089C  ECA6  F004         	call	_UART_TxNumber
   748                           
   749                           ;uart.c: 525: case 'f':
   750                           ;uart.c: 530: break;
   751                           
   752                           ;uart.c: 524: case 'F':
   753                           
   754                           ;uart.c: 521: break;
   755  0008A0  D049               	goto	l1319
   756  0008A2                     l1305:
   757                           
   758                           ;uart.c: 534: case 's':
   759                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
   760  0008A2  C042  FFD9         	movff	UART_Printf@argp,fsr2l
   761  0008A6  C043  FFDA         	movff	UART_Printf@argp+1,fsr2h
   762  0008AA  CFDE F030          	movff	postinc2,UART_Printf@str
   763  0008AE  CFDD F031          	movff	postdec2,UART_Printf@str+1
   764  0008B2  0E02               	movlw	2
   765  0008B4  2642               	addwf	UART_Printf@argp,f,c
   766  0008B6  0E00               	movlw	0
   767  0008B8  2243               	addwfc	UART_Printf@argp+1,f,c
   768                           
   769                           ;uart.c: 536: UART_TxString(str);
   770  0008BA  C030  F002         	movff	UART_Printf@str,UART_TxString@ptr_string
   771  0008BE  C031  F003         	movff	UART_Printf@str+1,UART_TxString@ptr_string+1
   772  0008C2  EC41  F006         	call	_UART_TxString	;wreg free
   773                           
   774                           ;uart.c: 537: break;
   775  0008C6  D036               	goto	l1319
   776  0008C8                     l1311:
   777                           
   778                           ;uart.c: 540: UART_TxChar('%');
   779  0008C8  0E25               	movlw	37
   780  0008CA  EC6D  F006         	call	_UART_TxChar
   781                           
   782                           ;uart.c: 542: }
   783                           
   784                           ;uart.c: 541: break;
   785  0008CE  D032               	goto	l1319
   786  0008D0                     l1315:
   787  0008D0  5040               	movf	UART_Printf@ch,w,c
   788                           
   789                           ; Switch size 1, requested type "space"
   790                           ; Number of cases is 15, Range of values is 37 to 120
   791                           ; switch strategies available:
   792                           ; Name         Instructions Cycles
   793                           ; simple_byte           46    24 (average)
   794                           ;	Chosen strategy is simple_byte
   795  0008D2  0A25               	xorlw	37	; case 37
   796  0008D4  B4D8               	btfsc	status,2,c
   797  0008D6  D7F8               	goto	l1311
   798  0008D8  0A67               	xorlw	103	; case 66
   799  0008DA  B4D8               	btfsc	status,2,c
   800  0008DC  D7BF               	goto	l1295
   801  0008DE  0A01               	xorlw	1	; case 67
   802  0008E0  B4D8               	btfsc	status,2,c
   803  0008E2  D6D6               	goto	l1231
   804  0008E4  0A07               	xorlw	7	; case 68
   805  0008E6  B4D8               	btfsc	status,2,c
   806  0008E8  D705               	goto	l1249
   807  0008EA  0A02               	xorlw	2	; case 70
   808  0008EC  B4D8               	btfsc	status,2,c
   809  0008EE  D022               	goto	l1319
   810  0008F0  0A15               	xorlw	21	; case 83
   811  0008F2  B4D8               	btfsc	status,2,c
   812  0008F4  D7D6               	goto	l1305
   813  0008F6  0A06               	xorlw	6	; case 85
   814  0008F8  B4D8               	btfsc	status,2,c
   815  0008FA  D73F               	goto	l1267
   816  0008FC  0A0D               	xorlw	13	; case 88
   817  0008FE  B4D8               	btfsc	status,2,c
   818  000900  D772               	goto	l1279
   819  000902  0A3A               	xorlw	58	; case 98
   820  000904  B4D8               	btfsc	status,2,c
   821  000906  D78D               	goto	l1285
   822  000908  0A01               	xorlw	1	; case 99
   823  00090A  B4D8               	btfsc	status,2,c
   824  00090C  D6C1               	goto	l1231
   825  00090E  0A07               	xorlw	7	; case 100
   826  000910  B4D8               	btfsc	status,2,c
   827  000912  D6CC               	goto	l1237
   828  000914  0A02               	xorlw	2	; case 102
   829  000916  B4D8               	btfsc	status,2,c
   830  000918  D00D               	goto	l1319
   831  00091A  0A15               	xorlw	21	; case 115
   832  00091C  B4D8               	btfsc	status,2,c
   833  00091E  D7C1               	goto	l1305
   834  000920  0A06               	xorlw	6	; case 117
   835  000922  B4D8               	btfsc	status,2,c
   836  000924  D712               	goto	l1261
   837  000926  0A0D               	xorlw	13	; case 120
   838  000928  B4D8               	btfsc	status,2,c
   839  00092A  D745               	goto	l1273
   840                           
   841                           ;uart.c: 543: }
   842  00092C  D003               	goto	l1319
   843  00092E                     l1317:
   844                           
   845                           ;uart.c: 544: else
   846                           ;uart.c: 545: {
   847                           ;uart.c: 547: UART_TxChar(ch);
   848  00092E  5040               	movf	UART_Printf@ch,w,c
   849  000930  EC6D  F006         	call	_UART_TxChar
   850  000934                     l1319:
   851  000934  4A3E               	infsnz	UART_Printf@ptr,f,c
   852  000936  2A3F               	incf	UART_Printf@ptr+1,f,c
   853  000938                     l1321:
   854  000938  C03E  FFF6         	movff	UART_Printf@ptr,tblptrl
   855  00093C  C03F  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   856  000940                     	if	0	;tblptru may be non-zero
   857  000940                     	endif
   858  000940                     	if	0	;tblptru may be non-zero
   859  000940                     	endif
   860  000940  0008               	tblrd		*
   861  000942  50F5               	movf	tablat,w,c
   862  000944  0900               	iorlw	0
   863  000946  B4D8               	btfsc	status,2,c
   864  000948  0012               	return	
   865  00094A  D66D               	goto	l1207
   866  00094C                     __end_of_UART_Printf:
   867                           	opt stack 0
   868                           tblptru	equ	0xFF8
   869                           tblptrh	equ	0xFF7
   870                           tblptrl	equ	0xFF6
   871                           tablat	equ	0xFF5
   872                           prodl	equ	0xFF3
   873                           indf2	equ	0xFDF
   874                           postinc2	equ	0xFDE
   875                           postdec2	equ	0xFDD
   876                           fsr2h	equ	0xFDA
   877                           fsr2l	equ	0xFD9
   878                           status	equ	0xFD8
   879                           
   880 ;; *************** function _UART_TxString *****************
   881 ;; Defined at:
   882 ;;		line 169 in file "../00-libfiles/uart.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  ptr_string      2    1[COMRAM] PTR const unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;		None
   887 ;; Return value:  Size  Location     Type
   888 ;;                  1    wreg      void 
   889 ;; Registers used:
   890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   896 ;;      Params:         2       0       0       0       0       0       0
   897 ;;      Locals:         0       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0
   899 ;;      Totals:         2       0       0       0       0       0       0
   900 ;;Total ram usage:        2 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    1
   903 ;; This function calls:
   904 ;;		_UART_TxChar
   905 ;; This function is called by:
   906 ;;		_UART_Printf
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text2
   911  000C82                     __ptext2:
   912                           	opt stack 0
   913  000C82                     _UART_TxString:
   914                           	opt stack 28
   915                           
   916                           ;uart.c: 171: while(*ptr_string)
   917                           
   918                           ;incstack = 0
   919  000C82  D009               	goto	l1129
   920  000C84                     l1125:
   921                           
   922                           ;uart.c: 172: UART_TxChar(*ptr_string++);
   923  000C84  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
   924  000C88  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
   925  000C8C  50DF               	movf	indf2,w,c
   926  000C8E  EC6D  F006         	call	_UART_TxChar
   927  000C92  4A02               	infsnz	UART_TxString@ptr_string,f,c
   928  000C94  2A03               	incf	UART_TxString@ptr_string+1,f,c
   929  000C96                     l1129:
   930  000C96  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
   931  000C9A  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
   932  000C9E  50DF               	movf	indf2,w,c
   933  000CA0  B4D8               	btfsc	status,2,c
   934  000CA2  0012               	return	
   935  000CA4  D7EF               	goto	l1125
   936  000CA6                     __end_of_UART_TxString:
   937                           	opt stack 0
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           prodl	equ	0xFF3
   943                           indf2	equ	0xFDF
   944                           postinc2	equ	0xFDE
   945                           postdec2	equ	0xFDD
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950 ;; *************** function _UART_TxNumber *****************
   951 ;; Defined at:
   952 ;;		line 260 in file "../00-libfiles/uart.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  v_numericSys    1    wreg     unsigned char 
   955 ;;  v_number_u32    4   13[COMRAM] unsigned long 
   956 ;;  v_numOfDigit    1   17[COMRAM] unsigned char 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  v_numericSys    1   41[COMRAM] unsigned char 
   959 ;;  a              10   29[COMRAM] unsigned char [10]
   960 ;;  i               1   42[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         5       0       0       0       0       0       0
   971 ;;      Locals:        14       0       0       0       0       0       0
   972 ;;      Temps:         11       0       0       0       0       0       0
   973 ;;      Totals:        30       0       0       0       0       0       0
   974 ;;Total ram usage:       30 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    1
   977 ;; This function calls:
   978 ;;		_UART_TxChar
   979 ;;		___lldiv
   980 ;; This function is called by:
   981 ;;		_UART_Printf
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text3
   986  00094C                     __ptext3:
   987                           	opt stack 0
   988  00094C                     _UART_TxNumber:
   989                           	opt stack 28
   990                           
   991                           ;incstack = 0
   992                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
   993  00094C  6E2A               	movwf	UART_TxNumber@v_numericSystem_u8,c
   994                           
   995                           ;uart.c: 262: uint8_t i=0,a[10];
   996  00094E  0E00               	movlw	0
   997  000950  6E2B               	movwf	UART_TxNumber@i,c
   998                           
   999                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  1000  000952  0E02               	movlw	2
  1001  000954  182A               	xorwf	UART_TxNumber@v_numericSystem_u8,w,c
  1002  000956  B4D8               	btfsc	status,2,c
  1003  000958  D034               	goto	l1143
  1004  00095A  D037               	goto	l1145
  1005  00095C                     l1137:
  1006                           
  1007                           ;uart.c: 267: {
  1008                           ;uart.c: 270: i = (((v_number_u32)&(((uint8_t)1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u
      +                          );
  1009  00095C  C012  F013         	movff	UART_TxNumber@v_numOfDigitsToTransmit_u8,??_UART_TxNumber
  1010  000960  0EFF               	movlw	-1
  1011  000962  2613               	addwf	??_UART_TxNumber,f,c
  1012  000964  0E01               	movlw	1
  1013  000966  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  1014  000968  0E00               	movlw	0
  1015  00096A  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  1016  00096C  2A13               	incf	??_UART_TxNumber,f,c
  1017  00096E  D003               	goto	u504
  1018  000970                     u505:
  1019  000970  90D8               	bcf	status,0,c
  1020  000972  3614               	rlcf	??_UART_TxNumber+1,f,c
  1021  000974  3615               	rlcf	??_UART_TxNumber+2,f,c
  1022  000976                     u504:
  1023  000976  2E13               	decfsz	??_UART_TxNumber,f,c
  1024  000978  D7FB               	goto	u505
  1025  00097A  C014  F016         	movff	??_UART_TxNumber+1,??_UART_TxNumber+3
  1026  00097E  C015  F017         	movff	??_UART_TxNumber+2,??_UART_TxNumber+4
  1027  000982  0E00               	movlw	0
  1028  000984  BE17               	btfsc	(??_UART_TxNumber+4)& (0+255),7,c
  1029  000986  0EFF               	movlw	255
  1030  000988  6E18               	movwf	(??_UART_TxNumber+5)& (0+255),c
  1031  00098A  6E19               	movwf	(??_UART_TxNumber+6)& (0+255),c
  1032  00098C  500E               	movf	UART_TxNumber@v_number_u32,w,c
  1033  00098E  1416               	andwf	??_UART_TxNumber+3,w,c
  1034  000990  6E1A               	movwf	(??_UART_TxNumber+7)& (0+255),c
  1035  000992  500F               	movf	UART_TxNumber@v_number_u32+1,w,c
  1036  000994  1417               	andwf	??_UART_TxNumber+4,w,c
  1037  000996  6E1B               	movwf	(??_UART_TxNumber+8)& (0+255),c
  1038  000998  5010               	movf	UART_TxNumber@v_number_u32+2,w,c
  1039  00099A  1418               	andwf	??_UART_TxNumber+5,w,c
  1040  00099C  6E1C               	movwf	(??_UART_TxNumber+9)& (0+255),c
  1041  00099E  5011               	movf	UART_TxNumber@v_number_u32+3,w,c
  1042  0009A0  1419               	andwf	??_UART_TxNumber+6,w,c
  1043  0009A2  6E1D               	movwf	(??_UART_TxNumber+10)& (0+255),c
  1044  0009A4  501A               	movf	??_UART_TxNumber+7,w,c
  1045  0009A6  101B               	iorwf	??_UART_TxNumber+8,w,c
  1046  0009A8  101C               	iorwf	??_UART_TxNumber+9,w,c
  1047  0009AA  101D               	iorwf	??_UART_TxNumber+10,w,c
  1048  0009AC  B4D8               	btfsc	status,2,c
  1049  0009AE  D002               	goto	u510
  1050  0009B0  0E01               	movlw	1
  1051  0009B2  D001               	goto	u520
  1052  0009B4                     u510:
  1053  0009B4  0E00               	movlw	0
  1054  0009B6                     u520:
  1055  0009B6  6E2B               	movwf	UART_TxNumber@i,c
  1056                           
  1057                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  1058  0009B8  502B               	movf	UART_TxNumber@i,w,c
  1059  0009BA  0F30               	addlw	48
  1060  0009BC  EC6D  F006         	call	_UART_TxChar
  1061                           
  1062                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  1063  0009C0  0612               	decf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f,c
  1064  0009C2                     l1143:
  1065  0009C2  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  1066  0009C4  B4D8               	btfsc	status,2,c
  1067  0009C6  0012               	return	
  1068  0009C8  D7C9               	goto	l1137
  1069  0009CA                     l1145:
  1070                           
  1071                           ;uart.c: 275: else if(v_number_u32==0)
  1072  0009CA  500E               	movf	UART_TxNumber@v_number_u32,w,c
  1073  0009CC  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  1074  0009CE  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  1075  0009D0  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  1076  0009D2  A4D8               	btfss	status,2,c
  1077  0009D4  D004               	goto	l1149
  1078                           
  1079                           ;uart.c: 276: {
  1080                           ;uart.c: 280: UART_TxChar('0');
  1081  0009D6  0E30               	movlw	48
  1082  0009D8  EC6D  F006         	call	_UART_TxChar
  1083                           
  1084                           ;uart.c: 281: }
  1085  0009DC  0012               	return	
  1086  0009DE                     l1149:
  1087                           
  1088                           ;uart.c: 282: else
  1089                           ;uart.c: 283: {
  1090                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  1091  0009DE  0E00               	movlw	0
  1092  0009E0  6E2B               	movwf	UART_TxNumber@i,c
  1093  0009E2  D04D               	goto	l1167
  1094  0009E4                     l1151:
  1095                           
  1096                           ;uart.c: 285: {
  1097                           ;uart.c: 288: if(v_number_u32!=0)
  1098  0009E4  500E               	movf	UART_TxNumber@v_number_u32,w,c
  1099  0009E6  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  1100  0009E8  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  1101  0009EA  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  1102  0009EC  B4D8               	btfsc	status,2,c
  1103  0009EE  D035               	goto	l1157
  1104                           
  1105                           ;uart.c: 289: {
  1106                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  1107  0009F0  502B               	movf	UART_TxNumber@i,w,c
  1108  0009F2  0D01               	mullw	1
  1109  0009F4  0E1E               	movlw	low UART_TxNumber@a
  1110  0009F6  24F3               	addwf	prodl,w,c
  1111  0009F8  6ED9               	movwf	fsr2l,c
  1112  0009FA  0E00               	movlw	high UART_TxNumber@a
  1113  0009FC  20F4               	addwfc	prodh,w,c
  1114  0009FE  6EDA               	movwf	fsr2h,c
  1115  000A00  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  1116  000A04  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  1117  000A08  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  1118  000A0C  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  1119  000A10  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  1120  000A12  6E05               	movwf	___lldiv@divisor,c
  1121  000A14  6A06               	clrf	___lldiv@divisor+1,c
  1122  000A16  6A07               	clrf	___lldiv@divisor+2,c
  1123  000A18  6A08               	clrf	___lldiv@divisor+3,c
  1124  000A1A  EC8E  F005         	call	___lldiv	;wreg free
  1125  000A1E  5001               	movf	?___lldiv,w,c
  1126  000A20  022A               	mulwf	UART_TxNumber@v_numericSystem_u8,c
  1127  000A22  50F3               	movf	prodl,w,c
  1128  000A24  0800               	sublw	0
  1129  000A26  240E               	addwf	UART_TxNumber@v_number_u32,w,c
  1130  000A28  6EDF               	movwf	indf2,c
  1131                           
  1132                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  1133  000A2A  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  1134  000A2E  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  1135  000A32  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  1136  000A36  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  1137  000A3A  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  1138  000A3C  6E05               	movwf	___lldiv@divisor,c
  1139  000A3E  6A06               	clrf	___lldiv@divisor+1,c
  1140  000A40  6A07               	clrf	___lldiv@divisor+2,c
  1141  000A42  6A08               	clrf	___lldiv@divisor+3,c
  1142  000A44  EC8E  F005         	call	___lldiv	;wreg free
  1143  000A48  C001  F00E         	movff	?___lldiv,UART_TxNumber@v_number_u32
  1144  000A4C  C002  F00F         	movff	?___lldiv+1,UART_TxNumber@v_number_u32+1
  1145  000A50  C003  F010         	movff	?___lldiv+2,UART_TxNumber@v_number_u32+2
  1146  000A54  C004  F011         	movff	?___lldiv+3,UART_TxNumber@v_number_u32+3
  1147                           
  1148                           ;uart.c: 298: }
  1149  000A58  D011               	goto	l1165
  1150  000A5A                     l1157:
  1151                           
  1152                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  1153                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  1154  000A5A  2812               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  1155  000A5C  B4D8               	btfsc	status,2,c
  1156  000A5E  D05A               	goto	l1179
  1157  000A60  0E0A               	movlw	10
  1158  000A62  6412               	cpfsgt	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  1159  000A64  D001               	goto	l1163
  1160  000A66  D056               	goto	l1179
  1161  000A68                     l1163:
  1162                           
  1163                           ;uart.c: 306: else
  1164                           ;uart.c: 307: {
  1165                           ;uart.c: 311: a[i]=0;
  1166  000A68  502B               	movf	UART_TxNumber@i,w,c
  1167  000A6A  0D01               	mullw	1
  1168  000A6C  0E1E               	movlw	low UART_TxNumber@a
  1169  000A6E  24F3               	addwf	prodl,w,c
  1170  000A70  6ED9               	movwf	fsr2l,c
  1171  000A72  0E00               	movlw	high UART_TxNumber@a
  1172  000A74  20F4               	addwfc	prodh,w,c
  1173  000A76  6EDA               	movwf	fsr2h,c
  1174  000A78  0E00               	movlw	0
  1175  000A7A  6EDF               	movwf	indf2,c
  1176  000A7C                     l1165:
  1177  000A7C  2A2B               	incf	UART_TxNumber@i,f,c
  1178  000A7E                     l1167:
  1179  000A7E  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  1180  000A80  5C2B               	subwf	UART_TxNumber@i,w,c
  1181  000A82  B0D8               	btfsc	status,0,c
  1182  000A84  D047               	goto	l1179
  1183  000A86  D7AE               	goto	l1151
  1184  000A88                     l1169:
  1185                           
  1186                           ;uart.c: 316: {
  1187                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  1188  000A88  0EFF               	movlw	255
  1189  000A8A  6E13               	movwf	??_UART_TxNumber& (0+255),c
  1190  000A8C  0EFF               	movlw	255
  1191  000A8E  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  1192  000A90  502B               	movf	UART_TxNumber@i,w,c
  1193  000A92  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  1194  000A94  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  1195  000A96  5013               	movf	??_UART_TxNumber,w,c
  1196  000A98  2615               	addwf	??_UART_TxNumber+2,f,c
  1197  000A9A  5014               	movf	??_UART_TxNumber+1,w,c
  1198  000A9C  2216               	addwfc	??_UART_TxNumber+3,f,c
  1199  000A9E  0E1E               	movlw	low UART_TxNumber@a
  1200  000AA0  2415               	addwf	??_UART_TxNumber+2,w,c
  1201  000AA2  6ED9               	movwf	fsr2l,c
  1202  000AA4  0E00               	movlw	high UART_TxNumber@a
  1203  000AA6  2016               	addwfc	??_UART_TxNumber+3,w,c
  1204  000AA8  6EDA               	movwf	fsr2h,c
  1205  000AAA  0E0A               	movlw	10
  1206  000AAC  60DF               	cpfslt	indf2,c
  1207  000AAE  D015               	goto	l1173
  1208  000AB0  0EFF               	movlw	255
  1209  000AB2  6E13               	movwf	??_UART_TxNumber& (0+255),c
  1210  000AB4  0EFF               	movlw	255
  1211  000AB6  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  1212  000AB8  502B               	movf	UART_TxNumber@i,w,c
  1213  000ABA  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  1214  000ABC  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  1215  000ABE  5013               	movf	??_UART_TxNumber,w,c
  1216  000AC0  2615               	addwf	??_UART_TxNumber+2,f,c
  1217  000AC2  5014               	movf	??_UART_TxNumber+1,w,c
  1218  000AC4  2216               	addwfc	??_UART_TxNumber+3,f,c
  1219  000AC6  0E1E               	movlw	low UART_TxNumber@a
  1220  000AC8  2415               	addwf	??_UART_TxNumber+2,w,c
  1221  000ACA  6ED9               	movwf	fsr2l,c
  1222  000ACC  0E00               	movlw	high UART_TxNumber@a
  1223  000ACE  2016               	addwfc	??_UART_TxNumber+3,w,c
  1224  000AD0  6EDA               	movwf	fsr2h,c
  1225  000AD2  50DF               	movf	indf2,w,c
  1226  000AD4  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  1227  000AD6  0E30               	movlw	48
  1228  000AD8  D014               	goto	L1
  1229  000ADA                     l1173:
  1230  000ADA  0EFF               	movlw	255
  1231  000ADC  6E13               	movwf	??_UART_TxNumber& (0+255),c
  1232  000ADE  0EFF               	movlw	255
  1233  000AE0  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  1234  000AE2  502B               	movf	UART_TxNumber@i,w,c
  1235  000AE4  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  1236  000AE6  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  1237  000AE8  5013               	movf	??_UART_TxNumber,w,c
  1238  000AEA  2615               	addwf	??_UART_TxNumber+2,f,c
  1239  000AEC  5014               	movf	??_UART_TxNumber+1,w,c
  1240  000AEE  2216               	addwfc	??_UART_TxNumber+3,f,c
  1241  000AF0  0E1E               	movlw	low UART_TxNumber@a
  1242  000AF2  2415               	addwf	??_UART_TxNumber+2,w,c
  1243  000AF4  6ED9               	movwf	fsr2l,c
  1244  000AF6  0E00               	movlw	high UART_TxNumber@a
  1245  000AF8  2016               	addwfc	??_UART_TxNumber+3,w,c
  1246  000AFA  6EDA               	movwf	fsr2h,c
  1247  000AFC  50DF               	movf	indf2,w,c
  1248  000AFE  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  1249  000B00  0E37               	movlw	55
  1250  000B02                     L1:
  1251  000B02  2417               	addwf	??_UART_TxNumber+4,w,c
  1252  000B04  6E28               	movwf	_UART_TxNumber$85,c
  1253  000B06  6A29               	clrf	_UART_TxNumber$85+1,c
  1254  000B08  0E00               	movlw	0
  1255  000B0A  2229               	addwfc	_UART_TxNumber$85+1,f,c
  1256  000B0C  5028               	movf	_UART_TxNumber$85,w,c
  1257  000B0E  EC6D  F006         	call	_UART_TxChar
  1258                           
  1259                           ;uart.c: 319: i--;
  1260  000B12  062B               	decf	UART_TxNumber@i,f,c
  1261  000B14                     l1179:
  1262  000B14  502B               	movf	UART_TxNumber@i,w,c
  1263  000B16  B4D8               	btfsc	status,2,c
  1264  000B18  0012               	return	
  1265  000B1A  D7B6               	goto	l1169
  1266  000B1C                     __end_of_UART_TxNumber:
  1267                           	opt stack 0
  1268                           tblptru	equ	0xFF8
  1269                           tblptrh	equ	0xFF7
  1270                           tblptrl	equ	0xFF6
  1271                           tablat	equ	0xFF5
  1272                           prodh	equ	0xFF4
  1273                           prodl	equ	0xFF3
  1274                           indf2	equ	0xFDF
  1275                           postinc2	equ	0xFDE
  1276                           postdec2	equ	0xFDD
  1277                           fsr2h	equ	0xFDA
  1278                           fsr2l	equ	0xFD9
  1279                           status	equ	0xFD8
  1280                           
  1281 ;; *************** function _UART_TxChar *****************
  1282 ;; Defined at:
  1283 ;;		line 145 in file "../00-libfiles/uart.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  v_uartData_u    1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  v_uartData_u    1    0[COMRAM] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1297 ;;      Params:         0       0       0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0
  1300 ;;      Totals:         1       0       0       0       0       0       0
  1301 ;;Total ram usage:        1 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_UART_TxString
  1307 ;;		_UART_TxNumber
  1308 ;;		_UART_Printf
  1309 ;;		_UART_RxString
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text4
  1314  000CDA                     __ptext4:
  1315                           	opt stack 0
  1316  000CDA                     _UART_TxChar:
  1317                           	opt stack 28
  1318                           
  1319                           ;incstack = 0
  1320                           ;UART_TxChar@v_uartData_u8 stored from wreg
  1321  000CDA  6E01               	movwf	UART_TxChar@v_uartData_u8,c
  1322  000CDC                     l84:
  1323  000CDC  A89E               	btfss	3998,4,c	;volatile
  1324  000CDE  D7FE               	goto	l84
  1325                           
  1326                           ;uart.c: 148: TXIF=0;
  1327  000CE0  989E               	bcf	3998,4,c	;volatile
  1328                           
  1329                           ;uart.c: 149: TXREG=v_uartData_u8;
  1330  000CE2  C001  FFAD         	movff	UART_TxChar@v_uartData_u8,4013	;volatile
  1331  000CE6  0012               	return		;funcret
  1332  000CE8                     __end_of_UART_TxChar:
  1333                           	opt stack 0
  1334                           tblptru	equ	0xFF8
  1335                           tblptrh	equ	0xFF7
  1336                           tblptrl	equ	0xFF6
  1337                           tablat	equ	0xFF5
  1338                           prodh	equ	0xFF4
  1339                           prodl	equ	0xFF3
  1340                           indf2	equ	0xFDF
  1341                           postinc2	equ	0xFDE
  1342                           postdec2	equ	0xFDD
  1343                           fsr2h	equ	0xFDA
  1344                           fsr2l	equ	0xFD9
  1345                           status	equ	0xFD8
  1346                           
  1347 ;; *************** function _UART_Init *****************
  1348 ;; Defined at:
  1349 ;;		line 66 in file "../00-libfiles/uart.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  v_baudRate_u    4   22[COMRAM] unsigned long 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;		None
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1363 ;;      Params:         4       0       0       0       0       0       0
  1364 ;;      Locals:         0       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0
  1366 ;;      Totals:         4       0       0       0       0       0       0
  1367 ;;Total ram usage:        4 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    2
  1370 ;; This function calls:
  1371 ;;		_UART_SetBaudRate
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           	psect	text5
  1378  000CA6                     __ptext5:
  1379                           	opt stack 0
  1380  000CA6                     _UART_Init:
  1381                           	opt stack 28
  1382                           
  1383                           ;uart.c: 68: TRISC=0x80;
  1384                           
  1385                           ;incstack = 0
  1386  000CA6  0E80               	movlw	128
  1387  000CA8  6E94               	movwf	3988,c	;volatile
  1388                           
  1389                           ;uart.c: 69: TXSTA=0x20;
  1390  000CAA  0E20               	movlw	32
  1391  000CAC  6EAC               	movwf	4012,c	;volatile
  1392                           
  1393                           ;uart.c: 70: RCSTA=0x90;
  1394  000CAE  0E90               	movlw	144
  1395  000CB0  6EAB               	movwf	4011,c	;volatile
  1396                           
  1397                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  1398  000CB2  C017  F00E         	movff	UART_Init@v_baudRate_u32,UART_SetBaudRate@v_baudRate_u32
  1399  000CB6  C018  F00F         	movff	UART_Init@v_baudRate_u32+1,UART_SetBaudRate@v_baudRate_u32+1
  1400  000CBA  C019  F010         	movff	UART_Init@v_baudRate_u32+2,UART_SetBaudRate@v_baudRate_u32+2
  1401  000CBE  C01A  F011         	movff	UART_Init@v_baudRate_u32+3,UART_SetBaudRate@v_baudRate_u32+3
  1402  000CC2  ECCF  F005         	call	_UART_SetBaudRate	;wreg free
  1403  000CC6  0012               	return		;funcret
  1404  000CC8                     __end_of_UART_Init:
  1405                           	opt stack 0
  1406                           tblptru	equ	0xFF8
  1407                           tblptrh	equ	0xFF7
  1408                           tblptrl	equ	0xFF6
  1409                           tablat	equ	0xFF5
  1410                           prodh	equ	0xFF4
  1411                           prodl	equ	0xFF3
  1412                           indf2	equ	0xFDF
  1413                           postinc2	equ	0xFDE
  1414                           postdec2	equ	0xFDD
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           status	equ	0xFD8
  1418                           
  1419 ;; *************** function _UART_SetBaudRate *****************
  1420 ;; Defined at:
  1421 ;;		line 91 in file "../00-libfiles/uart.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  v_baudRate_u    4   13[COMRAM] unsigned long 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  RegValue        1   21[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1435 ;;      Params:         4       0       0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0       0       0
  1437 ;;      Temps:          4       0       0       0       0       0       0
  1438 ;;      Totals:         9       0       0       0       0       0       0
  1439 ;;Total ram usage:        9 bytes
  1440 ;; Hardware stack levels used:    1
  1441 ;; Hardware stack levels required when called:    1
  1442 ;; This function calls:
  1443 ;;		___lldiv
  1444 ;; This function is called by:
  1445 ;;		_UART_Init
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text6
  1450  000B9E                     __ptext6:
  1451                           	opt stack 0
  1452  000B9E                     _UART_SetBaudRate:
  1453                           	opt stack 28
  1454                           
  1455                           ;uart.c: 93: uint8_t RegValue;
  1456                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  1457                           
  1458                           ;incstack = 0
  1459  000B9E  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  1460  000BA0  1010               	iorwf	UART_SetBaudRate@v_baudRate_u32+2,w,c
  1461  000BA2  E106               	bnz	u450
  1462  000BA4  0E60               	movlw	96
  1463  000BA6  5C0E               	subwf	UART_SetBaudRate@v_baudRate_u32,w,c
  1464  000BA8  0E09               	movlw	9
  1465  000BAA  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  1466  000BAC  A0D8               	btfss	status,0,c
  1467  000BAE  D02D               	goto	l1119
  1468  000BB0                     u450:
  1469  000BB0  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  1470  000BB2  E12B               	bnz	l1119
  1471  000BB4  040E               	decf	UART_SetBaudRate@v_baudRate_u32,w,c
  1472  000BB6  0EC2               	movlw	194
  1473  000BB8  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  1474  000BBA  0E01               	movlw	1
  1475  000BBC  5810               	subwfb	UART_SetBaudRate@v_baudRate_u32+2,w,c
  1476  000BBE  B0D8               	btfsc	status,0,c
  1477  000BC0  D024               	goto	l1119
  1478                           
  1479                           ;uart.c: 96: {
  1480                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  1481  000BC2  0E00               	movlw	0
  1482  000BC4  6E01               	movwf	___lldiv@dividend,c
  1483  000BC6  0E2D               	movlw	45
  1484  000BC8  6E02               	movwf	___lldiv@dividend+1,c
  1485  000BCA  0E31               	movlw	49
  1486  000BCC  6E03               	movwf	___lldiv@dividend+2,c
  1487  000BCE  0E01               	movlw	1
  1488  000BD0  6E04               	movwf	___lldiv@dividend+3,c
  1489  000BD2  C00E  F012         	movff	UART_SetBaudRate@v_baudRate_u32,??_UART_SetBaudRate
  1490  000BD6  C00F  F013         	movff	UART_SetBaudRate@v_baudRate_u32+1,??_UART_SetBaudRate+1
  1491  000BDA  C010  F014         	movff	UART_SetBaudRate@v_baudRate_u32+2,??_UART_SetBaudRate+2
  1492  000BDE  C011  F015         	movff	UART_SetBaudRate@v_baudRate_u32+3,??_UART_SetBaudRate+3
  1493  000BE2  0E06               	movlw	6
  1494  000BE4                     u475:
  1495  000BE4  90D8               	bcf	status,0,c
  1496  000BE6  3612               	rlcf	??_UART_SetBaudRate,f,c
  1497  000BE8  3613               	rlcf	??_UART_SetBaudRate+1,f,c
  1498  000BEA  3614               	rlcf	??_UART_SetBaudRate+2,f,c
  1499  000BEC  3615               	rlcf	??_UART_SetBaudRate+3,f,c
  1500  000BEE  2EE8               	decfsz	wreg,f,c
  1501  000BF0  D7F9               	goto	u475
  1502  000BF2  C012  F005         	movff	??_UART_SetBaudRate,___lldiv@divisor
  1503  000BF6  C013  F006         	movff	??_UART_SetBaudRate+1,___lldiv@divisor+1
  1504  000BFA  C014  F007         	movff	??_UART_SetBaudRate+2,___lldiv@divisor+2
  1505  000BFE  C015  F008         	movff	??_UART_SetBaudRate+3,___lldiv@divisor+3
  1506  000C02  EC8E  F005         	call	___lldiv	;wreg free
  1507  000C06  0401               	decf	?___lldiv,w,c
  1508  000C08  D001               	goto	L2
  1509  000C0A                     l1119:
  1510                           
  1511                           ;uart.c: 101: else
  1512                           ;uart.c: 102: {
  1513                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  1514  000C0A  0E1F               	movlw	31
  1515  000C0C                     L2:
  1516  000C0C  6E16               	movwf	UART_SetBaudRate@RegValue,c
  1517                           
  1518                           ;uart.c: 105: }
  1519                           ;uart.c: 107: SPBRG = RegValue;
  1520  000C0E  C016  FFAF         	movff	UART_SetBaudRate@RegValue,4015	;volatile
  1521  000C12  0012               	return		;funcret
  1522  000C14                     __end_of_UART_SetBaudRate:
  1523                           	opt stack 0
  1524                           tblptru	equ	0xFF8
  1525                           tblptrh	equ	0xFF7
  1526                           tblptrl	equ	0xFF6
  1527                           tablat	equ	0xFF5
  1528                           prodh	equ	0xFF4
  1529                           prodl	equ	0xFF3
  1530                           wreg	equ	0xFE8
  1531                           indf2	equ	0xFDF
  1532                           postinc2	equ	0xFDE
  1533                           postdec2	equ	0xFDD
  1534                           fsr2h	equ	0xFDA
  1535                           fsr2l	equ	0xFD9
  1536                           status	equ	0xFD8
  1537                           
  1538 ;; *************** function ___lldiv *****************
  1539 ;; Defined at:
  1540 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  dividend        4    0[COMRAM] unsigned long 
  1543 ;;  divisor         4    4[COMRAM] unsigned long 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  quotient        4    8[COMRAM] unsigned long 
  1546 ;;  counter         1   12[COMRAM] unsigned char 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  4    0[COMRAM] unsigned long 
  1549 ;; Registers used:
  1550 ;;		wreg, status,2, status,0
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1556 ;;      Params:         8       0       0       0       0       0       0
  1557 ;;      Locals:         5       0       0       0       0       0       0
  1558 ;;      Temps:          0       0       0       0       0       0       0
  1559 ;;      Totals:        13       0       0       0       0       0       0
  1560 ;;Total ram usage:       13 bytes
  1561 ;; Hardware stack levels used:    1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_UART_SetBaudRate
  1566 ;;		_UART_TxNumber
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           	psect	text7
  1571  000B1C                     __ptext7:
  1572                           	opt stack 0
  1573  000B1C                     ___lldiv:
  1574                           	opt stack 28
  1575                           
  1576                           ;incstack = 0
  1577  000B1C  0E00               	movlw	0
  1578  000B1E  6E09               	movwf	___lldiv@quotient,c
  1579  000B20  0E00               	movlw	0
  1580  000B22  6E0A               	movwf	___lldiv@quotient+1,c
  1581  000B24  0E00               	movlw	0
  1582  000B26  6E0B               	movwf	___lldiv@quotient+2,c
  1583  000B28  0E00               	movlw	0
  1584  000B2A  6E0C               	movwf	___lldiv@quotient+3,c
  1585  000B2C  5005               	movf	___lldiv@divisor,w,c
  1586  000B2E  1006               	iorwf	___lldiv@divisor+1,w,c
  1587  000B30  1007               	iorwf	___lldiv@divisor+2,w,c
  1588  000B32  1008               	iorwf	___lldiv@divisor+3,w,c
  1589  000B34  B4D8               	btfsc	status,2,c
  1590  000B36  D02A               	goto	l531
  1591  000B38  0E01               	movlw	1
  1592  000B3A  6E0D               	movwf	___lldiv@counter,c
  1593  000B3C  D006               	goto	l1093
  1594  000B3E                     l1091:
  1595  000B3E  90D8               	bcf	status,0,c
  1596  000B40  3605               	rlcf	___lldiv@divisor,f,c
  1597  000B42  3606               	rlcf	___lldiv@divisor+1,f,c
  1598  000B44  3607               	rlcf	___lldiv@divisor+2,f,c
  1599  000B46  3608               	rlcf	___lldiv@divisor+3,f,c
  1600  000B48  2A0D               	incf	___lldiv@counter,f,c
  1601  000B4A                     l1093:
  1602  000B4A  AE08               	btfss	___lldiv@divisor+3,7,c
  1603  000B4C  D7F8               	goto	l1091
  1604  000B4E                     l1095:
  1605  000B4E  90D8               	bcf	status,0,c
  1606  000B50  3609               	rlcf	___lldiv@quotient,f,c
  1607  000B52  360A               	rlcf	___lldiv@quotient+1,f,c
  1608  000B54  360B               	rlcf	___lldiv@quotient+2,f,c
  1609  000B56  360C               	rlcf	___lldiv@quotient+3,f,c
  1610  000B58  5005               	movf	___lldiv@divisor,w,c
  1611  000B5A  5C01               	subwf	___lldiv@dividend,w,c
  1612  000B5C  5006               	movf	___lldiv@divisor+1,w,c
  1613  000B5E  5802               	subwfb	___lldiv@dividend+1,w,c
  1614  000B60  5007               	movf	___lldiv@divisor+2,w,c
  1615  000B62  5803               	subwfb	___lldiv@dividend+2,w,c
  1616  000B64  5008               	movf	___lldiv@divisor+3,w,c
  1617  000B66  5804               	subwfb	___lldiv@dividend+3,w,c
  1618  000B68  A0D8               	btfss	status,0,c
  1619  000B6A  D009               	goto	l1103
  1620  000B6C  5005               	movf	___lldiv@divisor,w,c
  1621  000B6E  5E01               	subwf	___lldiv@dividend,f,c
  1622  000B70  5006               	movf	___lldiv@divisor+1,w,c
  1623  000B72  5A02               	subwfb	___lldiv@dividend+1,f,c
  1624  000B74  5007               	movf	___lldiv@divisor+2,w,c
  1625  000B76  5A03               	subwfb	___lldiv@dividend+2,f,c
  1626  000B78  5008               	movf	___lldiv@divisor+3,w,c
  1627  000B7A  5A04               	subwfb	___lldiv@dividend+3,f,c
  1628  000B7C  8009               	bsf	___lldiv@quotient,0,c
  1629  000B7E                     l1103:
  1630  000B7E  90D8               	bcf	status,0,c
  1631  000B80  3208               	rrcf	___lldiv@divisor+3,f,c
  1632  000B82  3207               	rrcf	___lldiv@divisor+2,f,c
  1633  000B84  3206               	rrcf	___lldiv@divisor+1,f,c
  1634  000B86  3205               	rrcf	___lldiv@divisor,f,c
  1635  000B88  2E0D               	decfsz	___lldiv@counter,f,c
  1636  000B8A  D7E1               	goto	l1095
  1637  000B8C                     l531:
  1638  000B8C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  1639  000B90  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  1640  000B94  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  1641  000B98  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  1642  000B9C  0012               	return		;funcret
  1643  000B9E                     __end_of___lldiv:
  1644                           	opt stack 0
  1645                           tblptru	equ	0xFF8
  1646                           tblptrh	equ	0xFF7
  1647                           tblptrl	equ	0xFF6
  1648                           tablat	equ	0xFF5
  1649                           prodh	equ	0xFF4
  1650                           prodl	equ	0xFF3
  1651                           wreg	equ	0xFE8
  1652                           indf2	equ	0xFDF
  1653                           postinc2	equ	0xFDE
  1654                           postdec2	equ	0xFDD
  1655                           fsr2h	equ	0xFDA
  1656                           fsr2l	equ	0xFD9
  1657                           status	equ	0xFD8
  1658                           
  1659 ;; *************** function _ADC_Init *****************
  1660 ;; Defined at:
  1661 ;;		line 54 in file "../00-libfiles/adc.c"
  1662 ;; Parameters:    Size  Location     Type
  1663 ;;		None
  1664 ;; Auto vars:     Size  Location     Type
  1665 ;;		None
  1666 ;; Return value:  Size  Location     Type
  1667 ;;                  1    wreg      void 
  1668 ;; Registers used:
  1669 ;;		wreg, status,2
  1670 ;; Tracked objects:
  1671 ;;		On entry : 0/0
  1672 ;;		On exit  : 0/0
  1673 ;;		Unchanged: 0/0
  1674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1675 ;;      Params:         0       0       0       0       0       0       0
  1676 ;;      Locals:         0       0       0       0       0       0       0
  1677 ;;      Temps:          0       0       0       0       0       0       0
  1678 ;;      Totals:         0       0       0       0       0       0       0
  1679 ;;Total ram usage:        0 bytes
  1680 ;; Hardware stack levels used:    1
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_main
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text8
  1689  000CE8                     __ptext8:
  1690                           	opt stack 0
  1691  000CE8                     _ADC_Init:
  1692                           	opt stack 30
  1693                           
  1694                           ;adc.c: 56: ADCON0 = 0x00;
  1695                           
  1696                           ;incstack = 0
  1697  000CE8  0E00               	movlw	0
  1698  000CEA  6EC2               	movwf	4034,c	;volatile
  1699                           
  1700                           ;adc.c: 57: ADCON1 = 0x00;
  1701  000CEC  0E00               	movlw	0
  1702  000CEE  6EC1               	movwf	4033,c	;volatile
  1703                           
  1704                           ;adc.c: 58: ADCON2 = 0x82;
  1705  000CF0  0E82               	movlw	130
  1706  000CF2  6EC0               	movwf	4032,c	;volatile
  1707  000CF4  0012               	return		;funcret
  1708  000CF6                     __end_of_ADC_Init:
  1709                           	opt stack 0
  1710                           tblptru	equ	0xFF8
  1711                           tblptrh	equ	0xFF7
  1712                           tblptrl	equ	0xFF6
  1713                           tablat	equ	0xFF5
  1714                           prodh	equ	0xFF4
  1715                           prodl	equ	0xFF3
  1716                           wreg	equ	0xFE8
  1717                           indf2	equ	0xFDF
  1718                           postinc2	equ	0xFDE
  1719                           postdec2	equ	0xFDD
  1720                           fsr2h	equ	0xFDA
  1721                           fsr2l	equ	0xFD9
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _ADC_GetAdcValue *****************
  1725 ;; Defined at:
  1726 ;;		line 76 in file "../00-libfiles/adc.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  var_adcChann    1    wreg     unsigned char 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  var_adcChann    1    6[COMRAM] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2    2[COMRAM] unsigned int 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1740 ;;      Params:         2       0       0       0       0       0       0
  1741 ;;      Locals:         1       0       0       0       0       0       0
  1742 ;;      Temps:          2       0       0       0       0       0       0
  1743 ;;      Totals:         5       0       0       0       0       0       0
  1744 ;;Total ram usage:        5 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    1
  1747 ;; This function calls:
  1748 ;;		_DELAY_us
  1749 ;; This function is called by:
  1750 ;;		_main
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           	psect	text9
  1755  000C50                     __ptext9:
  1756                           	opt stack 0
  1757  000C50                     _ADC_GetAdcValue:
  1758                           	opt stack 29
  1759                           
  1760                           ;incstack = 0
  1761                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  1762  000C50  6E07               	movwf	ADC_GetAdcValue@var_adcChannel_u8,c
  1763                           
  1764                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<2);
  1765  000C52  4407               	rlncf	ADC_GetAdcValue@var_adcChannel_u8,w,c
  1766  000C54  46E8               	rlncf	wreg,f,c
  1767  000C56  0BFC               	andlw	252
  1768  000C58  6EC2               	movwf	4034,c	;volatile
  1769                           
  1770                           ;adc.c: 80: ADON = 1;
  1771  000C5A  80C2               	bsf	4034,0,c	;volatile
  1772                           
  1773                           ;adc.c: 81: DELAY_us(10);
  1774  000C5C  0E00               	movlw	0
  1775  000C5E  6E02               	movwf	DELAY_us@us_count+1,c
  1776  000C60  0E0A               	movlw	10
  1777  000C62  6E01               	movwf	DELAY_us@us_count,c
  1778  000C64  EC64  F006         	call	_DELAY_us	;wreg free
  1779                           
  1780                           ;adc.c: 83: GO=1;
  1781  000C68  82C2               	bsf	4034,1,c	;volatile
  1782  000C6A                     l42:
  1783  000C6A  B2C2               	btfsc	4034,1,c	;volatile
  1784  000C6C  D7FE               	goto	l42
  1785                           
  1786                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  1787  000C6E  50C4               	movf	4036,w,c	;volatile
  1788  000C70  6E06               	movwf	(??_ADC_GetAdcValue+1)& (0+255),c
  1789  000C72  6A05               	clrf	??_ADC_GetAdcValue& (0+255),c
  1790  000C74  50C3               	movf	4035,w,c	;volatile
  1791  000C76  2405               	addwf	??_ADC_GetAdcValue,w,c
  1792  000C78  6E03               	movwf	?_ADC_GetAdcValue,c
  1793  000C7A  0E00               	movlw	0
  1794  000C7C  2006               	addwfc	??_ADC_GetAdcValue+1,w,c
  1795  000C7E  6E04               	movwf	?_ADC_GetAdcValue+1,c
  1796  000C80  0012               	return	
  1797  000C82                     __end_of_ADC_GetAdcValue:
  1798                           	opt stack 0
  1799                           tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           prodh	equ	0xFF4
  1804                           prodl	equ	0xFF3
  1805                           wreg	equ	0xFE8
  1806                           indf2	equ	0xFDF
  1807                           postinc2	equ	0xFDE
  1808                           postdec2	equ	0xFDD
  1809                           fsr2h	equ	0xFDA
  1810                           fsr2l	equ	0xFD9
  1811                           status	equ	0xFD8
  1812                           
  1813 ;; *************** function _DELAY_us *****************
  1814 ;; Defined at:
  1815 ;;		line 56 in file "../00-libfiles/delay.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  us_count        2    0[COMRAM] unsigned int 
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		wreg, status,2, status,0
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1829 ;;      Params:         2       0       0       0       0       0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0
  1831 ;;      Temps:          0       0       0       0       0       0       0
  1832 ;;      Totals:         2       0       0       0       0       0       0
  1833 ;;Total ram usage:        2 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; This function calls:
  1836 ;;		Nothing
  1837 ;; This function is called by:
  1838 ;;		_ADC_GetAdcValue
  1839 ;;		_DELAY_ms
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	text10
  1844  000CC8                     __ptext10:
  1845                           	opt stack 0
  1846  000CC8                     _DELAY_us:
  1847                           	opt stack 29
  1848                           
  1849                           ;delay.c: 58: while (us_count != 0)
  1850                           
  1851                           ;incstack = 0
  1852  000CC8  D003               	goto	l1111
  1853  000CCA                     l1109:
  1854                           
  1855                           ;delay.c: 59: {
  1856                           ;delay.c: 60: us_count--;
  1857  000CCA  0601               	decf	DELAY_us@us_count,f,c
  1858  000CCC  A0D8               	btfss	status,0,c
  1859  000CCE  0602               	decf	DELAY_us@us_count+1,f,c
  1860  000CD0                     l1111:
  1861  000CD0  5001               	movf	DELAY_us@us_count,w,c
  1862  000CD2  1002               	iorwf	DELAY_us@us_count+1,w,c
  1863  000CD4  B4D8               	btfsc	status,2,c
  1864  000CD6  0012               	return	
  1865  000CD8  D7F8               	goto	l1109
  1866  000CDA                     __end_of_DELAY_us:
  1867                           	opt stack 0
  1868                           tblptru	equ	0xFF8
  1869                           tblptrh	equ	0xFF7
  1870                           tblptrl	equ	0xFF6
  1871                           tablat	equ	0xFF5
  1872                           prodh	equ	0xFF4
  1873                           prodl	equ	0xFF3
  1874                           wreg	equ	0xFE8
  1875                           indf2	equ	0xFDF
  1876                           postinc2	equ	0xFDE
  1877                           postdec2	equ	0xFDD
  1878                           fsr2h	equ	0xFDA
  1879                           fsr2l	equ	0xFD9
  1880                           status	equ	0xFD8
  1881                           tblptru	equ	0xFF8
  1882                           tblptrh	equ	0xFF7
  1883                           tblptrl	equ	0xFF6
  1884                           tablat	equ	0xFF5
  1885                           prodh	equ	0xFF4
  1886                           prodl	equ	0xFF3
  1887                           wreg	equ	0xFE8
  1888                           indf2	equ	0xFDF
  1889                           postinc2	equ	0xFDE
  1890                           postdec2	equ	0xFDD
  1891                           fsr2h	equ	0xFDA
  1892                           fsr2l	equ	0xFD9
  1893                           status	equ	0xFD8
  1894                           
  1895                           	psect	rparam
  1896  0000                     tblptru	equ	0xFF8
  1897                           tblptrh	equ	0xFF7
  1898                           tblptrl	equ	0xFF6
  1899                           tablat	equ	0xFF5
  1900                           prodh	equ	0xFF4
  1901                           prodl	equ	0xFF3
  1902                           wreg	equ	0xFE8
  1903                           indf2	equ	0xFDF
  1904                           postinc2	equ	0xFDE
  1905                           postdec2	equ	0xFDD
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     69      69
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(2) Largest target is 0

    UART_Printf@argList	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    UART_Printf@ptr	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    UART_Printf@argp	PTR void [1] size(2) Largest target is 1
		 -> ?_UART_Printf(COMRAM[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_UART_Printf
    _UART_Printf->_UART_TxNumber
    _UART_TxString->_UART_TxChar
    _UART_TxNumber->___lldiv
    _UART_Init->_UART_SetBaudRate
    _UART_SetBaudRate->___lldiv
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4536
                                             67 COMRAM     2     2      0
                    _ADC_GetAdcValue
                           _ADC_Init
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         24    20      4    3554
                                             43 COMRAM    24    20      4
                        _UART_TxChar
                      _UART_TxNumber
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2     131
                                              1 COMRAM     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       30    25      5    2246
                                             13 COMRAM    30    25      5
                        _UART_TxChar
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     786
                                             22 COMRAM     4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                     9     5      4     700
                                             13 COMRAM     9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     546
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      5     3      2     173
                                              2 COMRAM     5     3      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (2) _DELAY_us                                             2     0      2     151
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxNumber
       _UART_TxChar
       ___lldiv
     _UART_TxString
       _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     45      45       1       54.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 13 19:49:38 2016

                                     l42 0C6A                                       l84 0CDC  
                                     _GO 007E11                              __CFG_BORV$2 000000  
                           __CFG_CP0$OFF 000000                             __CFG_CP1$OFF 000000  
                           __CFG_CP2$OFF 000000                             __CFG_CP3$OFF 000000  
                            __CFG_OSC$HS 000000                                      l137 068C  
                                    l531 0B8C                             __CFG_CPB$OFF 000000  
                                    u510 09B4                                      u520 09B6  
                                    u504 0976                                      u505 0970  
                                    u450 0BB0                             __CFG_CPD$OFF 000000  
                                    u475 0BE4                                      prod 000FF3  
                                    wreg 000FE8                  __end_of_ADC_GetAdcValue 0C82  
                           __CFG_LVP$OFF 000000                             __CFG_WDT$OFF 000000  
                                   l1111 0CD0                                     l1103 0B7E  
                                   l1109 0CCA                                     l1125 0C84  
                                   l1221 0660                                     l1119 0C0A  
                                   l1151 09E4                                     l1143 09C2  
                                   l1311 08C8                                     l1303 0886  
                                   l1231 0690                                     l1207 0626  
                                   l1137 095C                                     l1145 09CA  
                                   l1129 0C96                                     l1305 08A2  
                                   l1321 0938                                     l1091 0B3E  
                                   l1163 0A68                                     l1315 08D0  
                                   l1227 067E                                     l1093 0B4A  
                                   l1173 0ADA                                     l1165 0A7C  
                                   l1157 0A5A                                     l1149 09DE  
                                   l1261 074A                                     l1237 06AC  
                                   l1317 092E                                     l1095 0B4E  
                                   l1167 0A7E                                     l1247 06D6  
                                   l1319 0934                                     l1169 0A88  
                                   l1273 07B6                                     l1249 06F4  
                                   l1179 0B14                                     l1267 077A  
                                   l1259 072E                                     l1355 0C2C  
                                   l1293 0844                                     l1285 0822  
                                   l1295 085C                                     l1279 07E6  
                                   _ADON 007E10                                     STR_1 0601  
                                   _RCIF 007CF5                                     _TXIF 007CF4  
                                   _main 0C14                                     fsr2h 000FDA  
                                   indf2 000FDF                                     fsr2l 000FD9  
                       __end_of_ADC_Init 0CF6                             main@adcValue 0044  
                                   prodl 000FF3                                     start 0000  
                          __CFG_IESO$OFF 000000                         __end_of_DELAY_us 0CDA  
                          __CFG_MCLRE$ON 000000                             ___param_bank 000010  
                                  ?_main 0001                          __end_of___lldiv 0B9E  
                                  _RCREG 000FAE                                    _RCSTA 000FAB  
                                  _SPBRG 000FAF                                    _TRISC 000F94  
                                  _TXREG 000FAD                                    _TXSTA 000FAC  
                          __CFG_PWRT$OFF 000000                            __CFG_WRT0$OFF 000000  
                          __CFG_WRT1$OFF 000000                            __CFG_WRT2$OFF 000000  
                          __CFG_WRT3$OFF 000000                           __CFG_EBTR0$OFF 000000  
                         __CFG_FCMEN$OFF 000000                           __CFG_EBTR1$OFF 000000  
                         __CFG_EBTR2$OFF 000000                           __CFG_EBTR3$OFF 000000  
                     __size_of_UART_Init 0022                            __CFG_WRTB$OFF 000000  
                          __CFG_WRTC$OFF 000000                            __CFG_WRTD$OFF 000000  
                         __CFG_EBTRB$OFF 000000                           __CFG_BOREN$OFF 000000  
                                  tablat 000FF5                                    status 000FD8  
                        __initialization 0CF6                             __end_of_main 0C50  
                                 ??_main 0044                            __activetblptr 000002  
                       ?_ADC_GetAdcValue 0003                                   _ADCON0 000FC2  
                                 _ADCON1 000FC1                                   _ADCON2 000FC0  
                                 _ADRESH 000FC4                                   _ADRESL 000FC3  
                      ?_UART_SetBaudRate 000E                       ??_UART_SetBaudRate 0012  
                           ?_UART_TxChar 0001                             ?_UART_Printf 002C  
                         __CFG_XINST$OFF 000000                        __end_of_UART_Init 0CC8  
                              ??___lldiv 0009  UART_TxNumber@v_numOfDigitsToTransmit_u8 0012  
                              ?_ADC_Init 0001                             __mediumconst 0000  
                                 tblptrh 000FF7                                   tblptrl 000FF6  
                                 tblptru 000FF8                                ?_DELAY_us 0001  
                             __accesstop 0080                  __end_of__initialization 0CF6  
                        __CFG_PBADEN$OFF 000000                    __end_of_UART_TxNumber 0B1C  
                          ___rparam_used 000001                    __end_of_UART_TxString 0CA6  
                         __pcstackCOMRAM 0001                               ??_ADC_Init 0001  
                             ??_DELAY_us 0003                                  _GO_DONE 007E11  
                       DELAY_us@us_count 0001                                  __Hparam 0000  
                                __Lparam 0000                     __size_of_UART_TxChar 000E  
                   __size_of_UART_Printf 0338                                  ___lldiv 0B1C  
                           __psmallconst 0600                          __CFG_STVREN$OFF 000000  
                                __pcinit 0CF6                                  __ramtop 0600  
                                __ptext0 0C14                                  __ptext1 0614  
                                __ptext2 0C82                                  __ptext3 094C  
                                __ptext4 0CDA                                  __ptext5 0CA6  
                                __ptext6 0B9E                                  __ptext7 0B1C  
                                __ptext8 0CE8                                  __ptext9 0C50  
                         UART_Printf@ptr 003E                           UART_Printf@str 0030  
                   end_of_initialization 0CF6                           UART_TxNumber@a 001E  
                         UART_TxNumber@i 002B                            __Lmediumconst 0000  
                        ___lldiv@divisor 0005                          ___lldiv@counter 000D  
         UART_SetBaudRate@v_baudRate_u32 000E                                  postdec2 000FDD  
                                postinc2 000FDE                                _UART_Init 0CA6  
              __size_of_UART_SetBaudRate 0076         ADC_GetAdcValue@var_adcChannel_u8 0007  
                      __size_of_ADC_Init 000E                        __size_of_DELAY_us 0012  
               __size_of_ADC_GetAdcValue 0032          UART_TxNumber@v_numericSystem_u8 002A  
                             ?_UART_Init 0017                      start_initialization 0CF6  
                       __CFG_LPT1OSC$OFF 000000                   __size_of_UART_TxNumber 01D0  
                 __size_of_UART_TxString 0024                        __CFG_CCP2MX$PORTC 000000  
                               ?___lldiv 0001                        ??_ADC_GetAdcValue 0005  
                            ??_UART_Init 001B                         _UART_SetBaudRate 0B9E  
                            __smallconst 0600                                 _ADC_Init 0CE8  
                               _DELAY_us 0CC8                            UART_Printf@ch 0040  
                          ??_UART_TxChar 0001                            _UART_TxNumber 094C  
                          ??_UART_Printf 0030                            _UART_TxString 0C82  
                       __CFG_WDTPS$32768 000000                  UART_Init@v_baudRate_u32 0017  
                UART_TxString@ptr_string 0002                UART_TxNumber@v_number_u32 000E  
                         ?_UART_TxNumber 000E                           ?_UART_TxString 0002  
                               __Hrparam 0000                 UART_TxChar@v_uartData_u8 0001  
                               __Lrparam 0000                         _UART_TxNumber$85 0028  
                    __end_of_UART_TxChar 0CE8                         __size_of___lldiv 0082  
                    __end_of_UART_Printf 094C                                 __ptext10 0CC8  
                          __size_of_main 003C                          UART_Printf@argp 0042  
               UART_SetBaudRate@RegValue 0016                          ??_UART_TxNumber 0013  
               __end_of_UART_SetBaudRate 0C14                          _ADC_GetAdcValue 0C50  
                        ??_UART_TxString 0004                         ___lldiv@dividend 0001  
                            _UART_TxChar 0CDA                              _UART_Printf 0614  
                       ___lldiv@quotient 0009    UART_Printf@v_numOfDigitsToTransmit_u8 0041  
                     UART_Printf@argList 002C                     UART_Printf@v_num_s16 0036  
                   UART_Printf@v_num_s32 0032                     UART_Printf@v_num_u16 003C  
                   UART_Printf@v_num_u32 0038  
