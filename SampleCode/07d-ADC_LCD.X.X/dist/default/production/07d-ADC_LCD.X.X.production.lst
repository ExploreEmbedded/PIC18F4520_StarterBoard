

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 13 19:56:04 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    48  0000                     
    49                           	psect	idataCOMRAM
    50  001BC4                     __pidataCOMRAM:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _ARR_LcdLineNumAddress_U8
    54  001BC4  80                 	db	128
    55  001BC5  C0                 	db	192
    56  001BC6  90                 	db	144
    57  001BC7  D0                 	db	208
    58  0000                     _ADCON0	set	4034
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADRESH	set	4036
    62  0000                     _ADRESL	set	4035
    63  0000                     _LATA	set	3977
    64  0000                     _LATB	set	3978
    65  0000                     _LATC	set	3979
    66  0000                     _LATD	set	3980
    67  0000                     _LATE	set	3981
    68  0000                     _PORTA	set	3968
    69  0000                     _PORTB	set	3969
    70  0000                     _PORTC	set	3970
    71  0000                     _PORTD	set	3971
    72  0000                     _PORTE	set	3972
    73  0000                     _TRISA	set	3986
    74  0000                     _TRISB	set	3987
    75  0000                     _TRISC	set	3988
    76  0000                     _TRISD	set	3989
    77  0000                     _TRISE	set	3990
    78  0000                     _ADON	set	32272
    79  0000                     _GO	set	32273
    80  0000                     _GO_DONE	set	32273
    81                           
    82                           	psect	smallconst
    83  000600                     __psmallconst:
    84                           	opt stack 0
    85  000600  00                 	db	0
    86  000601                     STR_1:
    87  000601  41                 	db	65	;'A'
    88  000602  44                 	db	68	;'D'
    89  000603  43                 	db	67	;'C'
    90  000604  30                 	db	48	;'0'
    91  000605  20                 	db	32
    92  000606  56                 	db	86	;'V'
    93  000607  61                 	db	97	;'a'
    94  000608  6C                 	db	108	;'l'
    95  000609  75                 	db	117	;'u'
    96  00060A  65                 	db	101	;'e'
    97  00060B  3A                 	db	58	;':'
    98  00060C  25                 	db	37
    99  00060D  34                 	db	52	;'4'
   100  00060E  64                 	db	100	;'d'
   101  00060F  0A                 	db	10
   102  000610  56                 	db	86	;'V'
   103  000611  6F                 	db	111	;'o'
   104  000612  6C                 	db	108	;'l'
   105  000613  74                 	db	116	;'t'
   106  000614  3A                 	db	58	;':'
   107  000615  25                 	db	37
   108  000616  66                 	db	102	;'f'
   109  000617  00                 	db	0
   110                           
   111                           ; #config settings
   112  000618  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           	psect	cinit
   115  00197E                     __pcinit:
   116                           	opt stack 0
   117  00197E                     start_initialization:
   118                           	opt stack 0
   119  00197E                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to COMRAM (16 bytes)
   123  00197E  EE00  F056         	lfsr	0,__pbssCOMRAM
   124  001982  0E10               	movlw	16
   125  001984                     clear_0:
   126  001984  6AEE               	clrf	postinc0,c
   127  001986  06E8               	decf	wreg,f,c
   128  001988  E1FD               	bnz	clear_0
   129                           
   130                           ; Initialize objects allocated to COMRAM (4 bytes)
   131                           ; load TBLPTR registers with __pidataCOMRAM
   132  00198A  0EC4               	movlw	low __pidataCOMRAM
   133  00198C  6EF6               	movwf	tblptrl,c
   134  00198E  0E1B               	movlw	high __pidataCOMRAM
   135  001990  6EF7               	movwf	tblptrh,c
   136  001992  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   137  001994  6EF8               	movwf	tblptru,c
   138  001996  EE00  F066         	lfsr	0,__pdataCOMRAM
   139  00199A  EE10 F004          	lfsr	1,4
   140  00199E                     copy_data0:
   141  00199E  0009               	tblrd		*+
   142  0019A0  CFF5 FFEE          	movff	tablat,postinc0
   143  0019A4  50E5               	movf	postdec1,w,c
   144  0019A6  50E1               	movf	fsr1l,w,c
   145  0019A8  E1FA               	bnz	copy_data0
   146  0019AA                     end_of_initialization:
   147                           	opt stack 0
   148  0019AA                     __end_of__initialization:
   149                           	opt stack 0
   150  0019AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   151  0019AC  6EF8               	movwf	tblptru,c
   152  0019AE  0100               	movlb	0
   153  0019B0  EF20  F00A         	goto	_main	;jump to C main() function
   154                           tblptru	equ	0xFF8
   155                           tblptrh	equ	0xFF7
   156                           tblptrl	equ	0xFF6
   157                           tablat	equ	0xFF5
   158                           postinc0	equ	0xFEE
   159                           wreg	equ	0xFE8
   160                           postdec1	equ	0xFE5
   161                           fsr1l	equ	0xFE1
   162                           
   163                           	psect	bssCOMRAM
   164  000056                     __pbssCOMRAM:
   165                           	opt stack 0
   166  000056                     _LCDConfig:
   167                           	opt stack 0
   168  000056                     	ds	14
   169  000064                     _v_LcdTrackCursorPos_U8:
   170                           	opt stack 0
   171  000064                     	ds	1
   172  000065                     _v_LcdTrackLineNum_U8:
   173                           	opt stack 0
   174  000065                     	ds	1
   175                           tblptru	equ	0xFF8
   176                           tblptrh	equ	0xFF7
   177                           tblptrl	equ	0xFF6
   178                           tablat	equ	0xFF5
   179                           postinc0	equ	0xFEE
   180                           wreg	equ	0xFE8
   181                           postdec1	equ	0xFE5
   182                           fsr1l	equ	0xFE1
   183                           
   184                           	psect	dataCOMRAM
   185  000066                     __pdataCOMRAM:
   186                           	opt stack 0
   187  000066                     _ARR_LcdLineNumAddress_U8:
   188                           	opt stack 0
   189  000066                     	ds	4
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           wreg	equ	0xFE8
   196                           postdec1	equ	0xFE5
   197                           fsr1l	equ	0xFE1
   198                           
   199                           	psect	cstackCOMRAM
   200  000001                     __pcstackCOMRAM:
   201                           	opt stack 0
   202  000001                     ??_GPIO_PinRead:
   203  000001                     ?___ftpack:
   204                           	opt stack 0
   205  000001                     ?___lldiv:
   206                           	opt stack 0
   207  000001                     GPIO_PinDirection@var_pinDirn_u8:
   208                           	opt stack 0
   209  000001                     GPIO_PinWrite@var_pinValue_u8:
   210                           	opt stack 0
   211  000001                     DELAY_us@us_count:
   212                           	opt stack 0
   213  000001                     ___ftpack@arg:
   214                           	opt stack 0
   215  000001                     ___lldiv@dividend:
   216                           	opt stack 0
   217                           
   218                           ; 4 bytes @ 0x0
   219  000001                     	ds	1
   220  000002                     ??_GPIO_PinDirection:
   221  000002                     ??_GPIO_PinWrite:
   222                           
   223                           ; 1 bytes @ 0x1
   224  000002                     	ds	1
   225  000003                     ?_ADC_GetAdcValue:
   226                           	opt stack 0
   227  000003                     GPIO_PinRead@var_portNumber_u8:
   228                           	opt stack 0
   229  000003                     DELAY_ms@ms_count:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  000003                     	ds	1
   234  000004                     GPIO_PinDirection@var_portNumber_u8:
   235                           	opt stack 0
   236  000004                     GPIO_PinWrite@var_portNumber_u8:
   237                           	opt stack 0
   238  000004                     GPIO_PinRead@returnStatus:
   239                           	opt stack 0
   240  000004                     ___ftpack@exp:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x3
   244  000004                     	ds	1
   245  000005                     ??_ADC_GetAdcValue:
   246  000005                     GPIO_PinDirection@enm_pinNumber:
   247                           	opt stack 0
   248  000005                     GPIO_PinWrite@enm_pinNumber:
   249                           	opt stack 0
   250  000005                     GPIO_PinRead@enm_pinNumber:
   251                           	opt stack 0
   252  000005                     ___ftpack@sign:
   253                           	opt stack 0
   254  000005                     ___lldiv@divisor:
   255                           	opt stack 0
   256                           
   257                           ; 4 bytes @ 0x4
   258  000005                     	ds	1
   259  000006                     ??___ftpack:
   260  000006                     LCD_SetUp@RW:
   261                           	opt stack 0
   262  000006                     lcd_BusyCheck@busyflag:
   263                           	opt stack 0
   264  000006                     lcd_SendHigherNibble@dataByte:
   265                           	opt stack 0
   266  000006                     lcd_SendLowerNibble@dataByte:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x5
   270  000006                     	ds	1
   271  000007                     ADC_GetAdcValue@var_adcChannel_u8:
   272                           	opt stack 0
   273  000007                     LCD_SetUp@EN:
   274                           	opt stack 0
   275  000007                     LCD_CmdWrite@v_lcdCmd_u8:
   276                           	opt stack 0
   277  000007                     lcd_DataWrite@dataByte:
   278                           	opt stack 0
   279                           
   280                           ; 1 bytes @ 0x6
   281  000007                     	ds	1
   282  000008                     LCD_SetUp@D0:
   283                           	opt stack 0
   284  000008                     LCD_GoToLine@v_lineNumber_u8:
   285                           	opt stack 0
   286  000008                     LCD_DisplayChar@v_lcdData_u8:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x7
   290  000008                     	ds	1
   291  000009                     ?___awtoft:
   292                           	opt stack 0
   293  000009                     ?___lltoft:
   294                           	opt stack 0
   295  000009                     LCD_SetUp@D1:
   296                           	opt stack 0
   297  000009                     LCD_Init@v_MaxCharsPerLine_u8:
   298                           	opt stack 0
   299  000009                     LCD_DisplayString@ptr_stringPointer_u8:
   300                           	opt stack 0
   301  000009                     ___awtoft@c:
   302                           	opt stack 0
   303  000009                     ___lldiv@quotient:
   304                           	opt stack 0
   305  000009                     ___lltoft@c:
   306                           	opt stack 0
   307                           
   308                           ; 4 bytes @ 0x8
   309  000009                     	ds	1
   310  00000A                     LCD_SetUp@D2:
   311                           	opt stack 0
   312  00000A                     LCD_Init@v_lcdNoOfLines_u8:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x9
   316  00000A                     	ds	1
   317  00000B                     LCD_SetUp@D3:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0xA
   321  00000B                     	ds	1
   322  00000C                     LCD_SetUp@D4:
   323                           	opt stack 0
   324  00000C                     ___awtoft@sign:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0xB
   328  00000C                     	ds	1
   329  00000D                     ??___lltoft:
   330  00000D                     ?___ftmul:
   331                           	opt stack 0
   332  00000D                     LCD_SetUp@D5:
   333                           	opt stack 0
   334  00000D                     ___lldiv@counter:
   335                           	opt stack 0
   336  00000D                     ___ftmul@f1:
   337                           	opt stack 0
   338                           
   339                           ; 3 bytes @ 0xC
   340  00000D                     	ds	1
   341  00000E                     LCD_SetUp@D6:
   342                           	opt stack 0
   343  00000E                     LCD_DisplayNumber@v_number_u32:
   344                           	opt stack 0
   345                           
   346                           ; 4 bytes @ 0xD
   347  00000E                     	ds	1
   348  00000F                     LCD_SetUp@D7:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0xE
   352  00000F                     	ds	1
   353  000010                     LCD_SetUp@RS:
   354                           	opt stack 0
   355  000010                     ___ftmul@f2:
   356                           	opt stack 0
   357                           
   358                           ; 3 bytes @ 0xF
   359  000010                     	ds	1
   360  000011                     ___lltoft@exp:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x10
   364  000011                     	ds	1
   365  000012                     ?___ftneg:
   366                           	opt stack 0
   367  000012                     LCD_DisplayNumber@v_numOfDigitsToDisplay_u8:
   368                           	opt stack 0
   369  000012                     ___ftneg@f1:
   370                           	opt stack 0
   371                           
   372                           ; 3 bytes @ 0x11
   373  000012                     	ds	1
   374  000013                     ??___ftmul:
   375  000013                     ??_LCD_DisplayNumber:
   376                           
   377                           ; 1 bytes @ 0x12
   378  000013                     	ds	2
   379  000015                     ?___ftadd:
   380                           	opt stack 0
   381  000015                     ___ftadd@f1:
   382                           	opt stack 0
   383                           
   384                           ; 3 bytes @ 0x14
   385  000015                     	ds	1
   386  000016                     ___ftmul@exp:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0x15
   390  000016                     	ds	1
   391  000017                     ___ftmul@f3_as_product:
   392                           	opt stack 0
   393                           
   394                           ; 3 bytes @ 0x16
   395  000017                     	ds	1
   396  000018                     ___ftadd@f2:
   397                           	opt stack 0
   398                           
   399                           ; 3 bytes @ 0x17
   400  000018                     	ds	2
   401  00001A                     ___ftmul@cntr:
   402                           	opt stack 0
   403                           
   404                           ; 1 bytes @ 0x19
   405  00001A                     	ds	1
   406  00001B                     ??___ftadd:
   407  00001B                     ___ftmul@sign:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x1A
   411  00001B                     	ds	1
   412  00001C                     ?___ftdiv:
   413                           	opt stack 0
   414  00001C                     ?___fttol:
   415                           	opt stack 0
   416  00001C                     ___ftdiv@f1:
   417                           	opt stack 0
   418  00001C                     ___fttol@f1:
   419                           	opt stack 0
   420                           
   421                           ; 3 bytes @ 0x1B
   422  00001C                     	ds	2
   423  00001E                     ___ftadd@sign:
   424                           	opt stack 0
   425  00001E                     LCD_DisplayNumber@a:
   426                           	opt stack 0
   427                           
   428                           ; 10 bytes @ 0x1D
   429  00001E                     	ds	1
   430  00001F                     ___ftadd@exp2:
   431                           	opt stack 0
   432  00001F                     ___ftdiv@f2:
   433                           	opt stack 0
   434                           
   435                           ; 3 bytes @ 0x1E
   436  00001F                     	ds	1
   437  000020                     ??___fttol:
   438  000020                     ___ftadd@exp1:
   439                           	opt stack 0
   440                           
   441                           ; 1 bytes @ 0x1F
   442  000020                     	ds	2
   443  000022                     ??___ftdiv:
   444                           
   445                           ; 1 bytes @ 0x21
   446  000022                     	ds	3
   447  000025                     ___ftdiv@cntr:
   448                           	opt stack 0
   449  000025                     ___fttol@sign1:
   450                           	opt stack 0
   451                           
   452                           ; 1 bytes @ 0x24
   453  000025                     	ds	1
   454  000026                     ___ftdiv@f3:
   455                           	opt stack 0
   456  000026                     ___fttol@lval:
   457                           	opt stack 0
   458                           
   459                           ; 4 bytes @ 0x25
   460  000026                     	ds	2
   461  000028                     _LCD_DisplayNumber$283:
   462                           	opt stack 0
   463                           
   464                           ; 2 bytes @ 0x27
   465  000028                     	ds	1
   466  000029                     ___ftdiv@exp:
   467                           	opt stack 0
   468                           
   469                           ; 1 bytes @ 0x28
   470  000029                     	ds	1
   471  00002A                     LCD_DisplayNumber@v_numericSystem_u8:
   472                           	opt stack 0
   473  00002A                     ___ftdiv@sign:
   474                           	opt stack 0
   475  00002A                     ___fttol@exp1:
   476                           	opt stack 0
   477                           
   478                           ; 1 bytes @ 0x29
   479  00002A                     	ds	1
   480  00002B                     LCD_DisplayNumber@i:
   481                           	opt stack 0
   482                           
   483                           ; 1 bytes @ 0x2A
   484  00002B                     	ds	1
   485  00002C                     LCD_DisplayFloatNumber@v_floatNum_f32:
   486                           	opt stack 0
   487                           
   488                           ; 3 bytes @ 0x2B
   489  00002C                     	ds	3
   490  00002F                     LCD_DisplayFloatNumber@v_decNumber_u32:
   491                           	opt stack 0
   492                           
   493                           ; 4 bytes @ 0x2E
   494  00002F                     	ds	4
   495  000033                     ?_LCD_Printf:
   496                           	opt stack 0
   497  000033                     LCD_Printf@argList:
   498                           	opt stack 0
   499                           
   500                           ; 2 bytes @ 0x32
   501  000033                     	ds	7
   502  00003A                     LCD_Printf@v_floatNum_f32:
   503                           	opt stack 0
   504                           
   505                           ; 3 bytes @ 0x39
   506  00003A                     	ds	3
   507  00003D                     LCD_Printf@str:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x3C
   511  00003D                     	ds	2
   512  00003F                     LCD_Printf@v_num_s32:
   513                           	opt stack 0
   514                           
   515                           ; 4 bytes @ 0x3E
   516  00003F                     	ds	4
   517  000043                     LCD_Printf@v_num_s16:
   518                           	opt stack 0
   519                           
   520                           ; 2 bytes @ 0x42
   521  000043                     	ds	2
   522  000045                     LCD_Printf@v_num_u32:
   523                           	opt stack 0
   524                           
   525                           ; 4 bytes @ 0x44
   526  000045                     	ds	4
   527  000049                     LCD_Printf@v_num_u16:
   528                           	opt stack 0
   529                           
   530                           ; 2 bytes @ 0x48
   531  000049                     	ds	2
   532  00004B                     LCD_Printf@ptr:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x4A
   536  00004B                     	ds	2
   537  00004D                     LCD_Printf@ch:
   538                           	opt stack 0
   539                           
   540                           ; 1 bytes @ 0x4C
   541  00004D                     	ds	1
   542  00004E                     LCD_Printf@v_numOfDigitsToDisp_u8:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x4D
   546  00004E                     	ds	1
   547  00004F                     LCD_Printf@argp:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x4E
   551  00004F                     	ds	2
   552  000051                     main@volt:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x50
   556  000051                     	ds	3
   557  000054                     main@adcValue:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x53
   561  000054                     	ds	2
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           
   571 ;;
   572 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   573 ;;
   574 ;; *************** function _main *****************
   575 ;; Defined at:
   576 ;;		line 41 in file "main.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  volt            3   80[COMRAM] float 
   581 ;;  adcValue        2   83[COMRAM] int 
   582 ;; Return value:  Size  Location     Type
   583 ;;                  2  352[None  ] int 
   584 ;; Registers used:
   585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   591 ;;      Params:         0       0       0       0       0       0       0
   592 ;;      Locals:         5       0       0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0
   594 ;;      Totals:         5       0       0       0       0       0       0
   595 ;;Total ram usage:        5 bytes
   596 ;; Hardware stack levels required when called:    9
   597 ;; This function calls:
   598 ;;		_ADC_GetAdcValue
   599 ;;		_ADC_Init
   600 ;;		_LCD_GoToLine
   601 ;;		_LCD_Init
   602 ;;		_LCD_Printf
   603 ;;		_LCD_SetUp
   604 ;;		___awtoft
   605 ;;		___ftdiv
   606 ;;		___ftmul
   607 ;; This function is called by:
   608 ;;		Startup code after reset
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text0
   613  001440                     __ptext0:
   614                           	opt stack 0
   615  001440                     _main:
   616                           	opt stack 22
   617                           
   618                           ;main.c: 43: int adcValue;
   619                           ;main.c: 44: float volt;
   620                           ;main.c: 46: ADC_Init();
   621                           
   622                           ;incstack = 0
   623  001440  ECDB  F00D         	call	_ADC_Init	;wreg free
   624                           
   625                           ;main.c: 49: LCD_SetUp(PB_0,PB_1,PB_2,P_NC,P_NC,P_NC,P_NC,PB_4,PB_5,PB_6,PB_7);
   626  001444  0E09               	movlw	9
   627  001446  6E06               	movwf	LCD_SetUp@RW,c
   628  001448  0E0A               	movlw	10
   629  00144A  6E07               	movwf	LCD_SetUp@EN,c
   630  00144C  0EFF               	movlw	255
   631  00144E  6E08               	movwf	LCD_SetUp@D0,c
   632  001450  0EFF               	movlw	255
   633  001452  6E09               	movwf	LCD_SetUp@D1,c
   634  001454  0EFF               	movlw	255
   635  001456  6E0A               	movwf	LCD_SetUp@D2,c
   636  001458  0EFF               	movlw	255
   637  00145A  6E0B               	movwf	LCD_SetUp@D3,c
   638  00145C  0E0C               	movlw	12
   639  00145E  6E0C               	movwf	LCD_SetUp@D4,c
   640  001460  0E0D               	movlw	13
   641  001462  6E0D               	movwf	LCD_SetUp@D5,c
   642  001464  0E0E               	movlw	14
   643  001466  6E0E               	movwf	LCD_SetUp@D6,c
   644  001468  0E0F               	movlw	15
   645  00146A  6E0F               	movwf	LCD_SetUp@D7,c
   646  00146C  0E08               	movlw	8
   647  00146E  EC81  F00A         	call	_LCD_SetUp
   648                           
   649                           ;main.c: 50: LCD_Init(2,16);
   650  001472  0E10               	movlw	16
   651  001474  6E09               	movwf	LCD_Init@v_MaxCharsPerLine_u8,c
   652  001476  0E02               	movlw	2
   653  001478  ECFD  F00B         	call	_LCD_Init
   654  00147C                     l2612:
   655                           
   656                           ;main.c: 53: {
   657                           ;main.c: 54: adcValue = ADC_GetAdcValue(0);
   658  00147C  0E00               	movlw	0
   659  00147E  EC42  F00D         	call	_ADC_GetAdcValue
   660  001482  C003  F054         	movff	?_ADC_GetAdcValue,main@adcValue
   661  001486  C004  F055         	movff	?_ADC_GetAdcValue+1,main@adcValue+1
   662                           
   663                           ;main.c: 55: volt = (adcValue*5.00)/1023;
   664  00148A  0E00               	movlw	0
   665  00148C  6E10               	movwf	___ftmul@f2,c
   666  00148E  0EA0               	movlw	160
   667  001490  6E11               	movwf	___ftmul@f2+1,c
   668  001492  0E40               	movlw	64
   669  001494  6E12               	movwf	___ftmul@f2+2,c
   670  001496  C054  F009         	movff	main@adcValue,___awtoft@c
   671  00149A  C055  F00A         	movff	main@adcValue+1,___awtoft@c+1
   672  00149E  ECA3  F00C         	call	___awtoft	;wreg free
   673  0014A2  C009  F00D         	movff	?___awtoft,___ftmul@f1
   674  0014A6  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   675  0014AA  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   676  0014AE  EC58  F008         	call	___ftmul	;wreg free
   677  0014B2  C00D  F01C         	movff	?___ftmul,___ftdiv@f1
   678  0014B6  C00E  F01D         	movff	?___ftmul+1,___ftdiv@f1+1
   679  0014BA  C00F  F01E         	movff	?___ftmul+2,___ftdiv@f1+2
   680  0014BE  0EC0               	movlw	192
   681  0014C0  6E1F               	movwf	___ftdiv@f2,c
   682  0014C2  0E7F               	movlw	127
   683  0014C4  6E20               	movwf	___ftdiv@f2+1,c
   684  0014C6  0E44               	movlw	68
   685  0014C8  6E21               	movwf	___ftdiv@f2+2,c
   686  0014CA  ECD2  F008         	call	___ftdiv	;wreg free
   687  0014CE  C01C  F051         	movff	?___ftdiv,main@volt
   688  0014D2  C01D  F052         	movff	?___ftdiv+1,main@volt+1
   689  0014D6  C01E  F053         	movff	?___ftdiv+2,main@volt+2
   690                           
   691                           ;main.c: 56: LCD_GoToLine(0);
   692  0014DA  0E00               	movlw	0
   693  0014DC  EC70  F00D         	call	_LCD_GoToLine
   694                           
   695                           ;main.c: 57: LCD_Printf("ADC0 Value:%4d\nVolt:%f",adcValue,volt);
   696  0014E0  0E01               	movlw	low STR_1
   697  0014E2  6E33               	movwf	LCD_Printf@argList,c
   698  0014E4  0E06               	movlw	high STR_1
   699  0014E6  6E34               	movwf	LCD_Printf@argList+1,c
   700  0014E8  C054  F035         	movff	main@adcValue,?_LCD_Printf+2
   701  0014EC  C055  F036         	movff	main@adcValue+1,?_LCD_Printf+3
   702  0014F0  C051  F037         	movff	main@volt,?_LCD_Printf+4
   703  0014F4  C052  F038         	movff	main@volt+1,?_LCD_Printf+5
   704  0014F8  C053  F039         	movff	main@volt+2,?_LCD_Printf+6
   705  0014FC  EC0D  F003         	call	_LCD_Printf	;wreg free
   706  001500  D7BD               	goto	l2612
   707  001502                     __end_of_main:
   708                           	opt stack 0
   709                           tblptru	equ	0xFF8
   710                           tblptrh	equ	0xFF7
   711                           tblptrl	equ	0xFF6
   712                           tablat	equ	0xFF5
   713                           postinc0	equ	0xFEE
   714                           wreg	equ	0xFE8
   715                           postdec1	equ	0xFE5
   716                           fsr1l	equ	0xFE1
   717                           
   718 ;; *************** function ___ftdiv *****************
   719 ;; Defined at:
   720 ;;		line 54 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftdiv.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;  f1              3   27[COMRAM] float 
   723 ;;  f2              3   30[COMRAM] float 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  f3              3   37[COMRAM] float 
   726 ;;  sign            1   41[COMRAM] unsigned char 
   727 ;;  exp             1   40[COMRAM] unsigned char 
   728 ;;  cntr            1   36[COMRAM] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  3   27[COMRAM] float 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   738 ;;      Params:         6       0       0       0       0       0       0
   739 ;;      Locals:         6       0       0       0       0       0       0
   740 ;;      Temps:          3       0       0       0       0       0       0
   741 ;;      Totals:        15       0       0       0       0       0       0
   742 ;;Total ram usage:       15 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    1
   745 ;; This function calls:
   746 ;;		___ftpack
   747 ;; This function is called by:
   748 ;;		_main
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text1
   753  0011A4                     __ptext1:
   754                           	opt stack 0
   755  0011A4                     ___ftdiv:
   756                           	opt stack 29
   757                           
   758                           ;incstack = 0
   759  0011A4  C01E  F022         	movff	___ftdiv@f1+2,??___ftdiv
   760  0011A8  6A23               	clrf	(??___ftdiv+1)& (0+255),c
   761  0011AA  6A24               	clrf	(??___ftdiv+2)& (0+255),c
   762  0011AC  341D               	rlcf	___ftdiv@f1+1,w,c
   763  0011AE  3622               	rlcf	??___ftdiv& (0+255),f,c
   764  0011B0  E301               	bnc	u3171
   765  0011B2  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
   766  0011B4                     u3171:
   767  0011B4  5022               	movf	??___ftdiv,w,c
   768  0011B6  6E29               	movwf	___ftdiv@exp,c
   769  0011B8  5029               	movf	___ftdiv@exp,w,c
   770  0011BA  A4D8               	btfss	status,2,c
   771  0011BC  D007               	goto	l2512
   772  0011BE  0E00               	movlw	0
   773  0011C0  6E1C               	movwf	?___ftdiv,c
   774  0011C2  0E00               	movlw	0
   775  0011C4  6E1D               	movwf	?___ftdiv+1,c
   776  0011C6  0E00               	movlw	0
   777  0011C8  6E1E               	movwf	?___ftdiv+2,c
   778  0011CA  0012               	return	
   779  0011CC                     l2512:
   780  0011CC  C021  F022         	movff	___ftdiv@f2+2,??___ftdiv
   781  0011D0  6A23               	clrf	(??___ftdiv+1)& (0+255),c
   782  0011D2  6A24               	clrf	(??___ftdiv+2)& (0+255),c
   783  0011D4  3420               	rlcf	___ftdiv@f2+1,w,c
   784  0011D6  3622               	rlcf	??___ftdiv& (0+255),f,c
   785  0011D8  E301               	bnc	u3191
   786  0011DA  8023               	bsf	(??___ftdiv+1)& (0+255),0,c
   787  0011DC                     u3191:
   788  0011DC  5022               	movf	??___ftdiv,w,c
   789  0011DE  6E2A               	movwf	___ftdiv@sign,c
   790  0011E0  502A               	movf	___ftdiv@sign,w,c
   791  0011E2  A4D8               	btfss	status,2,c
   792  0011E4  D007               	goto	l2518
   793  0011E6  0E00               	movlw	0
   794  0011E8  6E1C               	movwf	?___ftdiv,c
   795  0011EA  0E00               	movlw	0
   796  0011EC  6E1D               	movwf	?___ftdiv+1,c
   797  0011EE  0E00               	movlw	0
   798  0011F0  6E1E               	movwf	?___ftdiv+2,c
   799  0011F2  0012               	return	
   800  0011F4                     l2518:
   801  0011F4  0E00               	movlw	0
   802  0011F6  6E26               	movwf	___ftdiv@f3,c
   803  0011F8  0E00               	movlw	0
   804  0011FA  6E27               	movwf	___ftdiv@f3+1,c
   805  0011FC  0E00               	movlw	0
   806  0011FE  6E28               	movwf	___ftdiv@f3+2,c
   807  001200  502A               	movf	___ftdiv@sign,w,c
   808  001202  0F89               	addlw	137
   809  001204  5E29               	subwf	___ftdiv@exp,f,c
   810  001206  C01E  F02A         	movff	___ftdiv@f1+2,___ftdiv@sign
   811  00120A  5021               	movf	___ftdiv@f2+2,w,c
   812  00120C  1A2A               	xorwf	___ftdiv@sign,f,c
   813  00120E  0E80               	movlw	128
   814  001210  162A               	andwf	___ftdiv@sign,f,c
   815  001212  8E1D               	bsf	___ftdiv@f1+1,7,c
   816  001214  0EFF               	movlw	255
   817  001216  161C               	andwf	___ftdiv@f1,f,c
   818  001218  0EFF               	movlw	255
   819  00121A  161D               	andwf	___ftdiv@f1+1,f,c
   820  00121C  0E00               	movlw	0
   821  00121E  161E               	andwf	___ftdiv@f1+2,f,c
   822  001220  8E20               	bsf	___ftdiv@f2+1,7,c
   823  001222  0EFF               	movlw	255
   824  001224  161F               	andwf	___ftdiv@f2,f,c
   825  001226  0EFF               	movlw	255
   826  001228  1620               	andwf	___ftdiv@f2+1,f,c
   827  00122A  0E00               	movlw	0
   828  00122C  1621               	andwf	___ftdiv@f2+2,f,c
   829  00122E  0E18               	movlw	24
   830  001230  6E25               	movwf	___ftdiv@cntr,c
   831  001232                     l2538:
   832  001232  90D8               	bcf	status,0,c
   833  001234  3626               	rlcf	___ftdiv@f3,f,c
   834  001236  3627               	rlcf	___ftdiv@f3+1,f,c
   835  001238  3628               	rlcf	___ftdiv@f3+2,f,c
   836  00123A  501F               	movf	___ftdiv@f2,w,c
   837  00123C  5C1C               	subwf	___ftdiv@f1,w,c
   838  00123E  5020               	movf	___ftdiv@f2+1,w,c
   839  001240  581D               	subwfb	___ftdiv@f1+1,w,c
   840  001242  5021               	movf	___ftdiv@f2+2,w,c
   841  001244  581E               	subwfb	___ftdiv@f1+2,w,c
   842  001246  A0D8               	btfss	status,0,c
   843  001248  D007               	goto	l639
   844  00124A  501F               	movf	___ftdiv@f2,w,c
   845  00124C  5E1C               	subwf	___ftdiv@f1,f,c
   846  00124E  5020               	movf	___ftdiv@f2+1,w,c
   847  001250  5A1D               	subwfb	___ftdiv@f1+1,f,c
   848  001252  5021               	movf	___ftdiv@f2+2,w,c
   849  001254  5A1E               	subwfb	___ftdiv@f1+2,f,c
   850  001256  8026               	bsf	___ftdiv@f3,0,c
   851  001258                     l639:
   852  001258  90D8               	bcf	status,0,c
   853  00125A  361C               	rlcf	___ftdiv@f1,f,c
   854  00125C  361D               	rlcf	___ftdiv@f1+1,f,c
   855  00125E  361E               	rlcf	___ftdiv@f1+2,f,c
   856  001260  2E25               	decfsz	___ftdiv@cntr,f,c
   857  001262  D7E7               	goto	l2538
   858  001264  C026  F001         	movff	___ftdiv@f3,___ftpack@arg
   859  001268  C027  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
   860  00126C  C028  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
   861  001270  C029  F004         	movff	___ftdiv@exp,___ftpack@exp
   862  001274  C02A  F005         	movff	___ftdiv@sign,___ftpack@sign
   863  001278  ECE1  F00A         	call	___ftpack	;wreg free
   864  00127C  C001  F01C         	movff	?___ftpack,?___ftdiv
   865  001280  C002  F01D         	movff	?___ftpack+1,?___ftdiv+1
   866  001284  C003  F01E         	movff	?___ftpack+2,?___ftdiv+2
   867  001288  0012               	return	
   868  00128A                     __end_of___ftdiv:
   869                           	opt stack 0
   870                           tblptru	equ	0xFF8
   871                           tblptrh	equ	0xFF7
   872                           tblptrl	equ	0xFF6
   873                           tablat	equ	0xFF5
   874                           postinc0	equ	0xFEE
   875                           wreg	equ	0xFE8
   876                           postdec1	equ	0xFE5
   877                           fsr1l	equ	0xFE1
   878                           status	equ	0xFD8
   879                           
   880 ;; *************** function ___awtoft *****************
   881 ;; Defined at:
   882 ;;		line 32 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\awtoft.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  c               2    8[COMRAM] int 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  sign            1   11[COMRAM] unsigned char 
   887 ;; Return value:  Size  Location     Type
   888 ;;                  3    8[COMRAM] float 
   889 ;; Registers used:
   890 ;;		wreg, status,2, status,0, cstack
   891 ;; Tracked objects:
   892 ;;		On entry : 0/0
   893 ;;		On exit  : 0/0
   894 ;;		Unchanged: 0/0
   895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   896 ;;      Params:         3       0       0       0       0       0       0
   897 ;;      Locals:         1       0       0       0       0       0       0
   898 ;;      Temps:          0       0       0       0       0       0       0
   899 ;;      Totals:         4       0       0       0       0       0       0
   900 ;;Total ram usage:        4 bytes
   901 ;; Hardware stack levels used:    1
   902 ;; Hardware stack levels required when called:    1
   903 ;; This function calls:
   904 ;;		___ftpack
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text2
   911  001946                     __ptext2:
   912                           	opt stack 0
   913  001946                     ___awtoft:
   914                           	opt stack 29
   915                           
   916                           ;incstack = 0
   917  001946  0E00               	movlw	0
   918  001948  6E0C               	movwf	___awtoft@sign,c
   919  00194A  AE0A               	btfss	___awtoft@c+1,7,c
   920  00194C  D006               	goto	l2560
   921  00194E  6C09               	negf	___awtoft@c,c
   922  001950  1E0A               	comf	___awtoft@c+1,f,c
   923  001952  B0D8               	btfsc	status,0,c
   924  001954  2A0A               	incf	___awtoft@c+1,f,c
   925  001956  0E01               	movlw	1
   926  001958  6E0C               	movwf	___awtoft@sign,c
   927  00195A                     l2560:
   928  00195A  C009  F001         	movff	___awtoft@c,___ftpack@arg
   929  00195E  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
   930  001962  6A03               	clrf	___ftpack@arg+2,c
   931  001964  0E8E               	movlw	142
   932  001966  6E04               	movwf	___ftpack@exp,c
   933  001968  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
   934  00196C  ECE1  F00A         	call	___ftpack	;wreg free
   935  001970  C001  F009         	movff	?___ftpack,?___awtoft
   936  001974  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
   937  001978  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
   938  00197C  0012               	return	
   939  00197E                     __end_of___awtoft:
   940                           	opt stack 0
   941                           tblptru	equ	0xFF8
   942                           tblptrh	equ	0xFF7
   943                           tblptrl	equ	0xFF6
   944                           tablat	equ	0xFF5
   945                           postinc0	equ	0xFEE
   946                           wreg	equ	0xFE8
   947                           postdec1	equ	0xFE5
   948                           fsr1l	equ	0xFE1
   949                           status	equ	0xFD8
   950                           
   951 ;; *************** function _LCD_SetUp *****************
   952 ;; Defined at:
   953 ;;		line 135 in file "../00-libfiles/lcd.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;  RS              1    wreg     enum E3222
   956 ;;  RW              1    5[COMRAM] enum E3222
   957 ;;  EN              1    6[COMRAM] enum E3222
   958 ;;  D0              1    7[COMRAM] enum E3222
   959 ;;  D1              1    8[COMRAM] enum E3222
   960 ;;  D2              1    9[COMRAM] enum E3222
   961 ;;  D3              1   10[COMRAM] enum E3222
   962 ;;  D4              1   11[COMRAM] enum E3222
   963 ;;  D5              1   12[COMRAM] enum E3222
   964 ;;  D6              1   13[COMRAM] enum E3222
   965 ;;  D7              1   14[COMRAM] enum E3222
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  RS              1   15[COMRAM] enum E3222
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, cstack
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   977 ;;      Params:        10       0       0       0       0       0       0
   978 ;;      Locals:         1       0       0       0       0       0       0
   979 ;;      Temps:          0       0       0       0       0       0       0
   980 ;;      Totals:        11       0       0       0       0       0       0
   981 ;;Total ram usage:       11 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    1
   984 ;; This function calls:
   985 ;;		_GPIO_PinDirection
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           	psect	text3
   992  001502                     __ptext3:
   993                           	opt stack 0
   994  001502                     _LCD_SetUp:
   995                           	opt stack 29
   996                           
   997                           ;incstack = 0
   998                           ;LCD_SetUp@RS stored from wreg
   999  001502  6E10               	movwf	LCD_SetUp@RS,c
  1000                           
  1001                           ;lcd.c: 148: LCDConfig.RS = RS;
  1002  001504  C010  F059         	movff	LCD_SetUp@RS,_LCDConfig+3
  1003                           
  1004                           ;lcd.c: 149: LCDConfig.RW = RW;
  1005  001508  C006  F05A         	movff	LCD_SetUp@RW,_LCDConfig+4
  1006                           
  1007                           ;lcd.c: 150: LCDConfig.EN = EN;
  1008  00150C  C007  F05B         	movff	LCD_SetUp@EN,_LCDConfig+5
  1009                           
  1010                           ;lcd.c: 152: LCDConfig.D0 = D0;
  1011  001510  C008  F05C         	movff	LCD_SetUp@D0,_LCDConfig+6
  1012                           
  1013                           ;lcd.c: 153: LCDConfig.D1 = D1;
  1014  001514  C009  F05D         	movff	LCD_SetUp@D1,_LCDConfig+7
  1015                           
  1016                           ;lcd.c: 154: LCDConfig.D2 = D2;
  1017  001518  C00A  F05E         	movff	LCD_SetUp@D2,_LCDConfig+8
  1018                           
  1019                           ;lcd.c: 155: LCDConfig.D3 = D3;
  1020  00151C  C00B  F05F         	movff	LCD_SetUp@D3,_LCDConfig+9
  1021                           
  1022                           ;lcd.c: 156: LCDConfig.D4 = D4;
  1023  001520  C00C  F060         	movff	LCD_SetUp@D4,_LCDConfig+10
  1024                           
  1025                           ;lcd.c: 157: LCDConfig.D5 = D5;
  1026  001524  C00D  F061         	movff	LCD_SetUp@D5,_LCDConfig+11
  1027                           
  1028                           ;lcd.c: 158: LCDConfig.D6 = D6;
  1029  001528  C00E  F062         	movff	LCD_SetUp@D6,_LCDConfig+12
  1030                           
  1031                           ;lcd.c: 159: LCDConfig.D7 = D7;
  1032  00152C  C00F  F063         	movff	LCD_SetUp@D7,_LCDConfig+13
  1033                           
  1034                           ;lcd.c: 162: if((D0 == P_NC) || (D1 == P_NC) || (D2 == P_NC) || (D3 == P_NC))
  1035  001530  2808               	incf	LCD_SetUp@D0,w,c
  1036  001532  B4D8               	btfsc	status,2,c
  1037  001534  D009               	goto	l2336
  1038  001536  2809               	incf	LCD_SetUp@D1,w,c
  1039  001538  B4D8               	btfsc	status,2,c
  1040  00153A  D006               	goto	l2336
  1041  00153C  280A               	incf	LCD_SetUp@D2,w,c
  1042  00153E  B4D8               	btfsc	status,2,c
  1043  001540  D003               	goto	l2336
  1044  001542  280B               	incf	LCD_SetUp@D3,w,c
  1045  001544  A4D8               	btfss	status,2,c
  1046  001546  D003               	goto	l2338
  1047  001548                     l2336:
  1048                           
  1049                           ;lcd.c: 163: {
  1050                           ;lcd.c: 164: LCDConfig.v_LcdMode_U8 = 4;
  1051  001548  0E04               	movlw	4
  1052  00154A  6E58               	movwf	_LCDConfig+2,c
  1053                           
  1054                           ;lcd.c: 165: }
  1055  00154C  D016               	goto	l2348
  1056  00154E                     l2338:
  1057                           
  1058                           ;lcd.c: 166: else
  1059                           ;lcd.c: 167: {
  1060                           ;lcd.c: 168: LCDConfig.v_LcdMode_U8 = 8;
  1061  00154E  0E08               	movlw	8
  1062  001550  6E58               	movwf	_LCDConfig+2,c
  1063                           
  1064                           ;lcd.c: 169: GPIO_PinDirection(D0,0x00u);
  1065  001552  0E00               	movlw	0
  1066  001554  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1067  001556  5008               	movf	LCD_SetUp@D0,w,c
  1068  001558  EC2E  F007         	call	_GPIO_PinDirection
  1069                           
  1070                           ;lcd.c: 170: GPIO_PinDirection(D1,0x00u);
  1071  00155C  0E00               	movlw	0
  1072  00155E  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1073  001560  5009               	movf	LCD_SetUp@D1,w,c
  1074  001562  EC2E  F007         	call	_GPIO_PinDirection
  1075                           
  1076                           ;lcd.c: 171: GPIO_PinDirection(D2,0x00u);
  1077  001566  0E00               	movlw	0
  1078  001568  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1079  00156A  500A               	movf	LCD_SetUp@D2,w,c
  1080  00156C  EC2E  F007         	call	_GPIO_PinDirection
  1081                           
  1082                           ;lcd.c: 172: GPIO_PinDirection(D3,0x00u);
  1083  001570  0E00               	movlw	0
  1084  001572  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1085  001574  500B               	movf	LCD_SetUp@D3,w,c
  1086  001576  EC2E  F007         	call	_GPIO_PinDirection
  1087  00157A                     l2348:
  1088                           
  1089                           ;lcd.c: 173: }
  1090                           ;lcd.c: 176: GPIO_PinDirection(RS,0x00u);
  1091  00157A  0E00               	movlw	0
  1092  00157C  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1093  00157E  5010               	movf	LCD_SetUp@RS,w,c
  1094  001580  EC2E  F007         	call	_GPIO_PinDirection
  1095                           
  1096                           ;lcd.c: 177: GPIO_PinDirection(RW,0x00u);
  1097  001584  0E00               	movlw	0
  1098  001586  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1099  001588  5006               	movf	LCD_SetUp@RW,w,c
  1100  00158A  EC2E  F007         	call	_GPIO_PinDirection
  1101                           
  1102                           ;lcd.c: 178: GPIO_PinDirection(EN,0x00u);
  1103  00158E  0E00               	movlw	0
  1104  001590  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1105  001592  5007               	movf	LCD_SetUp@EN,w,c
  1106  001594  EC2E  F007         	call	_GPIO_PinDirection
  1107                           
  1108                           ;lcd.c: 180: GPIO_PinDirection(D4,0x00u);
  1109  001598  0E00               	movlw	0
  1110  00159A  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1111  00159C  500C               	movf	LCD_SetUp@D4,w,c
  1112  00159E  EC2E  F007         	call	_GPIO_PinDirection
  1113                           
  1114                           ;lcd.c: 181: GPIO_PinDirection(D5,0x00u);
  1115  0015A2  0E00               	movlw	0
  1116  0015A4  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1117  0015A6  500D               	movf	LCD_SetUp@D5,w,c
  1118  0015A8  EC2E  F007         	call	_GPIO_PinDirection
  1119                           
  1120                           ;lcd.c: 182: GPIO_PinDirection(D6,0x00u);
  1121  0015AC  0E00               	movlw	0
  1122  0015AE  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1123  0015B0  500E               	movf	LCD_SetUp@D6,w,c
  1124  0015B2  EC2E  F007         	call	_GPIO_PinDirection
  1125                           
  1126                           ;lcd.c: 183: GPIO_PinDirection(D7,0x00u);
  1127  0015B6  0E00               	movlw	0
  1128  0015B8  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  1129  0015BA  500F               	movf	LCD_SetUp@D7,w,c
  1130  0015BC  EC2E  F007         	call	_GPIO_PinDirection
  1131  0015C0  0012               	return		;funcret
  1132  0015C2                     __end_of_LCD_SetUp:
  1133                           	opt stack 0
  1134                           tblptru	equ	0xFF8
  1135                           tblptrh	equ	0xFF7
  1136                           tblptrl	equ	0xFF6
  1137                           tablat	equ	0xFF5
  1138                           postinc0	equ	0xFEE
  1139                           wreg	equ	0xFE8
  1140                           postdec1	equ	0xFE5
  1141                           fsr1l	equ	0xFE1
  1142                           status	equ	0xFD8
  1143                           
  1144 ;; *************** function _LCD_Printf *****************
  1145 ;; Defined at:
  1146 ;;		line 676 in file "../00-libfiles/lcd.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;  argList         2   50[COMRAM] PTR const unsigned char 
  1149 ;;		 -> STR_1(23), 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  v_num_u32       4   68[COMRAM] unsigned long 
  1152 ;;  v_num_s32       4   62[COMRAM] long 
  1153 ;;  v_floatNum_f    3   57[COMRAM] long 
  1154 ;;  argp            2   78[COMRAM] PTR void [1]
  1155 ;;		 -> ?_LCD_Printf(1), 
  1156 ;;  ptr             2   74[COMRAM] PTR const unsigned char 
  1157 ;;		 -> STR_1(23), 
  1158 ;;  v_num_u16       2   72[COMRAM] unsigned int 
  1159 ;;  v_num_s16       2   66[COMRAM] int 
  1160 ;;  str             2   60[COMRAM] PTR unsigned char 
  1161 ;;  v_numOfDigit    1   77[COMRAM] unsigned char 
  1162 ;;  ch              1   76[COMRAM] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1172 ;;      Params:         7       0       0       0       0       0       0
  1173 ;;      Locals:        23       0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0
  1175 ;;      Totals:        30       0       0       0       0       0       0
  1176 ;;Total ram usage:       30 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    8
  1179 ;; This function calls:
  1180 ;;		_LCD_DisplayChar
  1181 ;;		_LCD_DisplayFloatNumber
  1182 ;;		_LCD_DisplayNumber
  1183 ;;		_LCD_DisplayString
  1184 ;; This function is called by:
  1185 ;;		_main
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text4
  1190  00061A                     __ptext4:
  1191                           	opt stack 0
  1192  00061A                     _LCD_Printf:
  1193                           	opt stack 22
  1194                           
  1195                           ;lcd.c: 678: const char *ptr;
  1196                           ;lcd.c: 679: va_list argp;
  1197                           ;lcd.c: 680: sint16_t v_num_s16;
  1198                           ;lcd.c: 681: sint32_t v_num_s32;
  1199                           ;lcd.c: 682: uint16_t v_num_u16;
  1200                           ;lcd.c: 683: uint32_t v_num_u32;
  1201                           ;lcd.c: 684: char *str;
  1202                           ;lcd.c: 685: char ch;
  1203                           ;lcd.c: 686: uint8_t v_numOfDigitsToDisp_u8;
  1204                           ;lcd.c: 688: double v_floatNum_f32;
  1205                           ;lcd.c: 691: *argp = __va_start();
  1206                           
  1207                           ;incstack = 0
  1208  00061A  0E35               	movlw	low (?_LCD_Printf+2)
  1209  00061C  6E4F               	movwf	LCD_Printf@argp,c
  1210  00061E  0E00               	movlw	high (?_LCD_Printf+2)
  1211  000620  6E50               	movwf	LCD_Printf@argp+1,c
  1212                           
  1213                           ;lcd.c: 694: for(ptr = argList; *ptr != '\0'; ptr++)
  1214  000622  C033  F04B         	movff	LCD_Printf@argList,LCD_Printf@ptr
  1215  000626  C034  F04C         	movff	LCD_Printf@argList+1,LCD_Printf@ptr+1
  1216  00062A  D1A0               	goto	l2504
  1217  00062C                     l2384:
  1218                           
  1219                           ;lcd.c: 695: {
  1220                           ;lcd.c: 697: ch= *ptr;
  1221  00062C  C04B  FFF6         	movff	LCD_Printf@ptr,tblptrl
  1222  000630  C04C  FFF7         	movff	LCD_Printf@ptr+1,tblptrh
  1223  000634                     	if	0	;tblptru may be non-zero
  1224  000634                     	endif
  1225  000634                     	if	0	;tblptru may be non-zero
  1226  000634                     	endif
  1227  000634  0008               	tblrd		*
  1228  000636  CFF5 F04D          	movff	tablat,LCD_Printf@ch
  1229                           
  1230                           ;lcd.c: 698: if(ch == '%')
  1231  00063A  0E25               	movlw	37
  1232  00063C  184D               	xorwf	LCD_Printf@ch,w,c
  1233  00063E  A4D8               	btfss	status,2,c
  1234  000640  D190               	goto	l2500
  1235                           
  1236                           ;lcd.c: 699: {
  1237                           ;lcd.c: 700: ptr++;
  1238  000642  4A4B               	infsnz	LCD_Printf@ptr,f,c
  1239  000644  2A4C               	incf	LCD_Printf@ptr+1,f,c
  1240                           
  1241                           ;lcd.c: 701: ch = *ptr;
  1242  000646  C04B  FFF6         	movff	LCD_Printf@ptr,tblptrl
  1243  00064A  C04C  FFF7         	movff	LCD_Printf@ptr+1,tblptrh
  1244  00064E                     	if	0	;tblptru may be non-zero
  1245  00064E                     	endif
  1246  00064E                     	if	0	;tblptru may be non-zero
  1247  00064E                     	endif
  1248  00064E  0008               	tblrd		*
  1249  000650  CFF5 F04D          	movff	tablat,LCD_Printf@ch
  1250                           
  1251                           ;lcd.c: 702: if((ch>=0x30) && (ch<=0x39))
  1252  000654  0E2F               	movlw	47
  1253  000656  644D               	cpfsgt	LCD_Printf@ch,c
  1254  000658  D01C               	goto	l280
  1255  00065A  0E3A               	movlw	58
  1256  00065C  604D               	cpfslt	LCD_Printf@ch,c
  1257  00065E  D019               	goto	l280
  1258                           
  1259                           ;lcd.c: 703: {
  1260                           ;lcd.c: 704: v_numOfDigitsToDisp_u8 = 0;
  1261  000660  0E00               	movlw	0
  1262  000662  6E4E               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8,c
  1263                           
  1264                           ;lcd.c: 705: while((ch>=0x30) && (ch<=0x39))
  1265  000664  D00F               	goto	l2404
  1266  000666                     l2398:
  1267                           
  1268                           ;lcd.c: 706: {
  1269                           ;lcd.c: 707: v_numOfDigitsToDisp_u8 = (v_numOfDigitsToDisp_u8 * 10) + (ch-0x30);
  1270  000666  504E               	movf	LCD_Printf@v_numOfDigitsToDisp_u8,w,c
  1271  000668  0D0A               	mullw	10
  1272  00066A  50F3               	movf	prodl,w,c
  1273  00066C  244D               	addwf	LCD_Printf@ch,w,c
  1274  00066E  0FD0               	addlw	208
  1275  000670  6E4E               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8,c
  1276                           
  1277                           ;lcd.c: 708: ptr++;
  1278  000672  4A4B               	infsnz	LCD_Printf@ptr,f,c
  1279  000674  2A4C               	incf	LCD_Printf@ptr+1,f,c
  1280                           
  1281                           ;lcd.c: 709: ch = *ptr;
  1282  000676  C04B  FFF6         	movff	LCD_Printf@ptr,tblptrl
  1283  00067A  C04C  FFF7         	movff	LCD_Printf@ptr+1,tblptrh
  1284  00067E                     	if	0	;tblptru may be non-zero
  1285  00067E                     	endif
  1286  00067E                     	if	0	;tblptru may be non-zero
  1287  00067E                     	endif
  1288  00067E  0008               	tblrd		*
  1289  000680  CFF5 F04D          	movff	tablat,LCD_Printf@ch
  1290  000684                     l2404:
  1291  000684  0E2F               	movlw	47
  1292  000686  644D               	cpfsgt	LCD_Printf@ch,c
  1293  000688  D13D               	goto	l2498
  1294  00068A  0E39               	movlw	57
  1295  00068C  644D               	cpfsgt	LCD_Printf@ch,c
  1296  00068E  D7EB               	goto	l2398
  1297  000690  D139               	goto	l2498
  1298  000692                     l280:
  1299                           
  1300                           ;lcd.c: 712: else
  1301                           ;lcd.c: 713: {
  1302                           ;lcd.c: 714: v_numOfDigitsToDisp_u8 = 0xffu;
  1303  000692  684E               	setf	LCD_Printf@v_numOfDigitsToDisp_u8,c
  1304                           
  1305                           ;lcd.c: 715: }
  1306                           ;lcd.c: 718: switch(ch)
  1307  000694  D137               	goto	l2498
  1308  000696                     l2408:
  1309                           
  1310                           ;lcd.c: 721: case 'c':
  1311                           ;lcd.c: 722: ch = (*(int *)__va_arg((*(int **)argp), (int)0));
  1312  000696  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1313  00069A  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1314  00069E  50DF               	movf	indf2,w,c
  1315  0006A0  6E4D               	movwf	LCD_Printf@ch,c
  1316  0006A2  0E02               	movlw	2
  1317  0006A4  264F               	addwf	LCD_Printf@argp,f,c
  1318  0006A6  0E00               	movlw	0
  1319  0006A8  2250               	addwfc	LCD_Printf@argp+1,f,c
  1320                           
  1321                           ;lcd.c: 723: LCD_DisplayChar(ch);
  1322  0006AA  504D               	movf	LCD_Printf@ch,w,c
  1323  0006AC  EC85  F00D         	call	_LCD_DisplayChar
  1324                           
  1325                           ;lcd.c: 724: break;
  1326  0006B0  D15B               	goto	l2502
  1327  0006B2                     l2414:
  1328                           
  1329                           ;lcd.c: 727: v_num_s16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1330  0006B2  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1331  0006B6  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1332  0006BA  CFDE F043          	movff	postinc2,LCD_Printf@v_num_s16
  1333  0006BE  CFDD F044          	movff	postdec2,LCD_Printf@v_num_s16+1
  1334  0006C2  0E02               	movlw	2
  1335  0006C4  264F               	addwf	LCD_Printf@argp,f,c
  1336  0006C6  0E00               	movlw	0
  1337  0006C8  2250               	addwfc	LCD_Printf@argp+1,f,c
  1338                           
  1339                           ;lcd.c: 728: if(v_num_s16<0)
  1340  0006CA  AE44               	btfss	LCD_Printf@v_num_s16+1,7,c
  1341  0006CC  D007               	goto	l2424
  1342                           
  1343                           ;lcd.c: 729: {
  1344                           ;lcd.c: 730: v_num_s16 = -v_num_s16;
  1345  0006CE  6C43               	negf	LCD_Printf@v_num_s16,c
  1346  0006D0  1E44               	comf	LCD_Printf@v_num_s16+1,f,c
  1347  0006D2  B0D8               	btfsc	status,0,c
  1348  0006D4  2A44               	incf	LCD_Printf@v_num_s16+1,f,c
  1349                           
  1350                           ;lcd.c: 731: LCD_DisplayChar('-');
  1351  0006D6  0E2D               	movlw	45
  1352  0006D8  EC85  F00D         	call	_LCD_DisplayChar
  1353  0006DC                     l2424:
  1354                           
  1355                           ;lcd.c: 732: }
  1356                           ;lcd.c: 733: LCD_DisplayNumber(10u,v_num_s16,v_numOfDigitsToDisp_u8);
  1357  0006DC  C043  F00E         	movff	LCD_Printf@v_num_s16,LCD_DisplayNumber@v_number_u32
  1358  0006E0  C044  F00F         	movff	LCD_Printf@v_num_s16+1,LCD_DisplayNumber@v_number_u32+1
  1359  0006E4  0E00               	movlw	0
  1360  0006E6  BE0F               	btfsc	LCD_DisplayNumber@v_number_u32+1,7,c
  1361  0006E8  0EFF               	movlw	-1
  1362  0006EA  6E10               	movwf	LCD_DisplayNumber@v_number_u32+2,c
  1363  0006EC  6E11               	movwf	LCD_DisplayNumber@v_number_u32+3,c
  1364  0006EE  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1365  0006F2  0E0A               	movlw	10
  1366  0006F4  ECC0  F004         	call	_LCD_DisplayNumber
  1367                           
  1368                           ;lcd.c: 734: break;
  1369  0006F8  D137               	goto	l2502
  1370  0006FA                     l2426:
  1371                           
  1372                           ;lcd.c: 737: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
  1373  0006FA  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1374  0006FE  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1375  000702  CFDE F03F          	movff	postinc2,LCD_Printf@v_num_s32
  1376  000706  CFDE F040          	movff	postinc2,LCD_Printf@v_num_s32+1
  1377  00070A  CFDE F041          	movff	postinc2,LCD_Printf@v_num_s32+2
  1378  00070E  CFDE F042          	movff	postinc2,LCD_Printf@v_num_s32+3
  1379  000712  0E04               	movlw	4
  1380  000714  264F               	addwf	LCD_Printf@argp,f,c
  1381  000716  0E00               	movlw	0
  1382  000718  2250               	addwfc	LCD_Printf@argp+1,f,c
  1383                           
  1384                           ;lcd.c: 738: if(v_num_s32<0)
  1385  00071A  AE42               	btfss	LCD_Printf@v_num_s32+3,7,c
  1386  00071C  D00B               	goto	l2436
  1387                           
  1388                           ;lcd.c: 739: {
  1389                           ;lcd.c: 740: v_num_s32 = -v_num_s32;
  1390  00071E  1E42               	comf	LCD_Printf@v_num_s32+3,f,c
  1391  000720  1E41               	comf	LCD_Printf@v_num_s32+2,f,c
  1392  000722  1E40               	comf	LCD_Printf@v_num_s32+1,f,c
  1393  000724  6C3F               	negf	LCD_Printf@v_num_s32,c
  1394  000726  0E00               	movlw	0
  1395  000728  2240               	addwfc	LCD_Printf@v_num_s32+1,f,c
  1396  00072A  2241               	addwfc	LCD_Printf@v_num_s32+2,f,c
  1397  00072C  2242               	addwfc	LCD_Printf@v_num_s32+3,f,c
  1398                           
  1399                           ;lcd.c: 741: LCD_DisplayChar('-');
  1400  00072E  0E2D               	movlw	45
  1401  000730  EC85  F00D         	call	_LCD_DisplayChar
  1402  000734                     l2436:
  1403                           
  1404                           ;lcd.c: 742: }
  1405                           ;lcd.c: 743: LCD_DisplayNumber(10u,v_num_s32,v_numOfDigitsToDisp_u8);
  1406  000734  C03F  F00E         	movff	LCD_Printf@v_num_s32,LCD_DisplayNumber@v_number_u32
  1407  000738  C040  F00F         	movff	LCD_Printf@v_num_s32+1,LCD_DisplayNumber@v_number_u32+1
  1408  00073C  C041  F010         	movff	LCD_Printf@v_num_s32+2,LCD_DisplayNumber@v_number_u32+2
  1409  000740  C042  F011         	movff	LCD_Printf@v_num_s32+3,LCD_DisplayNumber@v_number_u32+3
  1410  000744  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1411  000748  0E0A               	movlw	10
  1412  00074A  ECC0  F004         	call	_LCD_DisplayNumber
  1413                           
  1414                           ;lcd.c: 744: break;
  1415  00074E  D10C               	goto	l2502
  1416  000750                     l2438:
  1417                           
  1418                           ;lcd.c: 747: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1419  000750  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1420  000754  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1421  000758  CFDE F049          	movff	postinc2,LCD_Printf@v_num_u16
  1422  00075C  CFDD F04A          	movff	postdec2,LCD_Printf@v_num_u16+1
  1423  000760  0E02               	movlw	2
  1424  000762  264F               	addwf	LCD_Printf@argp,f,c
  1425  000764  0E00               	movlw	0
  1426  000766  2250               	addwfc	LCD_Printf@argp+1,f,c
  1427                           
  1428                           ;lcd.c: 748: LCD_DisplayNumber(10u,v_num_u16,v_numOfDigitsToDisp_u8);
  1429  000768  C049  F00E         	movff	LCD_Printf@v_num_u16,LCD_DisplayNumber@v_number_u32
  1430  00076C  C04A  F00F         	movff	LCD_Printf@v_num_u16+1,LCD_DisplayNumber@v_number_u32+1
  1431  000770  6A10               	clrf	LCD_DisplayNumber@v_number_u32+2,c
  1432  000772  6A11               	clrf	LCD_DisplayNumber@v_number_u32+3,c
  1433  000774  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1434  000778  0E0A               	movlw	10
  1435  00077A  ECC0  F004         	call	_LCD_DisplayNumber
  1436                           
  1437                           ;lcd.c: 749: break;
  1438  00077E  D0F4               	goto	l2502
  1439  000780                     l2444:
  1440                           
  1441                           ;lcd.c: 752: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1442  000780  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1443  000784  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1444  000788  CFDE F045          	movff	postinc2,LCD_Printf@v_num_u32
  1445  00078C  CFDE F046          	movff	postinc2,LCD_Printf@v_num_u32+1
  1446  000790  CFDE F047          	movff	postinc2,LCD_Printf@v_num_u32+2
  1447  000794  CFDE F048          	movff	postinc2,LCD_Printf@v_num_u32+3
  1448  000798  0E04               	movlw	4
  1449  00079A  264F               	addwf	LCD_Printf@argp,f,c
  1450  00079C  0E00               	movlw	0
  1451  00079E  2250               	addwfc	LCD_Printf@argp+1,f,c
  1452                           
  1453                           ;lcd.c: 753: LCD_DisplayNumber(10u,v_num_u32,v_numOfDigitsToDisp_u8);
  1454  0007A0  C045  F00E         	movff	LCD_Printf@v_num_u32,LCD_DisplayNumber@v_number_u32
  1455  0007A4  C046  F00F         	movff	LCD_Printf@v_num_u32+1,LCD_DisplayNumber@v_number_u32+1
  1456  0007A8  C047  F010         	movff	LCD_Printf@v_num_u32+2,LCD_DisplayNumber@v_number_u32+2
  1457  0007AC  C048  F011         	movff	LCD_Printf@v_num_u32+3,LCD_DisplayNumber@v_number_u32+3
  1458  0007B0  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1459  0007B4  0E0A               	movlw	10
  1460  0007B6  ECC0  F004         	call	_LCD_DisplayNumber
  1461                           
  1462                           ;lcd.c: 754: break;
  1463  0007BA  D0D6               	goto	l2502
  1464  0007BC                     l2450:
  1465                           
  1466                           ;lcd.c: 757: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1467  0007BC  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1468  0007C0  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1469  0007C4  CFDE F049          	movff	postinc2,LCD_Printf@v_num_u16
  1470  0007C8  CFDD F04A          	movff	postdec2,LCD_Printf@v_num_u16+1
  1471  0007CC  0E02               	movlw	2
  1472  0007CE  264F               	addwf	LCD_Printf@argp,f,c
  1473  0007D0  0E00               	movlw	0
  1474  0007D2  2250               	addwfc	LCD_Printf@argp+1,f,c
  1475                           
  1476                           ;lcd.c: 758: LCD_DisplayNumber(16u,v_num_u16,v_numOfDigitsToDisp_u8);
  1477  0007D4  C049  F00E         	movff	LCD_Printf@v_num_u16,LCD_DisplayNumber@v_number_u32
  1478  0007D8  C04A  F00F         	movff	LCD_Printf@v_num_u16+1,LCD_DisplayNumber@v_number_u32+1
  1479  0007DC  6A10               	clrf	LCD_DisplayNumber@v_number_u32+2,c
  1480  0007DE  6A11               	clrf	LCD_DisplayNumber@v_number_u32+3,c
  1481  0007E0  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1482  0007E4  0E10               	movlw	16
  1483  0007E6  ECC0  F004         	call	_LCD_DisplayNumber
  1484                           
  1485                           ;lcd.c: 759: break;
  1486  0007EA  D0BE               	goto	l2502
  1487  0007EC                     l2456:
  1488                           
  1489                           ;lcd.c: 762: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1490  0007EC  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1491  0007F0  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1492  0007F4  CFDE F045          	movff	postinc2,LCD_Printf@v_num_u32
  1493  0007F8  CFDE F046          	movff	postinc2,LCD_Printf@v_num_u32+1
  1494  0007FC  CFDE F047          	movff	postinc2,LCD_Printf@v_num_u32+2
  1495  000800  CFDE F048          	movff	postinc2,LCD_Printf@v_num_u32+3
  1496  000804  0E04               	movlw	4
  1497  000806  264F               	addwf	LCD_Printf@argp,f,c
  1498  000808  0E00               	movlw	0
  1499  00080A  2250               	addwfc	LCD_Printf@argp+1,f,c
  1500                           
  1501                           ;lcd.c: 763: LCD_DisplayNumber(16u,v_num_u32,v_numOfDigitsToDisp_u8);
  1502  00080C  C045  F00E         	movff	LCD_Printf@v_num_u32,LCD_DisplayNumber@v_number_u32
  1503  000810  C046  F00F         	movff	LCD_Printf@v_num_u32+1,LCD_DisplayNumber@v_number_u32+1
  1504  000814  C047  F010         	movff	LCD_Printf@v_num_u32+2,LCD_DisplayNumber@v_number_u32+2
  1505  000818  C048  F011         	movff	LCD_Printf@v_num_u32+3,LCD_DisplayNumber@v_number_u32+3
  1506  00081C  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1507  000820  0E10               	movlw	16
  1508  000822  ECC0  F004         	call	_LCD_DisplayNumber
  1509                           
  1510                           ;lcd.c: 764: break;
  1511  000826  D0A0               	goto	l2502
  1512  000828                     l2462:
  1513                           
  1514                           ;lcd.c: 768: v_num_u16 = (*(int *)__va_arg((*(int **)argp), (int)0));
  1515  000828  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1516  00082C  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1517  000830  CFDE F049          	movff	postinc2,LCD_Printf@v_num_u16
  1518  000834  CFDD F04A          	movff	postdec2,LCD_Printf@v_num_u16+1
  1519  000838  0E02               	movlw	2
  1520  00083A  264F               	addwf	LCD_Printf@argp,f,c
  1521  00083C  0E00               	movlw	0
  1522  00083E  2250               	addwfc	LCD_Printf@argp+1,f,c
  1523                           
  1524                           ;lcd.c: 769: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1525  000840  284E               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w,c
  1526  000842  A4D8               	btfss	status,2,c
  1527  000844  D002               	goto	l2470
  1528                           
  1529                           ;lcd.c: 770: v_numOfDigitsToDisp_u8 = 16;
  1530  000846  0E10               	movlw	16
  1531  000848  6E4E               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8,c
  1532  00084A                     l2470:
  1533                           
  1534                           ;lcd.c: 771: LCD_DisplayNumber(2u,v_num_u16,v_numOfDigitsToDisp_u8);
  1535  00084A  C049  F00E         	movff	LCD_Printf@v_num_u16,LCD_DisplayNumber@v_number_u32
  1536  00084E  C04A  F00F         	movff	LCD_Printf@v_num_u16+1,LCD_DisplayNumber@v_number_u32+1
  1537  000852  6A10               	clrf	LCD_DisplayNumber@v_number_u32+2,c
  1538  000854  6A11               	clrf	LCD_DisplayNumber@v_number_u32+3,c
  1539  000856  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1540  00085A  0E02               	movlw	2
  1541  00085C  ECC0  F004         	call	_LCD_DisplayNumber
  1542                           
  1543                           ;lcd.c: 772: break;
  1544  000860  D083               	goto	l2502
  1545  000862                     l2472:
  1546                           
  1547                           ;lcd.c: 775: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1548  000862  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1549  000866  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1550  00086A  CFDE F045          	movff	postinc2,LCD_Printf@v_num_u32
  1551  00086E  CFDE F046          	movff	postinc2,LCD_Printf@v_num_u32+1
  1552  000872  CFDE F047          	movff	postinc2,LCD_Printf@v_num_u32+2
  1553  000876  CFDE F048          	movff	postinc2,LCD_Printf@v_num_u32+3
  1554  00087A  0E04               	movlw	4
  1555  00087C  264F               	addwf	LCD_Printf@argp,f,c
  1556  00087E  0E00               	movlw	0
  1557  000880  2250               	addwfc	LCD_Printf@argp+1,f,c
  1558                           
  1559                           ;lcd.c: 776: if(v_numOfDigitsToDisp_u8 == 0xffu)
  1560  000882  284E               	incf	LCD_Printf@v_numOfDigitsToDisp_u8,w,c
  1561  000884  A4D8               	btfss	status,2,c
  1562  000886  D002               	goto	l2480
  1563                           
  1564                           ;lcd.c: 777: v_numOfDigitsToDisp_u8 = 16;
  1565  000888  0E10               	movlw	16
  1566  00088A  6E4E               	movwf	LCD_Printf@v_numOfDigitsToDisp_u8,c
  1567  00088C                     l2480:
  1568                           
  1569                           ;lcd.c: 778: LCD_DisplayNumber(2u,v_num_u32,v_numOfDigitsToDisp_u8);
  1570  00088C  C045  F00E         	movff	LCD_Printf@v_num_u32,LCD_DisplayNumber@v_number_u32
  1571  000890  C046  F00F         	movff	LCD_Printf@v_num_u32+1,LCD_DisplayNumber@v_number_u32+1
  1572  000894  C047  F010         	movff	LCD_Printf@v_num_u32+2,LCD_DisplayNumber@v_number_u32+2
  1573  000898  C048  F011         	movff	LCD_Printf@v_num_u32+3,LCD_DisplayNumber@v_number_u32+3
  1574  00089C  C04E  F012         	movff	LCD_Printf@v_numOfDigitsToDisp_u8,LCD_DisplayNumber@v_numOfDigitsToDisplay_u8
  1575  0008A0  0E02               	movlw	2
  1576  0008A2  ECC0  F004         	call	_LCD_DisplayNumber
  1577                           
  1578                           ;lcd.c: 779: break;
  1579  0008A6  D060               	goto	l2502
  1580  0008A8                     l2482:
  1581                           
  1582                           ;lcd.c: 783: case 'f':
  1583                           ;lcd.c: 785: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1584  0008A8  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1585  0008AC  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1586  0008B0  CFDE F03A          	movff	postinc2,LCD_Printf@v_floatNum_f32
  1587  0008B4  CFDE F03B          	movff	postinc2,LCD_Printf@v_floatNum_f32+1
  1588  0008B8  CFDD F03C          	movff	postdec2,LCD_Printf@v_floatNum_f32+2
  1589  0008BC  0E03               	movlw	3
  1590  0008BE  264F               	addwf	LCD_Printf@argp,f,c
  1591  0008C0  0E00               	movlw	0
  1592  0008C2  2250               	addwfc	LCD_Printf@argp+1,f,c
  1593                           
  1594                           ;lcd.c: 786: LCD_DisplayFloatNumber(v_floatNum_f32);
  1595  0008C4  C03A  F02C         	movff	LCD_Printf@v_floatNum_f32,LCD_DisplayFloatNumber@v_floatNum_f32
  1596  0008C8  C03B  F02D         	movff	LCD_Printf@v_floatNum_f32+1,LCD_DisplayFloatNumber@v_floatNum_f32+1
  1597  0008CC  C03C  F02E         	movff	LCD_Printf@v_floatNum_f32+2,LCD_DisplayFloatNumber@v_floatNum_f32+2
  1598  0008D0  EC45  F009         	call	_LCD_DisplayFloatNumber	;wreg free
  1599                           
  1600                           ;lcd.c: 788: break;
  1601  0008D4  D049               	goto	l2502
  1602  0008D6                     l2488:
  1603                           
  1604                           ;lcd.c: 792: case 's':
  1605                           ;lcd.c: 793: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1606  0008D6  C04F  FFD9         	movff	LCD_Printf@argp,fsr2l
  1607  0008DA  C050  FFDA         	movff	LCD_Printf@argp+1,fsr2h
  1608  0008DE  CFDE F03D          	movff	postinc2,LCD_Printf@str
  1609  0008E2  CFDD F03E          	movff	postdec2,LCD_Printf@str+1
  1610  0008E6  0E02               	movlw	2
  1611  0008E8  264F               	addwf	LCD_Printf@argp,f,c
  1612  0008EA  0E00               	movlw	0
  1613  0008EC  2250               	addwfc	LCD_Printf@argp+1,f,c
  1614                           
  1615                           ;lcd.c: 794: LCD_DisplayString(str);
  1616  0008EE  C03D  F009         	movff	LCD_Printf@str,LCD_DisplayString@ptr_stringPointer_u8
  1617  0008F2  C03E  F00A         	movff	LCD_Printf@str+1,LCD_DisplayString@ptr_stringPointer_u8+1
  1618  0008F6  EC98  F00D         	call	_LCD_DisplayString	;wreg free
  1619                           
  1620                           ;lcd.c: 795: break;
  1621  0008FA  D036               	goto	l2502
  1622  0008FC                     l2494:
  1623                           
  1624                           ;lcd.c: 798: LCD_DisplayChar('%');
  1625  0008FC  0E25               	movlw	37
  1626  0008FE  EC85  F00D         	call	_LCD_DisplayChar
  1627                           
  1628                           ;lcd.c: 800: }
  1629                           
  1630                           ;lcd.c: 799: break;
  1631  000902  D032               	goto	l2502
  1632  000904                     l2498:
  1633  000904  504D               	movf	LCD_Printf@ch,w,c
  1634                           
  1635                           ; Switch size 1, requested type "space"
  1636                           ; Number of cases is 15, Range of values is 37 to 120
  1637                           ; switch strategies available:
  1638                           ; Name         Instructions Cycles
  1639                           ; simple_byte           46    24 (average)
  1640                           ;	Chosen strategy is simple_byte
  1641  000906  0A25               	xorlw	37	; case 37
  1642  000908  B4D8               	btfsc	status,2,c
  1643  00090A  D7F8               	goto	l2494
  1644  00090C  0A67               	xorlw	103	; case 66
  1645  00090E  B4D8               	btfsc	status,2,c
  1646  000910  D7A8               	goto	l2472
  1647  000912  0A01               	xorlw	1	; case 67
  1648  000914  B4D8               	btfsc	status,2,c
  1649  000916  D6BF               	goto	l2408
  1650  000918  0A07               	xorlw	7	; case 68
  1651  00091A  B4D8               	btfsc	status,2,c
  1652  00091C  D6EE               	goto	l2426
  1653  00091E  0A02               	xorlw	2	; case 70
  1654  000920  B4D8               	btfsc	status,2,c
  1655  000922  D7C2               	goto	l2482
  1656  000924  0A15               	xorlw	21	; case 83
  1657  000926  B4D8               	btfsc	status,2,c
  1658  000928  D7D6               	goto	l2488
  1659  00092A  0A06               	xorlw	6	; case 85
  1660  00092C  B4D8               	btfsc	status,2,c
  1661  00092E  D728               	goto	l2444
  1662  000930  0A0D               	xorlw	13	; case 88
  1663  000932  B4D8               	btfsc	status,2,c
  1664  000934  D75B               	goto	l2456
  1665  000936  0A3A               	xorlw	58	; case 98
  1666  000938  B4D8               	btfsc	status,2,c
  1667  00093A  D776               	goto	l2462
  1668  00093C  0A01               	xorlw	1	; case 99
  1669  00093E  B4D8               	btfsc	status,2,c
  1670  000940  D6AA               	goto	l2408
  1671  000942  0A07               	xorlw	7	; case 100
  1672  000944  B4D8               	btfsc	status,2,c
  1673  000946  D6B5               	goto	l2414
  1674  000948  0A02               	xorlw	2	; case 102
  1675  00094A  B4D8               	btfsc	status,2,c
  1676  00094C  D7AD               	goto	l2482
  1677  00094E  0A15               	xorlw	21	; case 115
  1678  000950  B4D8               	btfsc	status,2,c
  1679  000952  D7C1               	goto	l2488
  1680  000954  0A06               	xorlw	6	; case 117
  1681  000956  B4D8               	btfsc	status,2,c
  1682  000958  D6FB               	goto	l2438
  1683  00095A  0A0D               	xorlw	13	; case 120
  1684  00095C  B4D8               	btfsc	status,2,c
  1685  00095E  D72E               	goto	l2450
  1686                           
  1687                           ;lcd.c: 801: }
  1688  000960  D003               	goto	l2502
  1689  000962                     l2500:
  1690                           
  1691                           ;lcd.c: 802: else
  1692                           ;lcd.c: 803: {
  1693                           ;lcd.c: 805: LCD_DisplayChar(ch);
  1694  000962  504D               	movf	LCD_Printf@ch,w,c
  1695  000964  EC85  F00D         	call	_LCD_DisplayChar
  1696  000968                     l2502:
  1697  000968  4A4B               	infsnz	LCD_Printf@ptr,f,c
  1698  00096A  2A4C               	incf	LCD_Printf@ptr+1,f,c
  1699  00096C                     l2504:
  1700  00096C  C04B  FFF6         	movff	LCD_Printf@ptr,tblptrl
  1701  000970  C04C  FFF7         	movff	LCD_Printf@ptr+1,tblptrh
  1702  000974                     	if	0	;tblptru may be non-zero
  1703  000974                     	endif
  1704  000974                     	if	0	;tblptru may be non-zero
  1705  000974                     	endif
  1706  000974  0008               	tblrd		*
  1707  000976  50F5               	movf	tablat,w,c
  1708  000978  0900               	iorlw	0
  1709  00097A  B4D8               	btfsc	status,2,c
  1710  00097C  0012               	return	
  1711  00097E  D656               	goto	l2384
  1712  000980                     __end_of_LCD_Printf:
  1713                           	opt stack 0
  1714                           tblptru	equ	0xFF8
  1715                           tblptrh	equ	0xFF7
  1716                           tblptrl	equ	0xFF6
  1717                           tablat	equ	0xFF5
  1718                           prodl	equ	0xFF3
  1719                           postinc0	equ	0xFEE
  1720                           wreg	equ	0xFE8
  1721                           postdec1	equ	0xFE5
  1722                           fsr1l	equ	0xFE1
  1723                           indf2	equ	0xFDF
  1724                           postinc2	equ	0xFDE
  1725                           postdec2	equ	0xFDD
  1726                           fsr2h	equ	0xFDA
  1727                           fsr2l	equ	0xFD9
  1728                           status	equ	0xFD8
  1729                           
  1730 ;; *************** function _LCD_DisplayString *****************
  1731 ;; Defined at:
  1732 ;;		line 427 in file "../00-libfiles/lcd.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  ptr_stringPo    2    8[COMRAM] PTR const unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;		None
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  1    wreg      void 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1746 ;;      Params:         2       0       0       0       0       0       0
  1747 ;;      Locals:         0       0       0       0       0       0       0
  1748 ;;      Temps:          0       0       0       0       0       0       0
  1749 ;;      Totals:         2       0       0       0       0       0       0
  1750 ;;Total ram usage:        2 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    6
  1753 ;; This function calls:
  1754 ;;		_LCD_DisplayChar
  1755 ;; This function is called by:
  1756 ;;		_LCD_Printf
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text5
  1761  001B30                     __ptext5:
  1762                           	opt stack 0
  1763  001B30                     _LCD_DisplayString:
  1764                           	opt stack 23
  1765                           
  1766                           ;lcd.c: 429: while((*ptr_stringPointer_u8)!=0)
  1767                           
  1768                           ;incstack = 0
  1769  001B30  D009               	goto	l2284
  1770  001B32                     l2280:
  1771                           
  1772                           ;lcd.c: 430: LCD_DisplayChar(*ptr_stringPointer_u8++);
  1773  001B32  C009  FFD9         	movff	LCD_DisplayString@ptr_stringPointer_u8,fsr2l
  1774  001B36  C00A  FFDA         	movff	LCD_DisplayString@ptr_stringPointer_u8+1,fsr2h
  1775  001B3A  50DF               	movf	indf2,w,c
  1776  001B3C  EC85  F00D         	call	_LCD_DisplayChar
  1777  001B40  4A09               	infsnz	LCD_DisplayString@ptr_stringPointer_u8,f,c
  1778  001B42  2A0A               	incf	LCD_DisplayString@ptr_stringPointer_u8+1,f,c
  1779  001B44                     l2284:
  1780  001B44  C009  FFD9         	movff	LCD_DisplayString@ptr_stringPointer_u8,fsr2l
  1781  001B48  C00A  FFDA         	movff	LCD_DisplayString@ptr_stringPointer_u8+1,fsr2h
  1782  001B4C  50DF               	movf	indf2,w,c
  1783  001B4E  B4D8               	btfsc	status,2,c
  1784  001B50  0012               	return	
  1785  001B52  D7EF               	goto	l2280
  1786  001B54                     __end_of_LCD_DisplayString:
  1787                           	opt stack 0
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           prodl	equ	0xFF3
  1793                           postinc0	equ	0xFEE
  1794                           wreg	equ	0xFE8
  1795                           postdec1	equ	0xFE5
  1796                           fsr1l	equ	0xFE1
  1797                           indf2	equ	0xFDF
  1798                           postinc2	equ	0xFDE
  1799                           postdec2	equ	0xFDD
  1800                           fsr2h	equ	0xFDA
  1801                           fsr2l	equ	0xFD9
  1802                           status	equ	0xFD8
  1803                           
  1804 ;; *************** function _LCD_DisplayFloatNumber *****************
  1805 ;; Defined at:
  1806 ;;		line 616 in file "../00-libfiles/lcd.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  v_floatNum_f    3   43[COMRAM] void 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  v_decNumber_    4   46[COMRAM] unsigned long 
  1811 ;; Return value:  Size  Location     Type
  1812 ;;                  1    wreg      void 
  1813 ;; Registers used:
  1814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1815 ;; Tracked objects:
  1816 ;;		On entry : 0/0
  1817 ;;		On exit  : 0/0
  1818 ;;		Unchanged: 0/0
  1819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1820 ;;      Params:         3       0       0       0       0       0       0
  1821 ;;      Locals:         4       0       0       0       0       0       0
  1822 ;;      Temps:          0       0       0       0       0       0       0
  1823 ;;      Totals:         7       0       0       0       0       0       0
  1824 ;;Total ram usage:        7 bytes
  1825 ;; Hardware stack levels used:    1
  1826 ;; Hardware stack levels required when called:    7
  1827 ;; This function calls:
  1828 ;;		_LCD_DisplayChar
  1829 ;;		_LCD_DisplayNumber
  1830 ;;		___ftadd
  1831 ;;		___ftmul
  1832 ;;		___ftneg
  1833 ;;		___fttol
  1834 ;;		___lltoft
  1835 ;; This function is called by:
  1836 ;;		_LCD_Printf
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           	psect	text6
  1841  00128A                     __ptext6:
  1842                           	opt stack 0
  1843  00128A                     _LCD_DisplayFloatNumber:
  1844                           	opt stack 22
  1845                           
  1846                           ;lcd.c: 618: uint32_t v_decNumber_u32;
  1847                           ;lcd.c: 625: v_decNumber_u32 = (uint32_t) v_floatNum_f32;
  1848                           
  1849                           ;incstack = 0
  1850  00128A  C02C  F01C         	movff	LCD_DisplayFloatNumber@v_floatNum_f32,___fttol@f1
  1851  00128E  C02D  F01D         	movff	LCD_DisplayFloatNumber@v_floatNum_f32+1,___fttol@f1+1
  1852  001292  C02E  F01E         	movff	LCD_DisplayFloatNumber@v_floatNum_f32+2,___fttol@f1+2
  1853  001296  ECDE  F007         	call	___fttol	;wreg free
  1854  00129A  C01C  F02F         	movff	?___fttol,LCD_DisplayFloatNumber@v_decNumber_u32
  1855  00129E  C01D  F030         	movff	?___fttol+1,LCD_DisplayFloatNumber@v_decNumber_u32+1
  1856  0012A2  C01E  F031         	movff	?___fttol+2,LCD_DisplayFloatNumber@v_decNumber_u32+2
  1857  0012A6  C01F  F032         	movff	?___fttol+3,LCD_DisplayFloatNumber@v_decNumber_u32+3
  1858                           
  1859                           ;lcd.c: 626: LCD_DisplayNumber(10u,v_decNumber_u32,0xffu);
  1860  0012AA  C02F  F00E         	movff	LCD_DisplayFloatNumber@v_decNumber_u32,LCD_DisplayNumber@v_number_u32
  1861  0012AE  C030  F00F         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+1,LCD_DisplayNumber@v_number_u32+1
  1862  0012B2  C031  F010         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+2,LCD_DisplayNumber@v_number_u32+2
  1863  0012B6  C032  F011         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+3,LCD_DisplayNumber@v_number_u32+3
  1864  0012BA  0EFF               	movlw	255
  1865  0012BC  6E12               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,c
  1866  0012BE  0E0A               	movlw	10
  1867  0012C0  ECC0  F004         	call	_LCD_DisplayNumber
  1868                           
  1869                           ;lcd.c: 628: LCD_DisplayChar('.');
  1870  0012C4  0E2E               	movlw	46
  1871  0012C6  EC85  F00D         	call	_LCD_DisplayChar
  1872                           
  1873                           ;lcd.c: 630: v_floatNum_f32 = v_floatNum_f32 - v_decNumber_u32;
  1874  0012CA  C02F  F009         	movff	LCD_DisplayFloatNumber@v_decNumber_u32,___lltoft@c
  1875  0012CE  C030  F00A         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+1,___lltoft@c+1
  1876  0012D2  C031  F00B         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+2,___lltoft@c+2
  1877  0012D6  C032  F00C         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+3,___lltoft@c+3
  1878  0012DA  ECCF  F00B         	call	___lltoft	;wreg free
  1879  0012DE  C009  F012         	movff	?___lltoft,___ftneg@f1
  1880  0012E2  C00A  F013         	movff	?___lltoft+1,___ftneg@f1+1
  1881  0012E6  C00B  F014         	movff	?___lltoft+2,___ftneg@f1+2
  1882  0012EA  ECAA  F00D         	call	___ftneg	;wreg free
  1883  0012EE  C012  F015         	movff	?___ftneg,___ftadd@f1
  1884  0012F2  C013  F016         	movff	?___ftneg+1,___ftadd@f1+1
  1885  0012F6  C014  F017         	movff	?___ftneg+2,___ftadd@f1+2
  1886  0012FA  C02C  F018         	movff	LCD_DisplayFloatNumber@v_floatNum_f32,___ftadd@f2
  1887  0012FE  C02D  F019         	movff	LCD_DisplayFloatNumber@v_floatNum_f32+1,___ftadd@f2+1
  1888  001302  C02E  F01A         	movff	LCD_DisplayFloatNumber@v_floatNum_f32+2,___ftadd@f2+2
  1889  001306  ECA8  F005         	call	___ftadd	;wreg free
  1890  00130A  C015  F02C         	movff	?___ftadd,LCD_DisplayFloatNumber@v_floatNum_f32
  1891  00130E  C016  F02D         	movff	?___ftadd+1,LCD_DisplayFloatNumber@v_floatNum_f32+1
  1892  001312  C017  F02E         	movff	?___ftadd+2,LCD_DisplayFloatNumber@v_floatNum_f32+2
  1893                           
  1894                           ;lcd.c: 631: v_decNumber_u32 = v_floatNum_f32 * 1000000;
  1895  001316  0E24               	movlw	36
  1896  001318  6E10               	movwf	___ftmul@f2,c
  1897  00131A  0E74               	movlw	116
  1898  00131C  6E11               	movwf	___ftmul@f2+1,c
  1899  00131E  0E49               	movlw	73
  1900  001320  6E12               	movwf	___ftmul@f2+2,c
  1901  001322  C02C  F00D         	movff	LCD_DisplayFloatNumber@v_floatNum_f32,___ftmul@f1
  1902  001326  C02D  F00E         	movff	LCD_DisplayFloatNumber@v_floatNum_f32+1,___ftmul@f1+1
  1903  00132A  C02E  F00F         	movff	LCD_DisplayFloatNumber@v_floatNum_f32+2,___ftmul@f1+2
  1904  00132E  EC58  F008         	call	___ftmul	;wreg free
  1905  001332  C00D  F01C         	movff	?___ftmul,___fttol@f1
  1906  001336  C00E  F01D         	movff	?___ftmul+1,___fttol@f1+1
  1907  00133A  C00F  F01E         	movff	?___ftmul+2,___fttol@f1+2
  1908  00133E  ECDE  F007         	call	___fttol	;wreg free
  1909  001342  C01C  F02F         	movff	?___fttol,LCD_DisplayFloatNumber@v_decNumber_u32
  1910  001346  C01D  F030         	movff	?___fttol+1,LCD_DisplayFloatNumber@v_decNumber_u32+1
  1911  00134A  C01E  F031         	movff	?___fttol+2,LCD_DisplayFloatNumber@v_decNumber_u32+2
  1912  00134E  C01F  F032         	movff	?___fttol+3,LCD_DisplayFloatNumber@v_decNumber_u32+3
  1913                           
  1914                           ;lcd.c: 632: LCD_DisplayNumber(10u,v_decNumber_u32,0xffu);
  1915  001352  C02F  F00E         	movff	LCD_DisplayFloatNumber@v_decNumber_u32,LCD_DisplayNumber@v_number_u32
  1916  001356  C030  F00F         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+1,LCD_DisplayNumber@v_number_u32+1
  1917  00135A  C031  F010         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+2,LCD_DisplayNumber@v_number_u32+2
  1918  00135E  C032  F011         	movff	LCD_DisplayFloatNumber@v_decNumber_u32+3,LCD_DisplayNumber@v_number_u32+3
  1919  001362  0EFF               	movlw	255
  1920  001364  6E12               	movwf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,c
  1921  001366  0E0A               	movlw	10
  1922  001368  ECC0  F004         	call	_LCD_DisplayNumber
  1923  00136C  0012               	return		;funcret
  1924  00136E                     __end_of_LCD_DisplayFloatNumber:
  1925                           	opt stack 0
  1926                           tblptru	equ	0xFF8
  1927                           tblptrh	equ	0xFF7
  1928                           tblptrl	equ	0xFF6
  1929                           tablat	equ	0xFF5
  1930                           prodl	equ	0xFF3
  1931                           postinc0	equ	0xFEE
  1932                           wreg	equ	0xFE8
  1933                           postdec1	equ	0xFE5
  1934                           fsr1l	equ	0xFE1
  1935                           indf2	equ	0xFDF
  1936                           postinc2	equ	0xFDE
  1937                           postdec2	equ	0xFDD
  1938                           fsr2h	equ	0xFDA
  1939                           fsr2l	equ	0xFD9
  1940                           status	equ	0xFD8
  1941                           
  1942 ;; *************** function ___lltoft *****************
  1943 ;; Defined at:
  1944 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  c               4    8[COMRAM] unsigned long 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  exp             1   16[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  3    8[COMRAM] float 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1958 ;;      Params:         4       0       0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0
  1960 ;;      Temps:          4       0       0       0       0       0       0
  1961 ;;      Totals:         9       0       0       0       0       0       0
  1962 ;;Total ram usage:        9 bytes
  1963 ;; Hardware stack levels used:    1
  1964 ;; Hardware stack levels required when called:    1
  1965 ;; This function calls:
  1966 ;;		___ftpack
  1967 ;; This function is called by:
  1968 ;;		_LCD_DisplayFloatNumber
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text7
  1973  00179E                     __ptext7:
  1974                           	opt stack 0
  1975  00179E                     ___lltoft:
  1976                           	opt stack 27
  1977                           
  1978                           ;incstack = 0
  1979  00179E  0E8E               	movlw	142
  1980  0017A0  6E11               	movwf	___lltoft@exp,c
  1981  0017A2  D006               	goto	l2266
  1982  0017A4                     l2264:
  1983  0017A4  90D8               	bcf	status,0,c
  1984  0017A6  320C               	rrcf	___lltoft@c+3,f,c
  1985  0017A8  320B               	rrcf	___lltoft@c+2,f,c
  1986  0017AA  320A               	rrcf	___lltoft@c+1,f,c
  1987  0017AC  3209               	rrcf	___lltoft@c,f,c
  1988  0017AE  2A11               	incf	___lltoft@exp,f,c
  1989  0017B0                     l2266:
  1990  0017B0  0E00               	movlw	0
  1991  0017B2  1409               	andwf	___lltoft@c,w,c
  1992  0017B4  6E0D               	movwf	??___lltoft& (0+255),c
  1993  0017B6  0E00               	movlw	0
  1994  0017B8  140A               	andwf	___lltoft@c+1,w,c
  1995  0017BA  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1996  0017BC  0E00               	movlw	0
  1997  0017BE  140B               	andwf	___lltoft@c+2,w,c
  1998  0017C0  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1999  0017C2  0EFF               	movlw	255
  2000  0017C4  140C               	andwf	___lltoft@c+3,w,c
  2001  0017C6  6E10               	movwf	(??___lltoft+3)& (0+255),c
  2002  0017C8  500D               	movf	??___lltoft,w,c
  2003  0017CA  100E               	iorwf	??___lltoft+1,w,c
  2004  0017CC  100F               	iorwf	??___lltoft+2,w,c
  2005  0017CE  1010               	iorwf	??___lltoft+3,w,c
  2006  0017D0  A4D8               	btfss	status,2,c
  2007  0017D2  D7E8               	goto	l2264
  2008  0017D4  C009  F001         	movff	___lltoft@c,___ftpack@arg
  2009  0017D8  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  2010  0017DC  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  2011  0017E0  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  2012  0017E4  0E00               	movlw	0
  2013  0017E6  6E05               	movwf	___ftpack@sign,c
  2014  0017E8  ECE1  F00A         	call	___ftpack	;wreg free
  2015  0017EC  C001  F009         	movff	?___ftpack,?___lltoft
  2016  0017F0  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  2017  0017F4  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  2018  0017F8  0012               	return	
  2019  0017FA                     __end_of___lltoft:
  2020                           	opt stack 0
  2021                           tblptru	equ	0xFF8
  2022                           tblptrh	equ	0xFF7
  2023                           tblptrl	equ	0xFF6
  2024                           tablat	equ	0xFF5
  2025                           prodl	equ	0xFF3
  2026                           postinc0	equ	0xFEE
  2027                           wreg	equ	0xFE8
  2028                           postdec1	equ	0xFE5
  2029                           fsr1l	equ	0xFE1
  2030                           indf2	equ	0xFDF
  2031                           postinc2	equ	0xFDE
  2032                           postdec2	equ	0xFDD
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function ___fttol *****************
  2038 ;; Defined at:
  2039 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  f1              3   27[COMRAM] float 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  lval            4   37[COMRAM] unsigned long 
  2044 ;;  exp1            1   41[COMRAM] unsigned char 
  2045 ;;  sign1           1   36[COMRAM] unsigned char 
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  4   27[COMRAM] long 
  2048 ;; Registers used:
  2049 ;;		wreg, status,2, status,0
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2055 ;;      Params:         4       0       0       0       0       0       0
  2056 ;;      Locals:         6       0       0       0       0       0       0
  2057 ;;      Temps:          5       0       0       0       0       0       0
  2058 ;;      Totals:        15       0       0       0       0       0       0
  2059 ;;Total ram usage:       15 bytes
  2060 ;; Hardware stack levels used:    1
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_LCD_DisplayFloatNumber
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text8
  2069  000FBC                     __ptext8:
  2070                           	opt stack 0
  2071  000FBC                     ___fttol:
  2072                           	opt stack 28
  2073                           
  2074                           ;incstack = 0
  2075  000FBC  C01E  F020         	movff	___fttol@f1+2,??___fttol
  2076  000FC0  6A21               	clrf	(??___fttol+1)& (0+255),c
  2077  000FC2  6A22               	clrf	(??___fttol+2)& (0+255),c
  2078  000FC4  341D               	rlcf	___fttol@f1+1,w,c
  2079  000FC6  3620               	rlcf	??___fttol& (0+255),f,c
  2080  000FC8  E301               	bnc	u2891
  2081  000FCA  8021               	bsf	(??___fttol+1)& (0+255),0,c
  2082  000FCC                     u2891:
  2083  000FCC  5020               	movf	??___fttol,w,c
  2084  000FCE  6E2A               	movwf	___fttol@exp1,c
  2085  000FD0  502A               	movf	___fttol@exp1,w,c
  2086  000FD2  A4D8               	btfss	status,2,c
  2087  000FD4  D009               	goto	l2222
  2088  000FD6  0E00               	movlw	0
  2089  000FD8  6E1C               	movwf	?___fttol,c
  2090  000FDA  0E00               	movlw	0
  2091  000FDC  6E1D               	movwf	?___fttol+1,c
  2092  000FDE  0E00               	movlw	0
  2093  000FE0  6E1E               	movwf	?___fttol+2,c
  2094  000FE2  0E00               	movlw	0
  2095  000FE4  6E1F               	movwf	?___fttol+3,c
  2096  000FE6  0012               	return	
  2097  000FE8                     l2222:
  2098  000FE8  0E17               	movlw	23
  2099  000FEA  6E20               	movwf	??___fttol& (0+255),c
  2100  000FEC  C01C  F021         	movff	___fttol@f1,??___fttol+1
  2101  000FF0  C01D  F022         	movff	___fttol@f1+1,??___fttol+2
  2102  000FF4  C01E  F023         	movff	___fttol@f1+2,??___fttol+3
  2103  000FF8  2820               	incf	??___fttol,w,c
  2104  000FFA  6E24               	movwf	(??___fttol+4)& (0+255),c
  2105  000FFC  D004               	goto	u2910
  2106  000FFE                     u2915:
  2107  000FFE  90D8               	bcf	status,0,c
  2108  001000  3223               	rrcf	??___fttol+3,f,c
  2109  001002  3222               	rrcf	??___fttol+2,f,c
  2110  001004  3221               	rrcf	??___fttol+1,f,c
  2111  001006                     u2910:
  2112  001006  2E24               	decfsz	(??___fttol+4)& (0+255),f,c
  2113  001008  D7FA               	goto	u2915
  2114  00100A  5021               	movf	??___fttol+1,w,c
  2115  00100C  6E25               	movwf	___fttol@sign1,c
  2116  00100E  8E1D               	bsf	___fttol@f1+1,7,c
  2117  001010  0EFF               	movlw	255
  2118  001012  161C               	andwf	___fttol@f1,f,c
  2119  001014  0EFF               	movlw	255
  2120  001016  161D               	andwf	___fttol@f1+1,f,c
  2121  001018  0E00               	movlw	0
  2122  00101A  161E               	andwf	___fttol@f1+2,f,c
  2123  00101C  501C               	movf	___fttol@f1,w,c
  2124  00101E  6E26               	movwf	___fttol@lval,c
  2125  001020  501D               	movf	___fttol@f1+1,w,c
  2126  001022  6E27               	movwf	___fttol@lval+1,c
  2127  001024  501E               	movf	___fttol@f1+2,w,c
  2128  001026  6E28               	movwf	___fttol@lval+2,c
  2129  001028  6A29               	clrf	___fttol@lval+3,c
  2130  00102A  0E8E               	movlw	142
  2131  00102C  5E2A               	subwf	___fttol@exp1,f,c
  2132  00102E  AE2A               	btfss	___fttol@exp1,7,c
  2133  001030  D016               	goto	l2244
  2134  001032  502A               	movf	___fttol@exp1,w,c
  2135  001034  0A80               	xorlw	128
  2136  001036  0F8F               	addlw	143
  2137  001038  B0D8               	btfsc	status,0,c
  2138  00103A  D009               	goto	l2240
  2139  00103C  0E00               	movlw	0
  2140  00103E  6E1C               	movwf	?___fttol,c
  2141  001040  0E00               	movlw	0
  2142  001042  6E1D               	movwf	?___fttol+1,c
  2143  001044  0E00               	movlw	0
  2144  001046  6E1E               	movwf	?___fttol+2,c
  2145  001048  0E00               	movlw	0
  2146  00104A  6E1F               	movwf	?___fttol+3,c
  2147  00104C  0012               	return	
  2148  00104E                     l2240:
  2149  00104E  90D8               	bcf	status,0,c
  2150  001050  3229               	rrcf	___fttol@lval+3,f,c
  2151  001052  3228               	rrcf	___fttol@lval+2,f,c
  2152  001054  3227               	rrcf	___fttol@lval+1,f,c
  2153  001056  3226               	rrcf	___fttol@lval,f,c
  2154  001058  3E2A               	incfsz	___fttol@exp1,f,c
  2155  00105A  D7F9               	goto	l2240
  2156  00105C  D015               	goto	l2254
  2157  00105E                     l2244:
  2158  00105E  0E17               	movlw	23
  2159  001060  642A               	cpfsgt	___fttol@exp1,c
  2160  001062  D00F               	goto	l2252
  2161  001064  0E00               	movlw	0
  2162  001066  6E1C               	movwf	?___fttol,c
  2163  001068  0E00               	movlw	0
  2164  00106A  6E1D               	movwf	?___fttol+1,c
  2165  00106C  0E00               	movlw	0
  2166  00106E  6E1E               	movwf	?___fttol+2,c
  2167  001070  0E00               	movlw	0
  2168  001072  6E1F               	movwf	?___fttol+3,c
  2169  001074  0012               	return	
  2170  001076                     l2250:
  2171  001076  90D8               	bcf	status,0,c
  2172  001078  3626               	rlcf	___fttol@lval,f,c
  2173  00107A  3627               	rlcf	___fttol@lval+1,f,c
  2174  00107C  3628               	rlcf	___fttol@lval+2,f,c
  2175  00107E  3629               	rlcf	___fttol@lval+3,f,c
  2176  001080  062A               	decf	___fttol@exp1,f,c
  2177  001082                     l2252:
  2178  001082  502A               	movf	___fttol@exp1,w,c
  2179  001084  A4D8               	btfss	status,2,c
  2180  001086  D7F7               	goto	l2250
  2181  001088                     l2254:
  2182  001088  5025               	movf	___fttol@sign1,w,c
  2183  00108A  B4D8               	btfsc	status,2,c
  2184  00108C  D008               	goto	l2258
  2185  00108E  1E29               	comf	___fttol@lval+3,f,c
  2186  001090  1E28               	comf	___fttol@lval+2,f,c
  2187  001092  1E27               	comf	___fttol@lval+1,f,c
  2188  001094  6C26               	negf	___fttol@lval,c
  2189  001096  0E00               	movlw	0
  2190  001098  2227               	addwfc	___fttol@lval+1,f,c
  2191  00109A  2228               	addwfc	___fttol@lval+2,f,c
  2192  00109C  2229               	addwfc	___fttol@lval+3,f,c
  2193  00109E                     l2258:
  2194  00109E  C026  F01C         	movff	___fttol@lval,?___fttol
  2195  0010A2  C027  F01D         	movff	___fttol@lval+1,?___fttol+1
  2196  0010A6  C028  F01E         	movff	___fttol@lval+2,?___fttol+2
  2197  0010AA  C029  F01F         	movff	___fttol@lval+3,?___fttol+3
  2198  0010AE  0012               	return	
  2199  0010B0                     __end_of___fttol:
  2200                           	opt stack 0
  2201                           tblptru	equ	0xFF8
  2202                           tblptrh	equ	0xFF7
  2203                           tblptrl	equ	0xFF6
  2204                           tablat	equ	0xFF5
  2205                           prodl	equ	0xFF3
  2206                           postinc0	equ	0xFEE
  2207                           wreg	equ	0xFE8
  2208                           postdec1	equ	0xFE5
  2209                           fsr1l	equ	0xFE1
  2210                           indf2	equ	0xFDF
  2211                           postinc2	equ	0xFDE
  2212                           postdec2	equ	0xFDD
  2213                           fsr2h	equ	0xFDA
  2214                           fsr2l	equ	0xFD9
  2215                           status	equ	0xFD8
  2216                           
  2217 ;; *************** function ___ftneg *****************
  2218 ;; Defined at:
  2219 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  2220 ;; Parameters:    Size  Location     Type
  2221 ;;  f1              3   17[COMRAM] float 
  2222 ;; Auto vars:     Size  Location     Type
  2223 ;;		None
  2224 ;; Return value:  Size  Location     Type
  2225 ;;                  3   17[COMRAM] float 
  2226 ;; Registers used:
  2227 ;;		wreg, status,2, status,0
  2228 ;; Tracked objects:
  2229 ;;		On entry : 0/0
  2230 ;;		On exit  : 0/0
  2231 ;;		Unchanged: 0/0
  2232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2233 ;;      Params:         3       0       0       0       0       0       0
  2234 ;;      Locals:         0       0       0       0       0       0       0
  2235 ;;      Temps:          0       0       0       0       0       0       0
  2236 ;;      Totals:         3       0       0       0       0       0       0
  2237 ;;Total ram usage:        3 bytes
  2238 ;; Hardware stack levels used:    1
  2239 ;; This function calls:
  2240 ;;		Nothing
  2241 ;; This function is called by:
  2242 ;;		_LCD_DisplayFloatNumber
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text9
  2247  001B54                     __ptext9:
  2248                           	opt stack 0
  2249  001B54                     ___ftneg:
  2250                           	opt stack 28
  2251                           
  2252                           ;incstack = 0
  2253  001B54  5012               	movf	___ftneg@f1,w,c
  2254  001B56  1013               	iorwf	___ftneg@f1+1,w,c
  2255  001B58  1014               	iorwf	___ftneg@f1+2,w,c
  2256  001B5A  B4D8               	btfsc	status,2,c
  2257  001B5C  D006               	goto	l661
  2258  001B5E  0E00               	movlw	0
  2259  001B60  1A12               	xorwf	___ftneg@f1,f,c
  2260  001B62  0E00               	movlw	0
  2261  001B64  1A13               	xorwf	___ftneg@f1+1,f,c
  2262  001B66  0E80               	movlw	128
  2263  001B68  1A14               	xorwf	___ftneg@f1+2,f,c
  2264  001B6A                     l661:
  2265  001B6A  C012  F012         	movff	___ftneg@f1,?___ftneg
  2266  001B6E  C013  F013         	movff	___ftneg@f1+1,?___ftneg+1
  2267  001B72  C014  F014         	movff	___ftneg@f1+2,?___ftneg+2
  2268  001B76  0012               	return		;funcret
  2269  001B78                     __end_of___ftneg:
  2270                           	opt stack 0
  2271                           tblptru	equ	0xFF8
  2272                           tblptrh	equ	0xFF7
  2273                           tblptrl	equ	0xFF6
  2274                           tablat	equ	0xFF5
  2275                           prodl	equ	0xFF3
  2276                           postinc0	equ	0xFEE
  2277                           wreg	equ	0xFE8
  2278                           postdec1	equ	0xFE5
  2279                           fsr1l	equ	0xFE1
  2280                           indf2	equ	0xFDF
  2281                           postinc2	equ	0xFDE
  2282                           postdec2	equ	0xFDD
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function ___ftmul *****************
  2288 ;; Defined at:
  2289 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  f1              3   12[COMRAM] float 
  2292 ;;  f2              3   15[COMRAM] float 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  2295 ;;  sign            1   26[COMRAM] unsigned char 
  2296 ;;  cntr            1   25[COMRAM] unsigned char 
  2297 ;;  exp             1   21[COMRAM] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  3   12[COMRAM] float 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0, cstack
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2307 ;;      Params:         6       0       0       0       0       0       0
  2308 ;;      Locals:         6       0       0       0       0       0       0
  2309 ;;      Temps:          3       0       0       0       0       0       0
  2310 ;;      Totals:        15       0       0       0       0       0       0
  2311 ;;Total ram usage:       15 bytes
  2312 ;; Hardware stack levels used:    1
  2313 ;; Hardware stack levels required when called:    1
  2314 ;; This function calls:
  2315 ;;		___ftpack
  2316 ;; This function is called by:
  2317 ;;		_LCD_DisplayFloatNumber
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text10
  2323  0010B0                     __ptext10:
  2324                           	opt stack 0
  2325  0010B0                     ___ftmul:
  2326                           	opt stack 29
  2327                           
  2328                           ;incstack = 0
  2329  0010B0  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  2330  0010B4  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2331  0010B6  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2332  0010B8  340E               	rlcf	___ftmul@f1+1,w,c
  2333  0010BA  3613               	rlcf	??___ftmul& (0+255),f,c
  2334  0010BC  E301               	bnc	u2821
  2335  0010BE  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2336  0010C0                     u2821:
  2337  0010C0  5013               	movf	??___ftmul,w,c
  2338  0010C2  6E16               	movwf	___ftmul@exp,c
  2339  0010C4  5016               	movf	___ftmul@exp,w,c
  2340  0010C6  A4D8               	btfss	status,2,c
  2341  0010C8  D007               	goto	l2170
  2342  0010CA  0E00               	movlw	0
  2343  0010CC  6E0D               	movwf	?___ftmul,c
  2344  0010CE  0E00               	movlw	0
  2345  0010D0  6E0E               	movwf	?___ftmul+1,c
  2346  0010D2  0E00               	movlw	0
  2347  0010D4  6E0F               	movwf	?___ftmul+2,c
  2348  0010D6  0012               	return	
  2349  0010D8                     l2170:
  2350  0010D8  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  2351  0010DC  6A14               	clrf	(??___ftmul+1)& (0+255),c
  2352  0010DE  6A15               	clrf	(??___ftmul+2)& (0+255),c
  2353  0010E0  3411               	rlcf	___ftmul@f2+1,w,c
  2354  0010E2  3613               	rlcf	??___ftmul& (0+255),f,c
  2355  0010E4  E301               	bnc	u2841
  2356  0010E6  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  2357  0010E8                     u2841:
  2358  0010E8  5013               	movf	??___ftmul,w,c
  2359  0010EA  6E1B               	movwf	___ftmul@sign,c
  2360  0010EC  501B               	movf	___ftmul@sign,w,c
  2361  0010EE  A4D8               	btfss	status,2,c
  2362  0010F0  D007               	goto	l2176
  2363  0010F2  0E00               	movlw	0
  2364  0010F4  6E0D               	movwf	?___ftmul,c
  2365  0010F6  0E00               	movlw	0
  2366  0010F8  6E0E               	movwf	?___ftmul+1,c
  2367  0010FA  0E00               	movlw	0
  2368  0010FC  6E0F               	movwf	?___ftmul+2,c
  2369  0010FE  0012               	return	
  2370  001100                     l2176:
  2371  001100  501B               	movf	___ftmul@sign,w,c
  2372  001102  0F7B               	addlw	123
  2373  001104  2616               	addwf	___ftmul@exp,f,c
  2374  001106  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  2375  00110A  5012               	movf	___ftmul@f2+2,w,c
  2376  00110C  1A1B               	xorwf	___ftmul@sign,f,c
  2377  00110E  0E80               	movlw	128
  2378  001110  161B               	andwf	___ftmul@sign,f,c
  2379  001112  8E0E               	bsf	___ftmul@f1+1,7,c
  2380  001114  8E11               	bsf	___ftmul@f2+1,7,c
  2381  001116  0EFF               	movlw	255
  2382  001118  1610               	andwf	___ftmul@f2,f,c
  2383  00111A  0EFF               	movlw	255
  2384  00111C  1611               	andwf	___ftmul@f2+1,f,c
  2385  00111E  0E00               	movlw	0
  2386  001120  1612               	andwf	___ftmul@f2+2,f,c
  2387  001122  0E00               	movlw	0
  2388  001124  6E17               	movwf	___ftmul@f3_as_product,c
  2389  001126  0E00               	movlw	0
  2390  001128  6E18               	movwf	___ftmul@f3_as_product+1,c
  2391  00112A  0E00               	movlw	0
  2392  00112C  6E19               	movwf	___ftmul@f3_as_product+2,c
  2393  00112E  0E07               	movlw	7
  2394  001130  6E1A               	movwf	___ftmul@cntr,c
  2395  001132                     l2190:
  2396  001132  A00D               	btfss	___ftmul@f1,0,c
  2397  001134  D006               	goto	l2194
  2398  001136  5010               	movf	___ftmul@f2,w,c
  2399  001138  2617               	addwf	___ftmul@f3_as_product,f,c
  2400  00113A  5011               	movf	___ftmul@f2+1,w,c
  2401  00113C  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2402  00113E  5012               	movf	___ftmul@f2+2,w,c
  2403  001140  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2404  001142                     l2194:
  2405  001142  90D8               	bcf	status,0,c
  2406  001144  320F               	rrcf	___ftmul@f1+2,f,c
  2407  001146  320E               	rrcf	___ftmul@f1+1,f,c
  2408  001148  320D               	rrcf	___ftmul@f1,f,c
  2409  00114A  90D8               	bcf	status,0,c
  2410  00114C  3610               	rlcf	___ftmul@f2,f,c
  2411  00114E  3611               	rlcf	___ftmul@f2+1,f,c
  2412  001150  3612               	rlcf	___ftmul@f2+2,f,c
  2413  001152  2E1A               	decfsz	___ftmul@cntr,f,c
  2414  001154  D7EE               	goto	l2190
  2415  001156  0E09               	movlw	9
  2416  001158  6E1A               	movwf	___ftmul@cntr,c
  2417  00115A                     l2200:
  2418  00115A  A00D               	btfss	___ftmul@f1,0,c
  2419  00115C  D006               	goto	l2204
  2420  00115E  5010               	movf	___ftmul@f2,w,c
  2421  001160  2617               	addwf	___ftmul@f3_as_product,f,c
  2422  001162  5011               	movf	___ftmul@f2+1,w,c
  2423  001164  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  2424  001166  5012               	movf	___ftmul@f2+2,w,c
  2425  001168  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  2426  00116A                     l2204:
  2427  00116A  90D8               	bcf	status,0,c
  2428  00116C  320F               	rrcf	___ftmul@f1+2,f,c
  2429  00116E  320E               	rrcf	___ftmul@f1+1,f,c
  2430  001170  320D               	rrcf	___ftmul@f1,f,c
  2431  001172  90D8               	bcf	status,0,c
  2432  001174  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  2433  001176  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  2434  001178  3217               	rrcf	___ftmul@f3_as_product,f,c
  2435  00117A  2E1A               	decfsz	___ftmul@cntr,f,c
  2436  00117C  D7EE               	goto	l2200
  2437  00117E  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  2438  001182  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2439  001186  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2440  00118A  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  2441  00118E  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  2442  001192  ECE1  F00A         	call	___ftpack	;wreg free
  2443  001196  C001  F00D         	movff	?___ftpack,?___ftmul
  2444  00119A  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  2445  00119E  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  2446  0011A2  0012               	return	
  2447  0011A4                     __end_of___ftmul:
  2448                           	opt stack 0
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           prodl	equ	0xFF3
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           postdec1	equ	0xFE5
  2457                           fsr1l	equ	0xFE1
  2458                           indf2	equ	0xFDF
  2459                           postinc2	equ	0xFDE
  2460                           postdec2	equ	0xFDD
  2461                           fsr2h	equ	0xFDA
  2462                           fsr2l	equ	0xFD9
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function ___ftadd *****************
  2466 ;; Defined at:
  2467 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;  f1              3   20[COMRAM] float 
  2470 ;;  f2              3   23[COMRAM] float 
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  exp1            1   31[COMRAM] unsigned char 
  2473 ;;  exp2            1   30[COMRAM] unsigned char 
  2474 ;;  sign            1   29[COMRAM] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  3   20[COMRAM] float 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2484 ;;      Params:         6       0       0       0       0       0       0
  2485 ;;      Locals:         3       0       0       0       0       0       0
  2486 ;;      Temps:          3       0       0       0       0       0       0
  2487 ;;      Totals:        12       0       0       0       0       0       0
  2488 ;;Total ram usage:       12 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    1
  2491 ;; This function calls:
  2492 ;;		___ftpack
  2493 ;; This function is called by:
  2494 ;;		_LCD_DisplayFloatNumber
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           	psect	text11
  2499  000B50                     __ptext11:
  2500                           	opt stack 0
  2501  000B50                     ___ftadd:
  2502                           	opt stack 27
  2503                           
  2504                           ;incstack = 0
  2505  000B50  C017  F01B         	movff	___ftadd@f1+2,??___ftadd
  2506  000B54  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  2507  000B56  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  2508  000B58  3416               	rlcf	___ftadd@f1+1,w,c
  2509  000B5A  361B               	rlcf	??___ftadd& (0+255),f,c
  2510  000B5C  E301               	bnc	u2611
  2511  000B5E  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  2512  000B60                     u2611:
  2513  000B60  501B               	movf	??___ftadd,w,c
  2514  000B62  6E20               	movwf	___ftadd@exp1,c
  2515  000B64  C01A  F01B         	movff	___ftadd@f2+2,??___ftadd
  2516  000B68  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  2517  000B6A  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  2518  000B6C  3419               	rlcf	___ftadd@f2+1,w,c
  2519  000B6E  361B               	rlcf	??___ftadd& (0+255),f,c
  2520  000B70  E301               	bnc	u2621
  2521  000B72  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  2522  000B74                     u2621:
  2523  000B74  501B               	movf	??___ftadd,w,c
  2524  000B76  6E1F               	movwf	___ftadd@exp2,c
  2525  000B78  5020               	movf	___ftadd@exp1,w,c
  2526  000B7A  B4D8               	btfsc	status,2,c
  2527  000B7C  D00B               	goto	l604
  2528  000B7E  501F               	movf	___ftadd@exp2,w,c
  2529  000B80  5C20               	subwf	___ftadd@exp1,w,c
  2530  000B82  B0D8               	btfsc	status,0,c
  2531  000B84  D00E               	goto	l2102
  2532  000B86  5020               	movf	___ftadd@exp1,w,c
  2533  000B88  0800               	sublw	0
  2534  000B8A  241F               	addwf	___ftadd@exp2,w,c
  2535  000B8C  6E1B               	movwf	??___ftadd& (0+255),c
  2536  000B8E  0E18               	movlw	24
  2537  000B90  641B               	cpfsgt	??___ftadd,c
  2538  000B92  D007               	goto	l2102
  2539  000B94                     l604:
  2540  000B94  C018  F015         	movff	___ftadd@f2,?___ftadd
  2541  000B98  C019  F016         	movff	___ftadd@f2+1,?___ftadd+1
  2542  000B9C  C01A  F017         	movff	___ftadd@f2+2,?___ftadd+2
  2543  000BA0  0012               	return	
  2544  000BA2                     l2102:
  2545  000BA2  501F               	movf	___ftadd@exp2,w,c
  2546  000BA4  B4D8               	btfsc	status,2,c
  2547  000BA6  D00B               	goto	l608
  2548  000BA8  5020               	movf	___ftadd@exp1,w,c
  2549  000BAA  5C1F               	subwf	___ftadd@exp2,w,c
  2550  000BAC  B0D8               	btfsc	status,0,c
  2551  000BAE  D00E               	goto	l2108
  2552  000BB0  501F               	movf	___ftadd@exp2,w,c
  2553  000BB2  0800               	sublw	0
  2554  000BB4  2420               	addwf	___ftadd@exp1,w,c
  2555  000BB6  6E1B               	movwf	??___ftadd& (0+255),c
  2556  000BB8  0E18               	movlw	24
  2557  000BBA  641B               	cpfsgt	??___ftadd,c
  2558  000BBC  D007               	goto	l2108
  2559  000BBE                     l608:
  2560  000BBE  C015  F015         	movff	___ftadd@f1,?___ftadd
  2561  000BC2  C016  F016         	movff	___ftadd@f1+1,?___ftadd+1
  2562  000BC6  C017  F017         	movff	___ftadd@f1+2,?___ftadd+2
  2563  000BCA  0012               	return	
  2564  000BCC                     l2108:
  2565  000BCC  0E06               	movlw	6
  2566  000BCE  6E1E               	movwf	___ftadd@sign,c
  2567  000BD0  BE17               	btfsc	___ftadd@f1+2,7,c
  2568  000BD2  8E1E               	bsf	___ftadd@sign,7,c
  2569  000BD4  BE1A               	btfsc	___ftadd@f2+2,7,c
  2570  000BD6  8C1E               	bsf	___ftadd@sign,6,c
  2571  000BD8  8E16               	bsf	___ftadd@f1+1,7,c
  2572  000BDA  0EFF               	movlw	255
  2573  000BDC  1615               	andwf	___ftadd@f1,f,c
  2574  000BDE  0EFF               	movlw	255
  2575  000BE0  1616               	andwf	___ftadd@f1+1,f,c
  2576  000BE2  0E00               	movlw	0
  2577  000BE4  1617               	andwf	___ftadd@f1+2,f,c
  2578  000BE6  8E19               	bsf	___ftadd@f2+1,7,c
  2579  000BE8  0EFF               	movlw	255
  2580  000BEA  1618               	andwf	___ftadd@f2,f,c
  2581  000BEC  0EFF               	movlw	255
  2582  000BEE  1619               	andwf	___ftadd@f2+1,f,c
  2583  000BF0  0E00               	movlw	0
  2584  000BF2  161A               	andwf	___ftadd@f2+2,f,c
  2585  000BF4  501F               	movf	___ftadd@exp2,w,c
  2586  000BF6  5C20               	subwf	___ftadd@exp1,w,c
  2587  000BF8  B0D8               	btfsc	status,0,c
  2588  000BFA  D01B               	goto	l2134
  2589  000BFC                     l2124:
  2590  000BFC  90D8               	bcf	status,0,c
  2591  000BFE  3618               	rlcf	___ftadd@f2,f,c
  2592  000C00  3619               	rlcf	___ftadd@f2+1,f,c
  2593  000C02  361A               	rlcf	___ftadd@f2+2,f,c
  2594  000C04  061F               	decf	___ftadd@exp2,f,c
  2595  000C06  5020               	movf	___ftadd@exp1,w,c
  2596  000C08  181F               	xorwf	___ftadd@exp2,w,c
  2597  000C0A  B4D8               	btfsc	status,2,c
  2598  000C0C  D00D               	goto	l2132
  2599  000C0E  061E               	decf	___ftadd@sign,f,c
  2600  000C10  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  2601  000C14  0E07               	movlw	7
  2602  000C16  161B               	andwf	??___ftadd,f,c
  2603  000C18  B4D8               	btfsc	status,2,c
  2604  000C1A  D006               	goto	l2132
  2605  000C1C  D7EF               	goto	l2124
  2606  000C1E                     l2130:
  2607  000C1E  90D8               	bcf	status,0,c
  2608  000C20  3217               	rrcf	___ftadd@f1+2,f,c
  2609  000C22  3216               	rrcf	___ftadd@f1+1,f,c
  2610  000C24  3215               	rrcf	___ftadd@f1,f,c
  2611  000C26  2A20               	incf	___ftadd@exp1,f,c
  2612  000C28                     l2132:
  2613  000C28  501F               	movf	___ftadd@exp2,w,c
  2614  000C2A  1820               	xorwf	___ftadd@exp1,w,c
  2615  000C2C  B4D8               	btfsc	status,2,c
  2616  000C2E  D01F               	goto	l619
  2617  000C30  D7F6               	goto	l2130
  2618  000C32                     l2134:
  2619  000C32  5020               	movf	___ftadd@exp1,w,c
  2620  000C34  5C1F               	subwf	___ftadd@exp2,w,c
  2621  000C36  B0D8               	btfsc	status,0,c
  2622  000C38  D01A               	goto	l619
  2623  000C3A                     l2136:
  2624  000C3A  90D8               	bcf	status,0,c
  2625  000C3C  3615               	rlcf	___ftadd@f1,f,c
  2626  000C3E  3616               	rlcf	___ftadd@f1+1,f,c
  2627  000C40  3617               	rlcf	___ftadd@f1+2,f,c
  2628  000C42  0620               	decf	___ftadd@exp1,f,c
  2629  000C44  5020               	movf	___ftadd@exp1,w,c
  2630  000C46  181F               	xorwf	___ftadd@exp2,w,c
  2631  000C48  B4D8               	btfsc	status,2,c
  2632  000C4A  D00D               	goto	l2144
  2633  000C4C  061E               	decf	___ftadd@sign,f,c
  2634  000C4E  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  2635  000C52  0E07               	movlw	7
  2636  000C54  161B               	andwf	??___ftadd,f,c
  2637  000C56  B4D8               	btfsc	status,2,c
  2638  000C58  D006               	goto	l2144
  2639  000C5A  D7EF               	goto	l2136
  2640  000C5C                     l2142:
  2641  000C5C  90D8               	bcf	status,0,c
  2642  000C5E  321A               	rrcf	___ftadd@f2+2,f,c
  2643  000C60  3219               	rrcf	___ftadd@f2+1,f,c
  2644  000C62  3218               	rrcf	___ftadd@f2,f,c
  2645  000C64  2A1F               	incf	___ftadd@exp2,f,c
  2646  000C66                     l2144:
  2647  000C66  501F               	movf	___ftadd@exp2,w,c
  2648  000C68  1820               	xorwf	___ftadd@exp1,w,c
  2649  000C6A  A4D8               	btfss	status,2,c
  2650  000C6C  D7F7               	goto	l2142
  2651  000C6E                     l619:
  2652  000C6E  AE1E               	btfss	___ftadd@sign,7,c
  2653  000C70  D00C               	goto	l628
  2654  000C72  0EFF               	movlw	255
  2655  000C74  1A15               	xorwf	___ftadd@f1,f,c
  2656  000C76  0EFF               	movlw	255
  2657  000C78  1A16               	xorwf	___ftadd@f1+1,f,c
  2658  000C7A  0EFF               	movlw	255
  2659  000C7C  1A17               	xorwf	___ftadd@f1+2,f,c
  2660  000C7E  0E01               	movlw	1
  2661  000C80  2615               	addwf	___ftadd@f1,f,c
  2662  000C82  0E00               	movlw	0
  2663  000C84  2216               	addwfc	___ftadd@f1+1,f,c
  2664  000C86  0E00               	movlw	0
  2665  000C88  2217               	addwfc	___ftadd@f1+2,f,c
  2666  000C8A                     l628:
  2667  000C8A  AC1E               	btfss	___ftadd@sign,6,c
  2668  000C8C  D00C               	goto	l2150
  2669  000C8E  0EFF               	movlw	255
  2670  000C90  1A18               	xorwf	___ftadd@f2,f,c
  2671  000C92  0EFF               	movlw	255
  2672  000C94  1A19               	xorwf	___ftadd@f2+1,f,c
  2673  000C96  0EFF               	movlw	255
  2674  000C98  1A1A               	xorwf	___ftadd@f2+2,f,c
  2675  000C9A  0E01               	movlw	1
  2676  000C9C  2618               	addwf	___ftadd@f2,f,c
  2677  000C9E  0E00               	movlw	0
  2678  000CA0  2219               	addwfc	___ftadd@f2+1,f,c
  2679  000CA2  0E00               	movlw	0
  2680  000CA4  221A               	addwfc	___ftadd@f2+2,f,c
  2681  000CA6                     l2150:
  2682  000CA6  0E00               	movlw	0
  2683  000CA8  6E1E               	movwf	___ftadd@sign,c
  2684  000CAA  5015               	movf	___ftadd@f1,w,c
  2685  000CAC  2618               	addwf	___ftadd@f2,f,c
  2686  000CAE  5016               	movf	___ftadd@f1+1,w,c
  2687  000CB0  2219               	addwfc	___ftadd@f2+1,f,c
  2688  000CB2  5017               	movf	___ftadd@f1+2,w,c
  2689  000CB4  221A               	addwfc	___ftadd@f2+2,f,c
  2690  000CB6  AE1A               	btfss	___ftadd@f2+2,7,c
  2691  000CB8  D00E               	goto	l2160
  2692  000CBA  0EFF               	movlw	255
  2693  000CBC  1A18               	xorwf	___ftadd@f2,f,c
  2694  000CBE  0EFF               	movlw	255
  2695  000CC0  1A19               	xorwf	___ftadd@f2+1,f,c
  2696  000CC2  0EFF               	movlw	255
  2697  000CC4  1A1A               	xorwf	___ftadd@f2+2,f,c
  2698  000CC6  0E01               	movlw	1
  2699  000CC8  2618               	addwf	___ftadd@f2,f,c
  2700  000CCA  0E00               	movlw	0
  2701  000CCC  2219               	addwfc	___ftadd@f2+1,f,c
  2702  000CCE  0E00               	movlw	0
  2703  000CD0  221A               	addwfc	___ftadd@f2+2,f,c
  2704  000CD2  0E01               	movlw	1
  2705  000CD4  6E1E               	movwf	___ftadd@sign,c
  2706  000CD6                     l2160:
  2707  000CD6  C018  F001         	movff	___ftadd@f2,___ftpack@arg
  2708  000CDA  C019  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2709  000CDE  C01A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2710  000CE2  C020  F004         	movff	___ftadd@exp1,___ftpack@exp
  2711  000CE6  C01E  F005         	movff	___ftadd@sign,___ftpack@sign
  2712  000CEA  ECE1  F00A         	call	___ftpack	;wreg free
  2713  000CEE  C001  F015         	movff	?___ftpack,?___ftadd
  2714  000CF2  C002  F016         	movff	?___ftpack+1,?___ftadd+1
  2715  000CF6  C003  F017         	movff	?___ftpack+2,?___ftadd+2
  2716  000CFA  0012               	return	
  2717  000CFC                     __end_of___ftadd:
  2718                           	opt stack 0
  2719                           tblptru	equ	0xFF8
  2720                           tblptrh	equ	0xFF7
  2721                           tblptrl	equ	0xFF6
  2722                           tablat	equ	0xFF5
  2723                           prodl	equ	0xFF3
  2724                           postinc0	equ	0xFEE
  2725                           wreg	equ	0xFE8
  2726                           postdec1	equ	0xFE5
  2727                           fsr1l	equ	0xFE1
  2728                           indf2	equ	0xFDF
  2729                           postinc2	equ	0xFDE
  2730                           postdec2	equ	0xFDD
  2731                           fsr2h	equ	0xFDA
  2732                           fsr2l	equ	0xFD9
  2733                           status	equ	0xFD8
  2734                           
  2735 ;; *************** function ___ftpack *****************
  2736 ;; Defined at:
  2737 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  2738 ;; Parameters:    Size  Location     Type
  2739 ;;  arg             3    0[COMRAM] unsigned um
  2740 ;;  exp             1    3[COMRAM] unsigned char 
  2741 ;;  sign            1    4[COMRAM] unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;		None
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  3    0[COMRAM] float 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2753 ;;      Params:         5       0       0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0
  2755 ;;      Temps:          3       0       0       0       0       0       0
  2756 ;;      Totals:         8       0       0       0       0       0       0
  2757 ;;Total ram usage:        8 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		___awtoft
  2763 ;;		___ftadd
  2764 ;;		___ftdiv
  2765 ;;		___ftmul
  2766 ;;		___lltoft
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text12
  2771  0015C2                     __ptext12:
  2772                           	opt stack 0
  2773  0015C2                     ___ftpack:
  2774                           	opt stack 29
  2775                           
  2776                           ;incstack = 0
  2777  0015C2  5004               	movf	___ftpack@exp,w,c
  2778  0015C4  B4D8               	btfsc	status,2,c
  2779  0015C6  D005               	goto	l1982
  2780  0015C8  5001               	movf	___ftpack@arg,w,c
  2781  0015CA  1002               	iorwf	___ftpack@arg+1,w,c
  2782  0015CC  1003               	iorwf	___ftpack@arg+2,w,c
  2783  0015CE  A4D8               	btfss	status,2,c
  2784  0015D0  D00C               	goto	l1988
  2785  0015D2                     l1982:
  2786  0015D2  0E00               	movlw	0
  2787  0015D4  6E01               	movwf	?___ftpack,c
  2788  0015D6  0E00               	movlw	0
  2789  0015D8  6E02               	movwf	?___ftpack+1,c
  2790  0015DA  0E00               	movlw	0
  2791  0015DC  6E03               	movwf	?___ftpack+2,c
  2792  0015DE  0012               	return	
  2793  0015E0                     l1986:
  2794  0015E0  2A04               	incf	___ftpack@exp,f,c
  2795  0015E2  90D8               	bcf	status,0,c
  2796  0015E4  3203               	rrcf	___ftpack@arg+2,f,c
  2797  0015E6  3202               	rrcf	___ftpack@arg+1,f,c
  2798  0015E8  3201               	rrcf	___ftpack@arg,f,c
  2799  0015EA                     l1988:
  2800  0015EA  0E00               	movlw	0
  2801  0015EC  1401               	andwf	___ftpack@arg,w,c
  2802  0015EE  6E06               	movwf	??___ftpack& (0+255),c
  2803  0015F0  0E00               	movlw	0
  2804  0015F2  1402               	andwf	___ftpack@arg+1,w,c
  2805  0015F4  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2806  0015F6  0EFE               	movlw	254
  2807  0015F8  1403               	andwf	___ftpack@arg+2,w,c
  2808  0015FA  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2809  0015FC  5006               	movf	??___ftpack,w,c
  2810  0015FE  1007               	iorwf	??___ftpack+1,w,c
  2811  001600  1008               	iorwf	??___ftpack+2,w,c
  2812  001602  B4D8               	btfsc	status,2,c
  2813  001604  D00C               	goto	l1994
  2814  001606  D7EC               	goto	l1986
  2815  001608                     l1990:
  2816  001608  2A04               	incf	___ftpack@exp,f,c
  2817  00160A  0E01               	movlw	1
  2818  00160C  2601               	addwf	___ftpack@arg,f,c
  2819  00160E  0E00               	movlw	0
  2820  001610  2202               	addwfc	___ftpack@arg+1,f,c
  2821  001612  0E00               	movlw	0
  2822  001614  2203               	addwfc	___ftpack@arg+2,f,c
  2823  001616  90D8               	bcf	status,0,c
  2824  001618  3203               	rrcf	___ftpack@arg+2,f,c
  2825  00161A  3202               	rrcf	___ftpack@arg+1,f,c
  2826  00161C  3201               	rrcf	___ftpack@arg,f,c
  2827  00161E                     l1994:
  2828  00161E  0E00               	movlw	0
  2829  001620  1401               	andwf	___ftpack@arg,w,c
  2830  001622  6E06               	movwf	??___ftpack& (0+255),c
  2831  001624  0E00               	movlw	0
  2832  001626  1402               	andwf	___ftpack@arg+1,w,c
  2833  001628  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2834  00162A  0EFF               	movlw	255
  2835  00162C  1403               	andwf	___ftpack@arg+2,w,c
  2836  00162E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2837  001630  5006               	movf	??___ftpack,w,c
  2838  001632  1007               	iorwf	??___ftpack+1,w,c
  2839  001634  1008               	iorwf	??___ftpack+2,w,c
  2840  001636  B4D8               	btfsc	status,2,c
  2841  001638  D006               	goto	l1998
  2842  00163A  D7E6               	goto	l1990
  2843  00163C                     l1996:
  2844  00163C  0604               	decf	___ftpack@exp,f,c
  2845  00163E  90D8               	bcf	status,0,c
  2846  001640  3601               	rlcf	___ftpack@arg,f,c
  2847  001642  3602               	rlcf	___ftpack@arg+1,f,c
  2848  001644  3603               	rlcf	___ftpack@arg+2,f,c
  2849  001646                     l1998:
  2850  001646  BE02               	btfsc	___ftpack@arg+1,7,c
  2851  001648  D003               	goto	l581
  2852  00164A  0E02               	movlw	2
  2853  00164C  6004               	cpfslt	___ftpack@exp,c
  2854  00164E  D7F6               	goto	l1996
  2855  001650                     l581:
  2856  001650  A004               	btfss	___ftpack@exp,0,c
  2857  001652  9E02               	bcf	___ftpack@arg+1,7,c
  2858  001654  90D8               	bcf	status,0,c
  2859  001656  3204               	rrcf	___ftpack@exp,f,c
  2860  001658  5004               	movf	___ftpack@exp,w,c
  2861  00165A  1203               	iorwf	___ftpack@arg+2,f,c
  2862  00165C  5005               	movf	___ftpack@sign,w,c
  2863  00165E  A4D8               	btfss	status,2,c
  2864  001660  8E03               	bsf	___ftpack@arg+2,7,c
  2865  001662  C001  F001         	movff	___ftpack@arg,?___ftpack
  2866  001666  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2867  00166A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2868  00166E  0012               	return	
  2869  001670                     __end_of___ftpack:
  2870                           	opt stack 0
  2871                           tblptru	equ	0xFF8
  2872                           tblptrh	equ	0xFF7
  2873                           tblptrl	equ	0xFF6
  2874                           tablat	equ	0xFF5
  2875                           prodl	equ	0xFF3
  2876                           postinc0	equ	0xFEE
  2877                           wreg	equ	0xFE8
  2878                           postdec1	equ	0xFE5
  2879                           fsr1l	equ	0xFE1
  2880                           indf2	equ	0xFDF
  2881                           postinc2	equ	0xFDE
  2882                           postdec2	equ	0xFDD
  2883                           fsr2h	equ	0xFDA
  2884                           fsr2l	equ	0xFD9
  2885                           status	equ	0xFD8
  2886                           
  2887 ;; *************** function _LCD_DisplayNumber *****************
  2888 ;; Defined at:
  2889 ;;		line 529 in file "../00-libfiles/lcd.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  v_numericSys    1    wreg     unsigned char 
  2892 ;;  v_number_u32    4   13[COMRAM] unsigned long 
  2893 ;;  v_numOfDigit    1   17[COMRAM] unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  v_numericSys    1   41[COMRAM] unsigned char 
  2896 ;;  a              10   29[COMRAM] unsigned char [10]
  2897 ;;  i               1   42[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2907 ;;      Params:         5       0       0       0       0       0       0
  2908 ;;      Locals:        14       0       0       0       0       0       0
  2909 ;;      Temps:         11       0       0       0       0       0       0
  2910 ;;      Totals:        30       0       0       0       0       0       0
  2911 ;;Total ram usage:       30 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    6
  2914 ;; This function calls:
  2915 ;;		_LCD_DisplayChar
  2916 ;;		___lldiv
  2917 ;; This function is called by:
  2918 ;;		_LCD_DisplayFloatNumber
  2919 ;;		_LCD_Printf
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text13
  2924  000980                     __ptext13:
  2925                           	opt stack 0
  2926  000980                     _LCD_DisplayNumber:
  2927                           	opt stack 23
  2928                           
  2929                           ;incstack = 0
  2930                           ;LCD_DisplayNumber@v_numericSystem_u8 stored from wreg
  2931  000980  6E2A               	movwf	LCD_DisplayNumber@v_numericSystem_u8,c
  2932                           
  2933                           ;lcd.c: 531: uint8_t i=0,a[10];
  2934  000982  0E00               	movlw	0
  2935  000984  6E2B               	movwf	LCD_DisplayNumber@i,c
  2936                           
  2937                           ;lcd.c: 533: if(2u == v_numericSystem_u8)
  2938  000986  0E02               	movlw	2
  2939  000988  182A               	xorwf	LCD_DisplayNumber@v_numericSystem_u8,w,c
  2940  00098A  B4D8               	btfsc	status,2,c
  2941  00098C  D034               	goto	l2056
  2942  00098E  D037               	goto	l2058
  2943  000990                     l2050:
  2944                           
  2945                           ;lcd.c: 536: {
  2946                           ;lcd.c: 539: i = (((v_number_u32)&(((uint8_t)1<<((v_numOfDigitsToDisplay_u8-1)))))!=0u);
  2947  000990  C012  F013         	movff	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,??_LCD_DisplayNumber
  2948  000994  0EFF               	movlw	-1
  2949  000996  2613               	addwf	??_LCD_DisplayNumber,f,c
  2950  000998  0E01               	movlw	1
  2951  00099A  6E14               	movwf	(??_LCD_DisplayNumber+1)& (0+255),c
  2952  00099C  0E00               	movlw	0
  2953  00099E  6E15               	movwf	(??_LCD_DisplayNumber+2)& (0+255),c
  2954  0009A0  2A13               	incf	??_LCD_DisplayNumber,f,c
  2955  0009A2  D003               	goto	u2504
  2956  0009A4                     u2505:
  2957  0009A4  90D8               	bcf	status,0,c
  2958  0009A6  3614               	rlcf	??_LCD_DisplayNumber+1,f,c
  2959  0009A8  3615               	rlcf	??_LCD_DisplayNumber+2,f,c
  2960  0009AA                     u2504:
  2961  0009AA  2E13               	decfsz	??_LCD_DisplayNumber,f,c
  2962  0009AC  D7FB               	goto	u2505
  2963  0009AE  C014  F016         	movff	??_LCD_DisplayNumber+1,??_LCD_DisplayNumber+3
  2964  0009B2  C015  F017         	movff	??_LCD_DisplayNumber+2,??_LCD_DisplayNumber+4
  2965  0009B6  0E00               	movlw	0
  2966  0009B8  BE17               	btfsc	(??_LCD_DisplayNumber+4)& (0+255),7,c
  2967  0009BA  0EFF               	movlw	255
  2968  0009BC  6E18               	movwf	(??_LCD_DisplayNumber+5)& (0+255),c
  2969  0009BE  6E19               	movwf	(??_LCD_DisplayNumber+6)& (0+255),c
  2970  0009C0  500E               	movf	LCD_DisplayNumber@v_number_u32,w,c
  2971  0009C2  1416               	andwf	??_LCD_DisplayNumber+3,w,c
  2972  0009C4  6E1A               	movwf	(??_LCD_DisplayNumber+7)& (0+255),c
  2973  0009C6  500F               	movf	LCD_DisplayNumber@v_number_u32+1,w,c
  2974  0009C8  1417               	andwf	??_LCD_DisplayNumber+4,w,c
  2975  0009CA  6E1B               	movwf	(??_LCD_DisplayNumber+8)& (0+255),c
  2976  0009CC  5010               	movf	LCD_DisplayNumber@v_number_u32+2,w,c
  2977  0009CE  1418               	andwf	??_LCD_DisplayNumber+5,w,c
  2978  0009D0  6E1C               	movwf	(??_LCD_DisplayNumber+9)& (0+255),c
  2979  0009D2  5011               	movf	LCD_DisplayNumber@v_number_u32+3,w,c
  2980  0009D4  1419               	andwf	??_LCD_DisplayNumber+6,w,c
  2981  0009D6  6E1D               	movwf	(??_LCD_DisplayNumber+10)& (0+255),c
  2982  0009D8  501A               	movf	??_LCD_DisplayNumber+7,w,c
  2983  0009DA  101B               	iorwf	??_LCD_DisplayNumber+8,w,c
  2984  0009DC  101C               	iorwf	??_LCD_DisplayNumber+9,w,c
  2985  0009DE  101D               	iorwf	??_LCD_DisplayNumber+10,w,c
  2986  0009E0  B4D8               	btfsc	status,2,c
  2987  0009E2  D002               	goto	u2510
  2988  0009E4  0E01               	movlw	1
  2989  0009E6  D001               	goto	u2520
  2990  0009E8                     u2510:
  2991  0009E8  0E00               	movlw	0
  2992  0009EA                     u2520:
  2993  0009EA  6E2B               	movwf	LCD_DisplayNumber@i,c
  2994                           
  2995                           ;lcd.c: 540: LCD_DisplayChar(((i)+0x30));
  2996  0009EC  502B               	movf	LCD_DisplayNumber@i,w,c
  2997  0009EE  0F30               	addlw	48
  2998  0009F0  EC85  F00D         	call	_LCD_DisplayChar
  2999                           
  3000                           ;lcd.c: 541: v_numOfDigitsToDisplay_u8--;
  3001  0009F4  0612               	decf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,f,c
  3002  0009F6                     l2056:
  3003  0009F6  5012               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w,c
  3004  0009F8  B4D8               	btfsc	status,2,c
  3005  0009FA  0012               	return	
  3006  0009FC  D7C9               	goto	l2050
  3007  0009FE                     l2058:
  3008                           
  3009                           ;lcd.c: 544: else if(v_number_u32==0)
  3010  0009FE  500E               	movf	LCD_DisplayNumber@v_number_u32,w,c
  3011  000A00  100F               	iorwf	LCD_DisplayNumber@v_number_u32+1,w,c
  3012  000A02  1010               	iorwf	LCD_DisplayNumber@v_number_u32+2,w,c
  3013  000A04  1011               	iorwf	LCD_DisplayNumber@v_number_u32+3,w,c
  3014  000A06  A4D8               	btfss	status,2,c
  3015  000A08  D004               	goto	l2062
  3016                           
  3017                           ;lcd.c: 545: {
  3018                           ;lcd.c: 549: LCD_DisplayChar('0');
  3019  000A0A  0E30               	movlw	48
  3020  000A0C  EC85  F00D         	call	_LCD_DisplayChar
  3021                           
  3022                           ;lcd.c: 550: }
  3023  000A10  0012               	return	
  3024  000A12                     l2062:
  3025                           
  3026                           ;lcd.c: 551: else
  3027                           ;lcd.c: 552: {
  3028                           ;lcd.c: 553: for(i=0;i<v_numOfDigitsToDisplay_u8;i++)
  3029  000A12  0E00               	movlw	0
  3030  000A14  6E2B               	movwf	LCD_DisplayNumber@i,c
  3031  000A16  D04D               	goto	l2080
  3032  000A18                     l2064:
  3033                           
  3034                           ;lcd.c: 554: {
  3035                           ;lcd.c: 557: if(v_number_u32!=0)
  3036  000A18  500E               	movf	LCD_DisplayNumber@v_number_u32,w,c
  3037  000A1A  100F               	iorwf	LCD_DisplayNumber@v_number_u32+1,w,c
  3038  000A1C  1010               	iorwf	LCD_DisplayNumber@v_number_u32+2,w,c
  3039  000A1E  1011               	iorwf	LCD_DisplayNumber@v_number_u32+3,w,c
  3040  000A20  B4D8               	btfsc	status,2,c
  3041  000A22  D035               	goto	l2070
  3042                           
  3043                           ;lcd.c: 558: {
  3044                           ;lcd.c: 565: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u3
      +                          2/v_numericSystem_u8)));
  3045  000A24  502B               	movf	LCD_DisplayNumber@i,w,c
  3046  000A26  0D01               	mullw	1
  3047  000A28  0E1E               	movlw	low LCD_DisplayNumber@a
  3048  000A2A  24F3               	addwf	prodl,w,c
  3049  000A2C  6ED9               	movwf	fsr2l,c
  3050  000A2E  0E00               	movlw	high LCD_DisplayNumber@a
  3051  000A30  20F4               	addwfc	prodh,w,c
  3052  000A32  6EDA               	movwf	fsr2h,c
  3053  000A34  C00E  F001         	movff	LCD_DisplayNumber@v_number_u32,___lldiv@dividend
  3054  000A38  C00F  F002         	movff	LCD_DisplayNumber@v_number_u32+1,___lldiv@dividend+1
  3055  000A3C  C010  F003         	movff	LCD_DisplayNumber@v_number_u32+2,___lldiv@dividend+2
  3056  000A40  C011  F004         	movff	LCD_DisplayNumber@v_number_u32+3,___lldiv@dividend+3
  3057  000A44  502A               	movf	LCD_DisplayNumber@v_numericSystem_u8,w,c
  3058  000A46  6E05               	movwf	___lldiv@divisor,c
  3059  000A48  6A06               	clrf	___lldiv@divisor+1,c
  3060  000A4A  6A07               	clrf	___lldiv@divisor+2,c
  3061  000A4C  6A08               	clrf	___lldiv@divisor+3,c
  3062  000A4E  EC8E  F00B         	call	___lldiv	;wreg free
  3063  000A52  5001               	movf	?___lldiv,w,c
  3064  000A54  022A               	mulwf	LCD_DisplayNumber@v_numericSystem_u8,c
  3065  000A56  50F3               	movf	prodl,w,c
  3066  000A58  0800               	sublw	0
  3067  000A5A  240E               	addwf	LCD_DisplayNumber@v_number_u32,w,c
  3068  000A5C  6EDF               	movwf	indf2,c
  3069                           
  3070                           ;lcd.c: 566: v_number_u32=v_number_u32/v_numericSystem_u8;
  3071  000A5E  C00E  F001         	movff	LCD_DisplayNumber@v_number_u32,___lldiv@dividend
  3072  000A62  C00F  F002         	movff	LCD_DisplayNumber@v_number_u32+1,___lldiv@dividend+1
  3073  000A66  C010  F003         	movff	LCD_DisplayNumber@v_number_u32+2,___lldiv@dividend+2
  3074  000A6A  C011  F004         	movff	LCD_DisplayNumber@v_number_u32+3,___lldiv@dividend+3
  3075  000A6E  502A               	movf	LCD_DisplayNumber@v_numericSystem_u8,w,c
  3076  000A70  6E05               	movwf	___lldiv@divisor,c
  3077  000A72  6A06               	clrf	___lldiv@divisor+1,c
  3078  000A74  6A07               	clrf	___lldiv@divisor+2,c
  3079  000A76  6A08               	clrf	___lldiv@divisor+3,c
  3080  000A78  EC8E  F00B         	call	___lldiv	;wreg free
  3081  000A7C  C001  F00E         	movff	?___lldiv,LCD_DisplayNumber@v_number_u32
  3082  000A80  C002  F00F         	movff	?___lldiv+1,LCD_DisplayNumber@v_number_u32+1
  3083  000A84  C003  F010         	movff	?___lldiv+2,LCD_DisplayNumber@v_number_u32+2
  3084  000A88  C004  F011         	movff	?___lldiv+3,LCD_DisplayNumber@v_number_u32+3
  3085                           
  3086                           ;lcd.c: 567: }
  3087  000A8C  D011               	goto	l2078
  3088  000A8E                     l2070:
  3089                           
  3090                           ;lcd.c: 568: else if( (v_numOfDigitsToDisplay_u8 == 0xffu) ||
  3091                           ;lcd.c: 569: (v_numOfDigitsToDisplay_u8 > 10u))
  3092  000A8E  2812               	incf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w,c
  3093  000A90  B4D8               	btfsc	status,2,c
  3094  000A92  D05A               	goto	l2092
  3095  000A94  0E0A               	movlw	10
  3096  000A96  6412               	cpfsgt	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,c
  3097  000A98  D001               	goto	l2076
  3098  000A9A  D056               	goto	l2092
  3099  000A9C                     l2076:
  3100                           
  3101                           ;lcd.c: 575: else
  3102                           ;lcd.c: 576: {
  3103                           ;lcd.c: 580: a[i]=0;
  3104  000A9C  502B               	movf	LCD_DisplayNumber@i,w,c
  3105  000A9E  0D01               	mullw	1
  3106  000AA0  0E1E               	movlw	low LCD_DisplayNumber@a
  3107  000AA2  24F3               	addwf	prodl,w,c
  3108  000AA4  6ED9               	movwf	fsr2l,c
  3109  000AA6  0E00               	movlw	high LCD_DisplayNumber@a
  3110  000AA8  20F4               	addwfc	prodh,w,c
  3111  000AAA  6EDA               	movwf	fsr2h,c
  3112  000AAC  0E00               	movlw	0
  3113  000AAE  6EDF               	movwf	indf2,c
  3114  000AB0                     l2078:
  3115  000AB0  2A2B               	incf	LCD_DisplayNumber@i,f,c
  3116  000AB2                     l2080:
  3117  000AB2  5012               	movf	LCD_DisplayNumber@v_numOfDigitsToDisplay_u8,w,c
  3118  000AB4  5C2B               	subwf	LCD_DisplayNumber@i,w,c
  3119  000AB6  B0D8               	btfsc	status,0,c
  3120  000AB8  D047               	goto	l2092
  3121  000ABA  D7AE               	goto	l2064
  3122  000ABC                     l2082:
  3123                           
  3124                           ;lcd.c: 585: {
  3125                           ;lcd.c: 587: LCD_DisplayChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  3126  000ABC  0EFF               	movlw	255
  3127  000ABE  6E13               	movwf	??_LCD_DisplayNumber& (0+255),c
  3128  000AC0  0EFF               	movlw	255
  3129  000AC2  6E14               	movwf	(??_LCD_DisplayNumber+1)& (0+255),c
  3130  000AC4  502B               	movf	LCD_DisplayNumber@i,w,c
  3131  000AC6  6E15               	movwf	(??_LCD_DisplayNumber+2)& (0+255),c
  3132  000AC8  6A16               	clrf	(??_LCD_DisplayNumber+3)& (0+255),c
  3133  000ACA  5013               	movf	??_LCD_DisplayNumber,w,c
  3134  000ACC  2615               	addwf	??_LCD_DisplayNumber+2,f,c
  3135  000ACE  5014               	movf	??_LCD_DisplayNumber+1,w,c
  3136  000AD0  2216               	addwfc	??_LCD_DisplayNumber+3,f,c
  3137  000AD2  0E1E               	movlw	low LCD_DisplayNumber@a
  3138  000AD4  2415               	addwf	??_LCD_DisplayNumber+2,w,c
  3139  000AD6  6ED9               	movwf	fsr2l,c
  3140  000AD8  0E00               	movlw	high LCD_DisplayNumber@a
  3141  000ADA  2016               	addwfc	??_LCD_DisplayNumber+3,w,c
  3142  000ADC  6EDA               	movwf	fsr2h,c
  3143  000ADE  0E0A               	movlw	10
  3144  000AE0  60DF               	cpfslt	indf2,c
  3145  000AE2  D015               	goto	l2086
  3146  000AE4  0EFF               	movlw	255
  3147  000AE6  6E13               	movwf	??_LCD_DisplayNumber& (0+255),c
  3148  000AE8  0EFF               	movlw	255
  3149  000AEA  6E14               	movwf	(??_LCD_DisplayNumber+1)& (0+255),c
  3150  000AEC  502B               	movf	LCD_DisplayNumber@i,w,c
  3151  000AEE  6E15               	movwf	(??_LCD_DisplayNumber+2)& (0+255),c
  3152  000AF0  6A16               	clrf	(??_LCD_DisplayNumber+3)& (0+255),c
  3153  000AF2  5013               	movf	??_LCD_DisplayNumber,w,c
  3154  000AF4  2615               	addwf	??_LCD_DisplayNumber+2,f,c
  3155  000AF6  5014               	movf	??_LCD_DisplayNumber+1,w,c
  3156  000AF8  2216               	addwfc	??_LCD_DisplayNumber+3,f,c
  3157  000AFA  0E1E               	movlw	low LCD_DisplayNumber@a
  3158  000AFC  2415               	addwf	??_LCD_DisplayNumber+2,w,c
  3159  000AFE  6ED9               	movwf	fsr2l,c
  3160  000B00  0E00               	movlw	high LCD_DisplayNumber@a
  3161  000B02  2016               	addwfc	??_LCD_DisplayNumber+3,w,c
  3162  000B04  6EDA               	movwf	fsr2h,c
  3163  000B06  50DF               	movf	indf2,w,c
  3164  000B08  6E17               	movwf	(??_LCD_DisplayNumber+4)& (0+255),c
  3165  000B0A  0E30               	movlw	48
  3166  000B0C  D014               	goto	L1
  3167  000B0E                     l2086:
  3168  000B0E  0EFF               	movlw	255
  3169  000B10  6E13               	movwf	??_LCD_DisplayNumber& (0+255),c
  3170  000B12  0EFF               	movlw	255
  3171  000B14  6E14               	movwf	(??_LCD_DisplayNumber+1)& (0+255),c
  3172  000B16  502B               	movf	LCD_DisplayNumber@i,w,c
  3173  000B18  6E15               	movwf	(??_LCD_DisplayNumber+2)& (0+255),c
  3174  000B1A  6A16               	clrf	(??_LCD_DisplayNumber+3)& (0+255),c
  3175  000B1C  5013               	movf	??_LCD_DisplayNumber,w,c
  3176  000B1E  2615               	addwf	??_LCD_DisplayNumber+2,f,c
  3177  000B20  5014               	movf	??_LCD_DisplayNumber+1,w,c
  3178  000B22  2216               	addwfc	??_LCD_DisplayNumber+3,f,c
  3179  000B24  0E1E               	movlw	low LCD_DisplayNumber@a
  3180  000B26  2415               	addwf	??_LCD_DisplayNumber+2,w,c
  3181  000B28  6ED9               	movwf	fsr2l,c
  3182  000B2A  0E00               	movlw	high LCD_DisplayNumber@a
  3183  000B2C  2016               	addwfc	??_LCD_DisplayNumber+3,w,c
  3184  000B2E  6EDA               	movwf	fsr2h,c
  3185  000B30  50DF               	movf	indf2,w,c
  3186  000B32  6E17               	movwf	(??_LCD_DisplayNumber+4)& (0+255),c
  3187  000B34  0E37               	movlw	55
  3188  000B36                     L1:
  3189  000B36  2417               	addwf	??_LCD_DisplayNumber+4,w,c
  3190  000B38  6E28               	movwf	_LCD_DisplayNumber$283,c
  3191  000B3A  6A29               	clrf	_LCD_DisplayNumber$283+1,c
  3192  000B3C  0E00               	movlw	0
  3193  000B3E  2229               	addwfc	_LCD_DisplayNumber$283+1,f,c
  3194  000B40  5028               	movf	_LCD_DisplayNumber$283,w,c
  3195  000B42  EC85  F00D         	call	_LCD_DisplayChar
  3196                           
  3197                           ;lcd.c: 588: i--;
  3198  000B46  062B               	decf	LCD_DisplayNumber@i,f,c
  3199  000B48                     l2092:
  3200  000B48  502B               	movf	LCD_DisplayNumber@i,w,c
  3201  000B4A  B4D8               	btfsc	status,2,c
  3202  000B4C  0012               	return	
  3203  000B4E  D7B6               	goto	l2082
  3204  000B50                     __end_of_LCD_DisplayNumber:
  3205                           	opt stack 0
  3206                           tblptru	equ	0xFF8
  3207                           tblptrh	equ	0xFF7
  3208                           tblptrl	equ	0xFF6
  3209                           tablat	equ	0xFF5
  3210                           prodh	equ	0xFF4
  3211                           prodl	equ	0xFF3
  3212                           postinc0	equ	0xFEE
  3213                           wreg	equ	0xFE8
  3214                           postdec1	equ	0xFE5
  3215                           fsr1l	equ	0xFE1
  3216                           indf2	equ	0xFDF
  3217                           postinc2	equ	0xFDE
  3218                           postdec2	equ	0xFDD
  3219                           fsr2h	equ	0xFDA
  3220                           fsr2l	equ	0xFD9
  3221                           status	equ	0xFD8
  3222                           
  3223 ;; *************** function ___lldiv *****************
  3224 ;; Defined at:
  3225 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;  dividend        4    0[COMRAM] unsigned long 
  3228 ;;  divisor         4    4[COMRAM] unsigned long 
  3229 ;; Auto vars:     Size  Location     Type
  3230 ;;  quotient        4    8[COMRAM] unsigned long 
  3231 ;;  counter         1   12[COMRAM] unsigned char 
  3232 ;; Return value:  Size  Location     Type
  3233 ;;                  4    0[COMRAM] unsigned long 
  3234 ;; Registers used:
  3235 ;;		wreg, status,2, status,0
  3236 ;; Tracked objects:
  3237 ;;		On entry : 0/0
  3238 ;;		On exit  : 0/0
  3239 ;;		Unchanged: 0/0
  3240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3241 ;;      Params:         8       0       0       0       0       0       0
  3242 ;;      Locals:         5       0       0       0       0       0       0
  3243 ;;      Temps:          0       0       0       0       0       0       0
  3244 ;;      Totals:        13       0       0       0       0       0       0
  3245 ;;Total ram usage:       13 bytes
  3246 ;; Hardware stack levels used:    1
  3247 ;; This function calls:
  3248 ;;		Nothing
  3249 ;; This function is called by:
  3250 ;;		_LCD_DisplayNumber
  3251 ;; This function uses a non-reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text14
  3255  00171C                     __ptext14:
  3256                           	opt stack 0
  3257  00171C                     ___lldiv:
  3258                           	opt stack 28
  3259                           
  3260                           ;incstack = 0
  3261  00171C  0E00               	movlw	0
  3262  00171E  6E09               	movwf	___lldiv@quotient,c
  3263  001720  0E00               	movlw	0
  3264  001722  6E0A               	movwf	___lldiv@quotient+1,c
  3265  001724  0E00               	movlw	0
  3266  001726  6E0B               	movwf	___lldiv@quotient+2,c
  3267  001728  0E00               	movlw	0
  3268  00172A  6E0C               	movwf	___lldiv@quotient+3,c
  3269  00172C  5005               	movf	___lldiv@divisor,w,c
  3270  00172E  1006               	iorwf	___lldiv@divisor+1,w,c
  3271  001730  1007               	iorwf	___lldiv@divisor+2,w,c
  3272  001732  1008               	iorwf	___lldiv@divisor+3,w,c
  3273  001734  B4D8               	btfsc	status,2,c
  3274  001736  D02A               	goto	l706
  3275  001738  0E01               	movlw	1
  3276  00173A  6E0D               	movwf	___lldiv@counter,c
  3277  00173C  D006               	goto	l2022
  3278  00173E                     l2020:
  3279  00173E  90D8               	bcf	status,0,c
  3280  001740  3605               	rlcf	___lldiv@divisor,f,c
  3281  001742  3606               	rlcf	___lldiv@divisor+1,f,c
  3282  001744  3607               	rlcf	___lldiv@divisor+2,f,c
  3283  001746  3608               	rlcf	___lldiv@divisor+3,f,c
  3284  001748  2A0D               	incf	___lldiv@counter,f,c
  3285  00174A                     l2022:
  3286  00174A  AE08               	btfss	___lldiv@divisor+3,7,c
  3287  00174C  D7F8               	goto	l2020
  3288  00174E                     l2024:
  3289  00174E  90D8               	bcf	status,0,c
  3290  001750  3609               	rlcf	___lldiv@quotient,f,c
  3291  001752  360A               	rlcf	___lldiv@quotient+1,f,c
  3292  001754  360B               	rlcf	___lldiv@quotient+2,f,c
  3293  001756  360C               	rlcf	___lldiv@quotient+3,f,c
  3294  001758  5005               	movf	___lldiv@divisor,w,c
  3295  00175A  5C01               	subwf	___lldiv@dividend,w,c
  3296  00175C  5006               	movf	___lldiv@divisor+1,w,c
  3297  00175E  5802               	subwfb	___lldiv@dividend+1,w,c
  3298  001760  5007               	movf	___lldiv@divisor+2,w,c
  3299  001762  5803               	subwfb	___lldiv@dividend+2,w,c
  3300  001764  5008               	movf	___lldiv@divisor+3,w,c
  3301  001766  5804               	subwfb	___lldiv@dividend+3,w,c
  3302  001768  A0D8               	btfss	status,0,c
  3303  00176A  D009               	goto	l2032
  3304  00176C  5005               	movf	___lldiv@divisor,w,c
  3305  00176E  5E01               	subwf	___lldiv@dividend,f,c
  3306  001770  5006               	movf	___lldiv@divisor+1,w,c
  3307  001772  5A02               	subwfb	___lldiv@dividend+1,f,c
  3308  001774  5007               	movf	___lldiv@divisor+2,w,c
  3309  001776  5A03               	subwfb	___lldiv@dividend+2,f,c
  3310  001778  5008               	movf	___lldiv@divisor+3,w,c
  3311  00177A  5A04               	subwfb	___lldiv@dividend+3,f,c
  3312  00177C  8009               	bsf	___lldiv@quotient,0,c
  3313  00177E                     l2032:
  3314  00177E  90D8               	bcf	status,0,c
  3315  001780  3208               	rrcf	___lldiv@divisor+3,f,c
  3316  001782  3207               	rrcf	___lldiv@divisor+2,f,c
  3317  001784  3206               	rrcf	___lldiv@divisor+1,f,c
  3318  001786  3205               	rrcf	___lldiv@divisor,f,c
  3319  001788  2E0D               	decfsz	___lldiv@counter,f,c
  3320  00178A  D7E1               	goto	l2024
  3321  00178C                     l706:
  3322  00178C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3323  001790  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3324  001794  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3325  001798  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3326  00179C  0012               	return		;funcret
  3327  00179E                     __end_of___lldiv:
  3328                           	opt stack 0
  3329                           tblptru	equ	0xFF8
  3330                           tblptrh	equ	0xFF7
  3331                           tblptrl	equ	0xFF6
  3332                           tablat	equ	0xFF5
  3333                           prodh	equ	0xFF4
  3334                           prodl	equ	0xFF3
  3335                           postinc0	equ	0xFEE
  3336                           wreg	equ	0xFE8
  3337                           postdec1	equ	0xFE5
  3338                           fsr1l	equ	0xFE1
  3339                           indf2	equ	0xFDF
  3340                           postinc2	equ	0xFDE
  3341                           postdec2	equ	0xFDD
  3342                           fsr2h	equ	0xFDA
  3343                           fsr2l	equ	0xFD9
  3344                           status	equ	0xFD8
  3345                           
  3346 ;; *************** function _LCD_DisplayChar *****************
  3347 ;; Defined at:
  3348 ;;		line 392 in file "../00-libfiles/lcd.c"
  3349 ;; Parameters:    Size  Location     Type
  3350 ;;  v_lcdData_u8    1    wreg     unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  v_lcdData_u8    1    7[COMRAM] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3362 ;;      Params:         0       0       0       0       0       0       0
  3363 ;;      Locals:         1       0       0       0       0       0       0
  3364 ;;      Temps:          0       0       0       0       0       0       0
  3365 ;;      Totals:         1       0       0       0       0       0       0
  3366 ;;Total ram usage:        1 bytes
  3367 ;; Hardware stack levels used:    1
  3368 ;; Hardware stack levels required when called:    5
  3369 ;; This function calls:
  3370 ;;		_LCD_GoToNextLine
  3371 ;;		_lcd_DataWrite
  3372 ;; This function is called by:
  3373 ;;		_LCD_DisplayString
  3374 ;;		_LCD_DisplayNumber
  3375 ;;		_LCD_DisplayFloatNumber
  3376 ;;		_LCD_Printf
  3377 ;;		_LCD_ScrollMessage
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text15
  3382  001B0A                     __ptext15:
  3383                           	opt stack 0
  3384  001B0A                     _LCD_DisplayChar:
  3385                           	opt stack 23
  3386                           
  3387                           ;incstack = 0
  3388                           ;LCD_DisplayChar@v_lcdData_u8 stored from wreg
  3389  001B0A  6E08               	movwf	LCD_DisplayChar@v_lcdData_u8,c
  3390                           
  3391                           ;lcd.c: 394: if((v_LcdTrackCursorPos_U8>=LCDConfig.v_MaxSupportedChars_U8) || (v_lcdData
      +                          _u8=='\n'))
  3392  001B0C  5057               	movf	_LCDConfig+1,w,c
  3393  001B0E  5C64               	subwf	_v_LcdTrackCursorPos_U8,w,c
  3394  001B10  B0D8               	btfsc	status,0,c
  3395  001B12  D003               	goto	l1970
  3396  001B14  0E0A               	movlw	10
  3397  001B16  1808               	xorwf	LCD_DisplayChar@v_lcdData_u8,w,c
  3398  001B18  B4D8               	btfsc	status,2,c
  3399  001B1A                     l1970:
  3400                           
  3401                           ;lcd.c: 395: {
  3402                           ;lcd.c: 398: LCD_GoToNextLine();
  3403  001B1A  EC5B  F00D         	call	_LCD_GoToNextLine	;wreg free
  3404                           
  3405                           ;lcd.c: 399: }
  3406                           ;lcd.c: 400: if(v_lcdData_u8!='\n')
  3407  001B1E  0E0A               	movlw	10
  3408  001B20  1808               	xorwf	LCD_DisplayChar@v_lcdData_u8,w,c
  3409  001B22  B4D8               	btfsc	status,2,c
  3410  001B24  0012               	return	
  3411                           
  3412                           ;lcd.c: 401: {
  3413                           ;lcd.c: 403: lcd_DataWrite(v_lcdData_u8);
  3414  001B26  5008               	movf	LCD_DisplayChar@v_lcdData_u8,w,c
  3415  001B28  EC10  F00D         	call	_lcd_DataWrite
  3416                           
  3417                           ;lcd.c: 404: v_LcdTrackCursorPos_U8++;
  3418  001B2C  2A64               	incf	_v_LcdTrackCursorPos_U8,f,c
  3419  001B2E  0012               	return	
  3420  001B30                     __end_of_LCD_DisplayChar:
  3421                           	opt stack 0
  3422                           tblptru	equ	0xFF8
  3423                           tblptrh	equ	0xFF7
  3424                           tblptrl	equ	0xFF6
  3425                           tablat	equ	0xFF5
  3426                           prodh	equ	0xFF4
  3427                           prodl	equ	0xFF3
  3428                           postinc0	equ	0xFEE
  3429                           wreg	equ	0xFE8
  3430                           postdec1	equ	0xFE5
  3431                           fsr1l	equ	0xFE1
  3432                           indf2	equ	0xFDF
  3433                           postinc2	equ	0xFDE
  3434                           postdec2	equ	0xFDD
  3435                           fsr2h	equ	0xFDA
  3436                           fsr2l	equ	0xFD9
  3437                           status	equ	0xFD8
  3438                           
  3439 ;; *************** function _lcd_DataWrite *****************
  3440 ;; Defined at:
  3441 ;;		line 826 in file "../00-libfiles/lcd.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  dataByte        1    wreg     unsigned char 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  dataByte        1    6[COMRAM] unsigned char 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3455 ;;      Params:         0       0       0       0       0       0       0
  3456 ;;      Locals:         1       0       0       0       0       0       0
  3457 ;;      Temps:          0       0       0       0       0       0       0
  3458 ;;      Totals:         1       0       0       0       0       0       0
  3459 ;;Total ram usage:        1 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    3
  3462 ;; This function calls:
  3463 ;;		_lcd_BusyCheck
  3464 ;;		_lcd_SendDataSignals
  3465 ;;		_lcd_SendHigherNibble
  3466 ;;		_lcd_SendLowerNibble
  3467 ;; This function is called by:
  3468 ;;		_LCD_DisplayChar
  3469 ;; This function uses a non-reentrant model
  3470 ;;
  3471                           
  3472                           	psect	text16
  3473  001A20                     __ptext16:
  3474                           	opt stack 0
  3475  001A20                     _lcd_DataWrite:
  3476                           	opt stack 24
  3477                           
  3478                           ;incstack = 0
  3479                           ;lcd_DataWrite@dataByte stored from wreg
  3480  001A20  6E07               	movwf	lcd_DataWrite@dataByte,c
  3481                           
  3482                           ;lcd.c: 828: lcd_BusyCheck();
  3483  001A22  EC38  F00B         	call	_lcd_BusyCheck	;wreg free
  3484                           
  3485                           ;lcd.c: 829: if(LCDConfig.v_LcdMode_U8 == 8u)
  3486  001A26  0E08               	movlw	8
  3487  001A28  1858               	xorwf	_LCDConfig+2,w,c
  3488  001A2A  A4D8               	btfss	status,2,c
  3489  001A2C  D004               	goto	l1958
  3490                           
  3491                           ;lcd.c: 830: {
  3492                           ;lcd.c: 831: lcd_SendLowerNibble(dataByte);
  3493  001A2E  5007               	movf	lcd_DataWrite@dataByte,w,c
  3494  001A30  EC57  F00C         	call	_lcd_SendLowerNibble
  3495                           
  3496                           ;lcd.c: 832: }
  3497  001A34  D008               	goto	l1962
  3498  001A36                     l1958:
  3499                           
  3500                           ;lcd.c: 833: else
  3501                           ;lcd.c: 834: {
  3502                           ;lcd.c: 835: lcd_SendHigherNibble(dataByte);
  3503  001A36  5007               	movf	lcd_DataWrite@dataByte,w,c
  3504  001A38  EC7D  F00C         	call	_lcd_SendHigherNibble
  3505                           
  3506                           ;lcd.c: 836: lcd_SendDataSignals();
  3507  001A3C  ECDA  F00C         	call	_lcd_SendDataSignals	;wreg free
  3508                           
  3509                           ;lcd.c: 837: dataByte = dataByte << 4;
  3510  001A40  3807               	swapf	lcd_DataWrite@dataByte,w,c
  3511  001A42  0BF0               	andlw	240
  3512  001A44  6E07               	movwf	lcd_DataWrite@dataByte,c
  3513  001A46                     l1962:
  3514                           
  3515                           ;lcd.c: 838: }
  3516                           ;lcd.c: 840: lcd_SendHigherNibble(dataByte);
  3517  001A46  5007               	movf	lcd_DataWrite@dataByte,w,c
  3518  001A48  EC7D  F00C         	call	_lcd_SendHigherNibble
  3519                           
  3520                           ;lcd.c: 841: lcd_SendDataSignals();
  3521  001A4C  ECDA  F00C         	call	_lcd_SendDataSignals	;wreg free
  3522  001A50  0012               	return		;funcret
  3523  001A52                     __end_of_lcd_DataWrite:
  3524                           	opt stack 0
  3525                           tblptru	equ	0xFF8
  3526                           tblptrh	equ	0xFF7
  3527                           tblptrl	equ	0xFF6
  3528                           tablat	equ	0xFF5
  3529                           prodh	equ	0xFF4
  3530                           prodl	equ	0xFF3
  3531                           postinc0	equ	0xFEE
  3532                           wreg	equ	0xFE8
  3533                           postdec1	equ	0xFE5
  3534                           fsr1l	equ	0xFE1
  3535                           indf2	equ	0xFDF
  3536                           postinc2	equ	0xFDE
  3537                           postdec2	equ	0xFDD
  3538                           fsr2h	equ	0xFDA
  3539                           fsr2l	equ	0xFD9
  3540                           status	equ	0xFD8
  3541                           
  3542 ;; *************** function _lcd_SendDataSignals *****************
  3543 ;; Defined at:
  3544 ;;		line 1002 in file "../00-libfiles/lcd.c"
  3545 ;; Parameters:    Size  Location     Type
  3546 ;;		None
  3547 ;; Auto vars:     Size  Location     Type
  3548 ;;		None
  3549 ;; Return value:  Size  Location     Type
  3550 ;;                  1    wreg      void 
  3551 ;; Registers used:
  3552 ;;		wreg, status,2, status,0, cstack
  3553 ;; Tracked objects:
  3554 ;;		On entry : 0/0
  3555 ;;		On exit  : 0/0
  3556 ;;		Unchanged: 0/0
  3557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3558 ;;      Params:         0       0       0       0       0       0       0
  3559 ;;      Locals:         0       0       0       0       0       0       0
  3560 ;;      Temps:          0       0       0       0       0       0       0
  3561 ;;      Totals:         0       0       0       0       0       0       0
  3562 ;;Total ram usage:        0 bytes
  3563 ;; Hardware stack levels used:    1
  3564 ;; Hardware stack levels required when called:    1
  3565 ;; This function calls:
  3566 ;;		_DELAY_us
  3567 ;;		_GPIO_PinWrite
  3568 ;; This function is called by:
  3569 ;;		_lcd_DataWrite
  3570 ;; This function uses a non-reentrant model
  3571 ;;
  3572                           
  3573                           	psect	text17
  3574  0019B4                     __ptext17:
  3575                           	opt stack 0
  3576  0019B4                     _lcd_SendDataSignals:
  3577                           	opt stack 25
  3578                           
  3579                           ;lcd.c: 1004: GPIO_PinWrite(LCDConfig.RS,1);
  3580                           
  3581                           ;incstack = 0
  3582  0019B4  0E01               	movlw	1
  3583  0019B6  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  3584  0019B8  5059               	movf	_LCDConfig+3,w,c
  3585  0019BA  EC7E  F006         	call	_GPIO_PinWrite
  3586                           
  3587                           ;lcd.c: 1005: GPIO_PinWrite(LCDConfig.RW,0);
  3588  0019BE  0E00               	movlw	0
  3589  0019C0  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  3590  0019C2  505A               	movf	_LCDConfig+4,w,c
  3591  0019C4  EC7E  F006         	call	_GPIO_PinWrite
  3592                           
  3593                           ;lcd.c: 1006: GPIO_PinWrite(LCDConfig.EN,1);
  3594  0019C8  0E01               	movlw	1
  3595  0019CA  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  3596  0019CC  505B               	movf	_LCDConfig+5,w,c
  3597  0019CE  EC7E  F006         	call	_GPIO_PinWrite
  3598                           
  3599                           ;lcd.c: 1007: DELAY_us(10);
  3600  0019D2  0E00               	movlw	0
  3601  0019D4  6E02               	movwf	DELAY_us@us_count+1,c
  3602  0019D6  0E0A               	movlw	10
  3603  0019D8  6E01               	movwf	DELAY_us@us_count,c
  3604  0019DA  ECCB  F00D         	call	_DELAY_us	;wreg free
  3605                           
  3606                           ;lcd.c: 1008: GPIO_PinWrite(LCDConfig.EN,0);
  3607  0019DE  0E00               	movlw	0
  3608  0019E0  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  3609  0019E2  505B               	movf	_LCDConfig+5,w,c
  3610  0019E4  EC7E  F006         	call	_GPIO_PinWrite
  3611  0019E8  0012               	return		;funcret
  3612  0019EA                     __end_of_lcd_SendDataSignals:
  3613                           	opt stack 0
  3614                           tblptru	equ	0xFF8
  3615                           tblptrh	equ	0xFF7
  3616                           tblptrl	equ	0xFF6
  3617                           tablat	equ	0xFF5
  3618                           prodh	equ	0xFF4
  3619                           prodl	equ	0xFF3
  3620                           postinc0	equ	0xFEE
  3621                           wreg	equ	0xFE8
  3622                           postdec1	equ	0xFE5
  3623                           fsr1l	equ	0xFE1
  3624                           indf2	equ	0xFDF
  3625                           postinc2	equ	0xFDE
  3626                           postdec2	equ	0xFDD
  3627                           fsr2h	equ	0xFDA
  3628                           fsr2l	equ	0xFD9
  3629                           status	equ	0xFD8
  3630                           
  3631 ;; *************** function _LCD_GoToNextLine *****************
  3632 ;; Defined at:
  3633 ;;		line 292 in file "../00-libfiles/lcd.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3647 ;;      Params:         0       0       0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    4
  3654 ;; This function calls:
  3655 ;;		_LCD_CmdWrite
  3656 ;; This function is called by:
  3657 ;;		_LCD_DisplayChar
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text18
  3662  001AB6                     __ptext18:
  3663                           	opt stack 0
  3664  001AB6                     _LCD_GoToNextLine:
  3665                           	opt stack 23
  3666                           
  3667                           ;lcd.c: 296: v_LcdTrackLineNum_U8++;
  3668                           
  3669                           ;incstack = 0
  3670  001AB6  2A65               	incf	_v_LcdTrackLineNum_U8,f,c
  3671                           
  3672                           ;lcd.c: 297: v_LcdTrackCursorPos_U8 = 0x00;
  3673  001AB8  0E00               	movlw	0
  3674  001ABA  6E64               	movwf	_v_LcdTrackCursorPos_U8,c
  3675                           
  3676                           ;lcd.c: 298: if(v_LcdTrackLineNum_U8 >= LCDConfig.v_MaxSupportedLines_U8)
  3677  001ABC  5056               	movf	_LCDConfig,w,c
  3678  001ABE  5C65               	subwf	_v_LcdTrackLineNum_U8,w,c
  3679  001AC0  A0D8               	btfss	status,0,c
  3680  001AC2  D002               	goto	l1950
  3681                           
  3682                           ;lcd.c: 299: v_LcdTrackLineNum_U8 = 0x00;
  3683  001AC4  0E00               	movlw	0
  3684  001AC6  6E65               	movwf	_v_LcdTrackLineNum_U8,c
  3685  001AC8                     l1950:
  3686                           
  3687                           ;lcd.c: 300: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_LcdTrackLineNum_U8]);
  3688  001AC8  5065               	movf	_v_LcdTrackLineNum_U8,w,c
  3689  001ACA  0D01               	mullw	1
  3690  001ACC  0E66               	movlw	low _ARR_LcdLineNumAddress_U8
  3691  001ACE  24F3               	addwf	prodl,w,c
  3692  001AD0  6ED9               	movwf	fsr2l,c
  3693  001AD2  0E00               	movlw	high _ARR_LcdLineNumAddress_U8
  3694  001AD4  20F4               	addwfc	prodh,w,c
  3695  001AD6  6EDA               	movwf	fsr2h,c
  3696  001AD8  50DF               	movf	indf2,w,c
  3697  001ADA  EC29  F00D         	call	_LCD_CmdWrite
  3698  001ADE  0012               	return		;funcret
  3699  001AE0                     __end_of_LCD_GoToNextLine:
  3700                           	opt stack 0
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           postinc0	equ	0xFEE
  3708                           wreg	equ	0xFE8
  3709                           postdec1	equ	0xFE5
  3710                           fsr1l	equ	0xFE1
  3711                           indf2	equ	0xFDF
  3712                           postinc2	equ	0xFDE
  3713                           postdec2	equ	0xFDD
  3714                           fsr2h	equ	0xFDA
  3715                           fsr2l	equ	0xFD9
  3716                           status	equ	0xFD8
  3717                           
  3718 ;; *************** function _LCD_Init *****************
  3719 ;; Defined at:
  3720 ;;		line 198 in file "../00-libfiles/lcd.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;  v_lcdNoOfLin    1    wreg     unsigned char 
  3723 ;;  v_MaxCharsPe    1    8[COMRAM] unsigned char 
  3724 ;; Auto vars:     Size  Location     Type
  3725 ;;  v_lcdNoOfLin    1    9[COMRAM] unsigned char 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  1    wreg      void 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3735 ;;      Params:         1       0       0       0       0       0       0
  3736 ;;      Locals:         1       0       0       0       0       0       0
  3737 ;;      Temps:          0       0       0       0       0       0       0
  3738 ;;      Totals:         2       0       0       0       0       0       0
  3739 ;;Total ram usage:        2 bytes
  3740 ;; Hardware stack levels used:    1
  3741 ;; Hardware stack levels required when called:    6
  3742 ;; This function calls:
  3743 ;;		_DELAY_ms
  3744 ;;		_LCD_Clear
  3745 ;;		_LCD_CmdWrite
  3746 ;;		_lcd_Reset
  3747 ;; This function is called by:
  3748 ;;		_main
  3749 ;; This function uses a non-reentrant model
  3750 ;;
  3751                           
  3752                           	psect	text19
  3753  0017FA                     __ptext19:
  3754                           	opt stack 0
  3755  0017FA                     _LCD_Init:
  3756                           	opt stack 24
  3757                           
  3758                           ;incstack = 0
  3759                           ;LCD_Init@v_lcdNoOfLines_u8 stored from wreg
  3760  0017FA  6E0A               	movwf	LCD_Init@v_lcdNoOfLines_u8,c
  3761                           
  3762                           ;lcd.c: 202: LCDConfig.v_MaxSupportedChars_U8 = v_MaxCharsPerLine_u8;
  3763  0017FC  C009  F057         	movff	LCD_Init@v_MaxCharsPerLine_u8,_LCDConfig+1
  3764                           
  3765                           ;lcd.c: 203: LCDConfig.v_MaxSupportedLines_U8 = v_lcdNoOfLines_u8;
  3766  001800  C00A  F056         	movff	LCD_Init@v_lcdNoOfLines_u8,_LCDConfig
  3767                           
  3768                           ;lcd.c: 204: if(v_lcdNoOfLines_u8 > 0x02)
  3769  001804  0E02               	movlw	2
  3770  001806  640A               	cpfsgt	LCD_Init@v_lcdNoOfLines_u8,c
  3771  001808  D008               	goto	l2370
  3772                           
  3773                           ;lcd.c: 205: {
  3774                           ;lcd.c: 206: ARR_LcdLineNumAddress_U8[0x02] = 0x90 + (v_MaxCharsPerLine_u8 & 0x0fu);
  3775  00180A  5009               	movf	LCD_Init@v_MaxCharsPerLine_u8,w,c
  3776  00180C  0B0F               	andlw	15
  3777  00180E  0F90               	addlw	144
  3778  001810  6E68               	movwf	_ARR_LcdLineNumAddress_U8+2,c
  3779                           
  3780                           ;lcd.c: 207: ARR_LcdLineNumAddress_U8[0x03] = 0xd0 + (v_MaxCharsPerLine_u8 & 0x0fu);
  3781  001812  5009               	movf	LCD_Init@v_MaxCharsPerLine_u8,w,c
  3782  001814  0B0F               	andlw	15
  3783  001816  0FD0               	addlw	208
  3784  001818  6E69               	movwf	_ARR_LcdLineNumAddress_U8+3,c
  3785  00181A                     l2370:
  3786                           
  3787                           ;lcd.c: 208: }
  3788                           ;lcd.c: 210: DELAY_ms(100);
  3789  00181A  0E00               	movlw	0
  3790  00181C  6E04               	movwf	DELAY_ms@ms_count+1,c
  3791  00181E  0E64               	movlw	100
  3792  001820  6E03               	movwf	DELAY_ms@ms_count,c
  3793  001822  ECBC  F00D         	call	_DELAY_ms	;wreg free
  3794                           
  3795                           ;lcd.c: 212: if(LCDConfig.v_LcdMode_U8 == 8u)
  3796  001826  0E08               	movlw	8
  3797  001828  1858               	xorwf	_LCDConfig+2,w,c
  3798  00182A  A4D8               	btfss	status,2,c
  3799  00182C  D004               	goto	l2376
  3800                           
  3801                           ;lcd.c: 213: {
  3802                           ;lcd.c: 214: LCD_CmdWrite(0x38u);
  3803  00182E  0E38               	movlw	56
  3804  001830  EC29  F00D         	call	_LCD_CmdWrite
  3805                           
  3806                           ;lcd.c: 215: }
  3807  001834  D009               	goto	l199
  3808  001836                     l2376:
  3809                           
  3810                           ;lcd.c: 216: else if(LCDConfig.v_LcdMode_U8 == 4u)
  3811  001836  0E04               	movlw	4
  3812  001838  1858               	xorwf	_LCDConfig+2,w,c
  3813  00183A  A4D8               	btfss	status,2,c
  3814  00183C  D005               	goto	l199
  3815                           
  3816                           ;lcd.c: 217: {
  3817                           ;lcd.c: 218: lcd_Reset();
  3818  00183E  EC2A  F00C         	call	_lcd_Reset	;wreg free
  3819                           
  3820                           ;lcd.c: 219: LCD_CmdWrite(0x28u);
  3821  001842  0E28               	movlw	40
  3822  001844  EC29  F00D         	call	_LCD_CmdWrite
  3823  001848                     l199:
  3824                           
  3825                           ;lcd.c: 220: }
  3826                           ;lcd.c: 222: LCD_CmdWrite(0x0Eu);
  3827  001848  0E0E               	movlw	14
  3828  00184A  EC29  F00D         	call	_LCD_CmdWrite
  3829                           
  3830                           ;lcd.c: 223: LCD_Clear();
  3831  00184E  ECD4  F00D         	call	_LCD_Clear	;wreg free
  3832  001852  0012               	return		;funcret
  3833  001854                     __end_of_LCD_Init:
  3834                           	opt stack 0
  3835                           tblptru	equ	0xFF8
  3836                           tblptrh	equ	0xFF7
  3837                           tblptrl	equ	0xFF6
  3838                           tablat	equ	0xFF5
  3839                           prodh	equ	0xFF4
  3840                           prodl	equ	0xFF3
  3841                           postinc0	equ	0xFEE
  3842                           wreg	equ	0xFE8
  3843                           postdec1	equ	0xFE5
  3844                           fsr1l	equ	0xFE1
  3845                           indf2	equ	0xFDF
  3846                           postinc2	equ	0xFDE
  3847                           postdec2	equ	0xFDD
  3848                           fsr2h	equ	0xFDA
  3849                           fsr2l	equ	0xFD9
  3850                           status	equ	0xFD8
  3851                           
  3852 ;; *************** function _lcd_Reset *****************
  3853 ;; Defined at:
  3854 ;;		line 913 in file "../00-libfiles/lcd.c"
  3855 ;; Parameters:    Size  Location     Type
  3856 ;;		None
  3857 ;; Auto vars:     Size  Location     Type
  3858 ;;		None
  3859 ;; Return value:  Size  Location     Type
  3860 ;;                  1    wreg      void 
  3861 ;; Registers used:
  3862 ;;		wreg, status,2, status,0, cstack
  3863 ;; Tracked objects:
  3864 ;;		On entry : 0/0
  3865 ;;		On exit  : 0/0
  3866 ;;		Unchanged: 0/0
  3867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3868 ;;      Params:         0       0       0       0       0       0       0
  3869 ;;      Locals:         0       0       0       0       0       0       0
  3870 ;;      Temps:          0       0       0       0       0       0       0
  3871 ;;      Totals:         0       0       0       0       0       0       0
  3872 ;;Total ram usage:        0 bytes
  3873 ;; Hardware stack levels used:    1
  3874 ;; Hardware stack levels required when called:    2
  3875 ;; This function calls:
  3876 ;;		_DELAY_ms
  3877 ;;		_DELAY_us
  3878 ;;		_lcd_SendCmdSignals
  3879 ;;		_lcd_SendHigherNibble
  3880 ;; This function is called by:
  3881 ;;		_LCD_Init
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           	psect	text20
  3886  001854                     __ptext20:
  3887                           	opt stack 0
  3888  001854                     _lcd_Reset:
  3889                           	opt stack 27
  3890                           
  3891                           ;lcd.c: 916: lcd_SendHigherNibble(0x30);
  3892                           
  3893                           ;incstack = 0
  3894  001854  0E30               	movlw	48
  3895  001856  EC7D  F00C         	call	_lcd_SendHigherNibble
  3896                           
  3897                           ;lcd.c: 917: lcd_SendCmdSignals();
  3898  00185A  ECF5  F00C         	call	_lcd_SendCmdSignals	;wreg free
  3899                           
  3900                           ;lcd.c: 918: DELAY_ms(100);
  3901  00185E  0E00               	movlw	0
  3902  001860  6E04               	movwf	DELAY_ms@ms_count+1,c
  3903  001862  0E64               	movlw	100
  3904  001864  6E03               	movwf	DELAY_ms@ms_count,c
  3905  001866  ECBC  F00D         	call	_DELAY_ms	;wreg free
  3906                           
  3907                           ;lcd.c: 919: lcd_SendHigherNibble(0x30);
  3908  00186A  0E30               	movlw	48
  3909  00186C  EC7D  F00C         	call	_lcd_SendHigherNibble
  3910                           
  3911                           ;lcd.c: 920: lcd_SendCmdSignals();
  3912  001870  ECF5  F00C         	call	_lcd_SendCmdSignals	;wreg free
  3913                           
  3914                           ;lcd.c: 921: DELAY_us(200);
  3915  001874  0E00               	movlw	0
  3916  001876  6E02               	movwf	DELAY_us@us_count+1,c
  3917  001878  0EC8               	movlw	200
  3918  00187A  6E01               	movwf	DELAY_us@us_count,c
  3919  00187C  ECCB  F00D         	call	_DELAY_us	;wreg free
  3920                           
  3921                           ;lcd.c: 922: lcd_SendHigherNibble(0x30);
  3922  001880  0E30               	movlw	48
  3923  001882  EC7D  F00C         	call	_lcd_SendHigherNibble
  3924                           
  3925                           ;lcd.c: 923: lcd_SendCmdSignals();
  3926  001886  ECF5  F00C         	call	_lcd_SendCmdSignals	;wreg free
  3927                           
  3928                           ;lcd.c: 924: DELAY_us(200);
  3929  00188A  0E00               	movlw	0
  3930  00188C  6E02               	movwf	DELAY_us@us_count+1,c
  3931  00188E  0EC8               	movlw	200
  3932  001890  6E01               	movwf	DELAY_us@us_count,c
  3933  001892  ECCB  F00D         	call	_DELAY_us	;wreg free
  3934                           
  3935                           ;lcd.c: 925: lcd_SendHigherNibble(0x20);
  3936  001896  0E20               	movlw	32
  3937  001898  EC7D  F00C         	call	_lcd_SendHigherNibble
  3938                           
  3939                           ;lcd.c: 926: lcd_SendCmdSignals();
  3940  00189C  ECF5  F00C         	call	_lcd_SendCmdSignals	;wreg free
  3941                           
  3942                           ;lcd.c: 927: DELAY_us(200);
  3943  0018A0  0E00               	movlw	0
  3944  0018A2  6E02               	movwf	DELAY_us@us_count+1,c
  3945  0018A4  0EC8               	movlw	200
  3946  0018A6  6E01               	movwf	DELAY_us@us_count,c
  3947  0018A8  ECCB  F00D         	call	_DELAY_us	;wreg free
  3948  0018AC  0012               	return		;funcret
  3949  0018AE                     __end_of_lcd_Reset:
  3950                           	opt stack 0
  3951                           tblptru	equ	0xFF8
  3952                           tblptrh	equ	0xFF7
  3953                           tblptrl	equ	0xFF6
  3954                           tablat	equ	0xFF5
  3955                           prodh	equ	0xFF4
  3956                           prodl	equ	0xFF3
  3957                           postinc0	equ	0xFEE
  3958                           wreg	equ	0xFE8
  3959                           postdec1	equ	0xFE5
  3960                           fsr1l	equ	0xFE1
  3961                           indf2	equ	0xFDF
  3962                           postinc2	equ	0xFDE
  3963                           postdec2	equ	0xFDD
  3964                           fsr2h	equ	0xFDA
  3965                           fsr2l	equ	0xFD9
  3966                           status	equ	0xFD8
  3967                           
  3968 ;; *************** function _LCD_Clear *****************
  3969 ;; Defined at:
  3970 ;;		line 237 in file "../00-libfiles/lcd.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;		None
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3984 ;;      Params:         0       0       0       0       0       0       0
  3985 ;;      Locals:         0       0       0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0
  3987 ;;      Totals:         0       0       0       0       0       0       0
  3988 ;;Total ram usage:        0 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    5
  3991 ;; This function calls:
  3992 ;;		_LCD_CmdWrite
  3993 ;;		_LCD_GoToLine
  3994 ;; This function is called by:
  3995 ;;		_LCD_Init
  3996 ;; This function uses a non-reentrant model
  3997 ;;
  3998                           
  3999                           	psect	text21
  4000  001BA8                     __ptext21:
  4001                           	opt stack 0
  4002  001BA8                     _LCD_Clear:
  4003                           	opt stack 24
  4004                           
  4005                           ;lcd.c: 239: LCD_CmdWrite(0x01u);
  4006                           
  4007                           ;incstack = 0
  4008  001BA8  0E01               	movlw	1
  4009  001BAA  EC29  F00D         	call	_LCD_CmdWrite
  4010                           
  4011                           ;lcd.c: 240: LCD_GoToLine(0x00);
  4012  001BAE  0E00               	movlw	0
  4013  001BB0  EC70  F00D         	call	_LCD_GoToLine
  4014  001BB4  0012               	return		;funcret
  4015  001BB6                     __end_of_LCD_Clear:
  4016                           	opt stack 0
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           postinc0	equ	0xFEE
  4024                           wreg	equ	0xFE8
  4025                           postdec1	equ	0xFE5
  4026                           fsr1l	equ	0xFE1
  4027                           indf2	equ	0xFDF
  4028                           postinc2	equ	0xFDE
  4029                           postdec2	equ	0xFDD
  4030                           fsr2h	equ	0xFDA
  4031                           fsr2l	equ	0xFD9
  4032                           status	equ	0xFD8
  4033                           
  4034 ;; *************** function _LCD_GoToLine *****************
  4035 ;; Defined at:
  4036 ;;		line 265 in file "../00-libfiles/lcd.c"
  4037 ;; Parameters:    Size  Location     Type
  4038 ;;  v_lineNumber    1    wreg     unsigned char 
  4039 ;; Auto vars:     Size  Location     Type
  4040 ;;  v_lineNumber    1    7[COMRAM] unsigned char 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  1    wreg      void 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4050 ;;      Params:         0       0       0       0       0       0       0
  4051 ;;      Locals:         1       0       0       0       0       0       0
  4052 ;;      Temps:          0       0       0       0       0       0       0
  4053 ;;      Totals:         1       0       0       0       0       0       0
  4054 ;;Total ram usage:        1 bytes
  4055 ;; Hardware stack levels used:    1
  4056 ;; Hardware stack levels required when called:    4
  4057 ;; This function calls:
  4058 ;;		_LCD_CmdWrite
  4059 ;; This function is called by:
  4060 ;;		_LCD_Clear
  4061 ;;		_main
  4062 ;;		_LCD_ScrollMessage
  4063 ;; This function uses a non-reentrant model
  4064 ;;
  4065                           
  4066                           	psect	text22
  4067  001AE0                     __ptext22:
  4068                           	opt stack 0
  4069  001AE0                     _LCD_GoToLine:
  4070                           	opt stack 24
  4071                           
  4072                           ;incstack = 0
  4073                           ;LCD_GoToLine@v_lineNumber_u8 stored from wreg
  4074  001AE0  6E08               	movwf	LCD_GoToLine@v_lineNumber_u8,c
  4075                           
  4076                           ;lcd.c: 267: if(v_lineNumber_u8 < LCDConfig.v_MaxSupportedLines_U8)
  4077  001AE2  5056               	movf	_LCDConfig,w,c
  4078  001AE4  5C08               	subwf	LCD_GoToLine@v_lineNumber_u8,w,c
  4079  001AE6  B0D8               	btfsc	status,0,c
  4080  001AE8  0012               	return	
  4081                           
  4082                           ;lcd.c: 268: {
  4083                           ;lcd.c: 271: v_LcdTrackCursorPos_U8 = 0x00;
  4084  001AEA  0E00               	movlw	0
  4085  001AEC  6E64               	movwf	_v_LcdTrackCursorPos_U8,c
  4086                           
  4087                           ;lcd.c: 272: v_LcdTrackLineNum_U8 = v_lineNumber_u8;
  4088  001AEE  C008  F065         	movff	LCD_GoToLine@v_lineNumber_u8,_v_LcdTrackLineNum_U8
  4089                           
  4090                           ;lcd.c: 273: LCD_CmdWrite(ARR_LcdLineNumAddress_U8[v_lineNumber_u8]);
  4091  001AF2  5008               	movf	LCD_GoToLine@v_lineNumber_u8,w,c
  4092  001AF4  0D01               	mullw	1
  4093  001AF6  0E66               	movlw	low _ARR_LcdLineNumAddress_U8
  4094  001AF8  24F3               	addwf	prodl,w,c
  4095  001AFA  6ED9               	movwf	fsr2l,c
  4096  001AFC  0E00               	movlw	high _ARR_LcdLineNumAddress_U8
  4097  001AFE  20F4               	addwfc	prodh,w,c
  4098  001B00  6EDA               	movwf	fsr2h,c
  4099  001B02  50DF               	movf	indf2,w,c
  4100  001B04  EC29  F00D         	call	_LCD_CmdWrite
  4101  001B08  0012               	return	
  4102  001B0A                     __end_of_LCD_GoToLine:
  4103                           	opt stack 0
  4104                           tblptru	equ	0xFF8
  4105                           tblptrh	equ	0xFF7
  4106                           tblptrl	equ	0xFF6
  4107                           tablat	equ	0xFF5
  4108                           prodh	equ	0xFF4
  4109                           prodl	equ	0xFF3
  4110                           postinc0	equ	0xFEE
  4111                           wreg	equ	0xFE8
  4112                           postdec1	equ	0xFE5
  4113                           fsr1l	equ	0xFE1
  4114                           indf2	equ	0xFDF
  4115                           postinc2	equ	0xFDE
  4116                           postdec2	equ	0xFDD
  4117                           fsr2h	equ	0xFDA
  4118                           fsr2l	equ	0xFD9
  4119                           status	equ	0xFD8
  4120                           
  4121 ;; *************** function _LCD_CmdWrite *****************
  4122 ;; Defined at:
  4123 ;;		line 358 in file "../00-libfiles/lcd.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  v_lcdCmd_u8     1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  v_lcdCmd_u8     1    6[COMRAM] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  1    wreg      void 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0, cstack
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4137 ;;      Params:         0       0       0       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0       0       0
  4139 ;;      Temps:          0       0       0       0       0       0       0
  4140 ;;      Totals:         1       0       0       0       0       0       0
  4141 ;;Total ram usage:        1 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; Hardware stack levels required when called:    3
  4144 ;; This function calls:
  4145 ;;		_lcd_BusyCheck
  4146 ;;		_lcd_SendCmdSignals
  4147 ;;		_lcd_SendHigherNibble
  4148 ;;		_lcd_SendLowerNibble
  4149 ;; This function is called by:
  4150 ;;		_LCD_Init
  4151 ;;		_LCD_Clear
  4152 ;;		_LCD_GoToLine
  4153 ;;		_LCD_GoToNextLine
  4154 ;;		_LCD_ScrollMessage
  4155 ;; This function uses a non-reentrant model
  4156 ;;
  4157                           
  4158                           	psect	text23
  4159  001A52                     __ptext23:
  4160                           	opt stack 0
  4161  001A52                     _LCD_CmdWrite:
  4162                           	opt stack 23
  4163                           
  4164                           ;incstack = 0
  4165                           ;LCD_CmdWrite@v_lcdCmd_u8 stored from wreg
  4166  001A52  6E07               	movwf	LCD_CmdWrite@v_lcdCmd_u8,c
  4167                           
  4168                           ;lcd.c: 360: lcd_BusyCheck();
  4169  001A54  EC38  F00B         	call	_lcd_BusyCheck	;wreg free
  4170                           
  4171                           ;lcd.c: 361: if(LCDConfig.v_LcdMode_U8 == 8u)
  4172  001A58  0E08               	movlw	8
  4173  001A5A  1858               	xorwf	_LCDConfig+2,w,c
  4174  001A5C  A4D8               	btfss	status,2,c
  4175  001A5E  D004               	goto	l1932
  4176                           
  4177                           ;lcd.c: 362: {
  4178                           ;lcd.c: 363: lcd_SendLowerNibble(v_lcdCmd_u8);
  4179  001A60  5007               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  4180  001A62  EC57  F00C         	call	_lcd_SendLowerNibble
  4181                           
  4182                           ;lcd.c: 364: }
  4183  001A66  D008               	goto	l1936
  4184  001A68                     l1932:
  4185                           
  4186                           ;lcd.c: 365: else
  4187                           ;lcd.c: 366: {
  4188                           ;lcd.c: 367: lcd_SendHigherNibble(v_lcdCmd_u8);
  4189  001A68  5007               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  4190  001A6A  EC7D  F00C         	call	_lcd_SendHigherNibble
  4191                           
  4192                           ;lcd.c: 368: lcd_SendCmdSignals();
  4193  001A6E  ECF5  F00C         	call	_lcd_SendCmdSignals	;wreg free
  4194                           
  4195                           ;lcd.c: 369: v_lcdCmd_u8 = v_lcdCmd_u8 << 4;
  4196  001A72  3807               	swapf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  4197  001A74  0BF0               	andlw	240
  4198  001A76  6E07               	movwf	LCD_CmdWrite@v_lcdCmd_u8,c
  4199  001A78                     l1936:
  4200                           
  4201                           ;lcd.c: 370: }
  4202                           ;lcd.c: 372: lcd_SendHigherNibble(v_lcdCmd_u8);
  4203  001A78  5007               	movf	LCD_CmdWrite@v_lcdCmd_u8,w,c
  4204  001A7A  EC7D  F00C         	call	_lcd_SendHigherNibble
  4205                           
  4206                           ;lcd.c: 373: lcd_SendCmdSignals();
  4207  001A7E  ECF5  F00C         	call	_lcd_SendCmdSignals	;wreg free
  4208  001A82  0012               	return		;funcret
  4209  001A84                     __end_of_LCD_CmdWrite:
  4210                           	opt stack 0
  4211                           tblptru	equ	0xFF8
  4212                           tblptrh	equ	0xFF7
  4213                           tblptrl	equ	0xFF6
  4214                           tablat	equ	0xFF5
  4215                           prodh	equ	0xFF4
  4216                           prodl	equ	0xFF3
  4217                           postinc0	equ	0xFEE
  4218                           wreg	equ	0xFE8
  4219                           postdec1	equ	0xFE5
  4220                           fsr1l	equ	0xFE1
  4221                           indf2	equ	0xFDF
  4222                           postinc2	equ	0xFDE
  4223                           postdec2	equ	0xFDD
  4224                           fsr2h	equ	0xFDA
  4225                           fsr2l	equ	0xFD9
  4226                           status	equ	0xFD8
  4227                           
  4228 ;; *************** function _lcd_SendLowerNibble *****************
  4229 ;; Defined at:
  4230 ;;		line 962 in file "../00-libfiles/lcd.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  dataByte        1    wreg     unsigned char 
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;  dataByte        1    5[COMRAM] unsigned char 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4244 ;;      Params:         0       0       0       0       0       0       0
  4245 ;;      Locals:         1       0       0       0       0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0
  4247 ;;      Totals:         1       0       0       0       0       0       0
  4248 ;;Total ram usage:        1 bytes
  4249 ;; Hardware stack levels used:    1
  4250 ;; Hardware stack levels required when called:    1
  4251 ;; This function calls:
  4252 ;;		_GPIO_PinWrite
  4253 ;; This function is called by:
  4254 ;;		_LCD_CmdWrite
  4255 ;;		_lcd_DataWrite
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text24
  4260  0018AE                     __ptext24:
  4261                           	opt stack 0
  4262  0018AE                     _lcd_SendLowerNibble:
  4263                           	opt stack 25
  4264                           
  4265                           ;incstack = 0
  4266                           ;lcd_SendLowerNibble@dataByte stored from wreg
  4267  0018AE  6E06               	movwf	lcd_SendLowerNibble@dataByte,c
  4268                           
  4269                           ;lcd.c: 964: GPIO_PinWrite(LCDConfig.D0,(((dataByte)&(((uint8_t)1<<(0))))!=0u));
  4270  0018B0  A006               	btfss	lcd_SendLowerNibble@dataByte,0,c
  4271  0018B2  D002               	goto	u2150
  4272  0018B4  0E01               	movlw	1
  4273  0018B6  D001               	goto	u2160
  4274  0018B8                     u2150:
  4275  0018B8  0E00               	movlw	0
  4276  0018BA                     u2160:
  4277  0018BA  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4278  0018BC  505C               	movf	_LCDConfig+6,w,c
  4279  0018BE  EC7E  F006         	call	_GPIO_PinWrite
  4280                           
  4281                           ;lcd.c: 965: GPIO_PinWrite(LCDConfig.D1,(((dataByte)&(((uint8_t)1<<(1))))!=0u));
  4282  0018C2  A206               	btfss	lcd_SendLowerNibble@dataByte,1,c
  4283  0018C4  D002               	goto	u2170
  4284  0018C6  0E01               	movlw	1
  4285  0018C8  D001               	goto	u2180
  4286  0018CA                     u2170:
  4287  0018CA  0E00               	movlw	0
  4288  0018CC                     u2180:
  4289  0018CC  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4290  0018CE  505D               	movf	_LCDConfig+7,w,c
  4291  0018D0  EC7E  F006         	call	_GPIO_PinWrite
  4292                           
  4293                           ;lcd.c: 966: GPIO_PinWrite(LCDConfig.D2,(((dataByte)&(((uint8_t)1<<(2))))!=0u));
  4294  0018D4  A406               	btfss	lcd_SendLowerNibble@dataByte,2,c
  4295  0018D6  D002               	goto	u2190
  4296  0018D8  0E01               	movlw	1
  4297  0018DA  D001               	goto	u2200
  4298  0018DC                     u2190:
  4299  0018DC  0E00               	movlw	0
  4300  0018DE                     u2200:
  4301  0018DE  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4302  0018E0  505E               	movf	_LCDConfig+8,w,c
  4303  0018E2  EC7E  F006         	call	_GPIO_PinWrite
  4304                           
  4305                           ;lcd.c: 967: GPIO_PinWrite(LCDConfig.D3,(((dataByte)&(((uint8_t)1<<(3))))!=0u));
  4306  0018E6  A606               	btfss	lcd_SendLowerNibble@dataByte,3,c
  4307  0018E8  D002               	goto	u2210
  4308  0018EA  0E01               	movlw	1
  4309  0018EC  D001               	goto	u2220
  4310  0018EE                     u2210:
  4311  0018EE  0E00               	movlw	0
  4312  0018F0                     u2220:
  4313  0018F0  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4314  0018F2  505F               	movf	_LCDConfig+9,w,c
  4315  0018F4  EC7E  F006         	call	_GPIO_PinWrite
  4316  0018F8  0012               	return		;funcret
  4317  0018FA                     __end_of_lcd_SendLowerNibble:
  4318                           	opt stack 0
  4319                           tblptru	equ	0xFF8
  4320                           tblptrh	equ	0xFF7
  4321                           tblptrl	equ	0xFF6
  4322                           tablat	equ	0xFF5
  4323                           prodh	equ	0xFF4
  4324                           prodl	equ	0xFF3
  4325                           postinc0	equ	0xFEE
  4326                           wreg	equ	0xFE8
  4327                           postdec1	equ	0xFE5
  4328                           fsr1l	equ	0xFE1
  4329                           indf2	equ	0xFDF
  4330                           postinc2	equ	0xFDE
  4331                           postdec2	equ	0xFDD
  4332                           fsr2h	equ	0xFDA
  4333                           fsr2l	equ	0xFD9
  4334                           status	equ	0xFD8
  4335                           
  4336 ;; *************** function _lcd_SendHigherNibble *****************
  4337 ;; Defined at:
  4338 ;;		line 943 in file "../00-libfiles/lcd.c"
  4339 ;; Parameters:    Size  Location     Type
  4340 ;;  dataByte        1    wreg     unsigned char 
  4341 ;; Auto vars:     Size  Location     Type
  4342 ;;  dataByte        1    5[COMRAM] unsigned char 
  4343 ;; Return value:  Size  Location     Type
  4344 ;;                  1    wreg      void 
  4345 ;; Registers used:
  4346 ;;		wreg, status,2, status,0, cstack
  4347 ;; Tracked objects:
  4348 ;;		On entry : 0/0
  4349 ;;		On exit  : 0/0
  4350 ;;		Unchanged: 0/0
  4351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4352 ;;      Params:         0       0       0       0       0       0       0
  4353 ;;      Locals:         1       0       0       0       0       0       0
  4354 ;;      Temps:          0       0       0       0       0       0       0
  4355 ;;      Totals:         1       0       0       0       0       0       0
  4356 ;;Total ram usage:        1 bytes
  4357 ;; Hardware stack levels used:    1
  4358 ;; Hardware stack levels required when called:    1
  4359 ;; This function calls:
  4360 ;;		_GPIO_PinWrite
  4361 ;; This function is called by:
  4362 ;;		_LCD_CmdWrite
  4363 ;;		_lcd_DataWrite
  4364 ;;		_lcd_Reset
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           	psect	text25
  4369  0018FA                     __ptext25:
  4370                           	opt stack 0
  4371  0018FA                     _lcd_SendHigherNibble:
  4372                           	opt stack 25
  4373                           
  4374                           ;incstack = 0
  4375                           ;lcd_SendHigherNibble@dataByte stored from wreg
  4376  0018FA  6E06               	movwf	lcd_SendHigherNibble@dataByte,c
  4377                           
  4378                           ;lcd.c: 945: GPIO_PinWrite(LCDConfig.D4,(((dataByte)&(((uint8_t)1<<(4))))!=0u));
  4379  0018FC  A806               	btfss	lcd_SendHigherNibble@dataByte,4,c
  4380  0018FE  D002               	goto	u2230
  4381  001900  0E01               	movlw	1
  4382  001902  D001               	goto	u2240
  4383  001904                     u2230:
  4384  001904  0E00               	movlw	0
  4385  001906                     u2240:
  4386  001906  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4387  001908  5060               	movf	_LCDConfig+10,w,c
  4388  00190A  EC7E  F006         	call	_GPIO_PinWrite
  4389                           
  4390                           ;lcd.c: 946: GPIO_PinWrite(LCDConfig.D5,(((dataByte)&(((uint8_t)1<<(5))))!=0u));
  4391  00190E  AA06               	btfss	lcd_SendHigherNibble@dataByte,5,c
  4392  001910  D002               	goto	u2250
  4393  001912  0E01               	movlw	1
  4394  001914  D001               	goto	u2260
  4395  001916                     u2250:
  4396  001916  0E00               	movlw	0
  4397  001918                     u2260:
  4398  001918  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4399  00191A  5061               	movf	_LCDConfig+11,w,c
  4400  00191C  EC7E  F006         	call	_GPIO_PinWrite
  4401                           
  4402                           ;lcd.c: 947: GPIO_PinWrite(LCDConfig.D6,(((dataByte)&(((uint8_t)1<<(6))))!=0u));
  4403  001920  AC06               	btfss	lcd_SendHigherNibble@dataByte,6,c
  4404  001922  D002               	goto	u2270
  4405  001924  0E01               	movlw	1
  4406  001926  D001               	goto	u2280
  4407  001928                     u2270:
  4408  001928  0E00               	movlw	0
  4409  00192A                     u2280:
  4410  00192A  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4411  00192C  5062               	movf	_LCDConfig+12,w,c
  4412  00192E  EC7E  F006         	call	_GPIO_PinWrite
  4413                           
  4414                           ;lcd.c: 948: GPIO_PinWrite(LCDConfig.D7,(((dataByte)&(((uint8_t)1<<(7))))!=0u));
  4415  001932  AE06               	btfss	lcd_SendHigherNibble@dataByte,7,c
  4416  001934  D002               	goto	u2290
  4417  001936  0E01               	movlw	1
  4418  001938  D001               	goto	u2300
  4419  00193A                     u2290:
  4420  00193A  0E00               	movlw	0
  4421  00193C                     u2300:
  4422  00193C  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4423  00193E  5063               	movf	_LCDConfig+13,w,c
  4424  001940  EC7E  F006         	call	_GPIO_PinWrite
  4425  001944  0012               	return		;funcret
  4426  001946                     __end_of_lcd_SendHigherNibble:
  4427                           	opt stack 0
  4428                           tblptru	equ	0xFF8
  4429                           tblptrh	equ	0xFF7
  4430                           tblptrl	equ	0xFF6
  4431                           tablat	equ	0xFF5
  4432                           prodh	equ	0xFF4
  4433                           prodl	equ	0xFF3
  4434                           postinc0	equ	0xFEE
  4435                           wreg	equ	0xFE8
  4436                           postdec1	equ	0xFE5
  4437                           fsr1l	equ	0xFE1
  4438                           indf2	equ	0xFDF
  4439                           postinc2	equ	0xFDE
  4440                           postdec2	equ	0xFDD
  4441                           fsr2h	equ	0xFDA
  4442                           fsr2l	equ	0xFD9
  4443                           status	equ	0xFD8
  4444                           
  4445 ;; *************** function _lcd_SendCmdSignals *****************
  4446 ;; Defined at:
  4447 ;;		line 981 in file "../00-libfiles/lcd.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;		None
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;		None
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, status,2, status,0, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4461 ;;      Params:         0       0       0       0       0       0       0
  4462 ;;      Locals:         0       0       0       0       0       0       0
  4463 ;;      Temps:          0       0       0       0       0       0       0
  4464 ;;      Totals:         0       0       0       0       0       0       0
  4465 ;;Total ram usage:        0 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    1
  4468 ;; This function calls:
  4469 ;;		_DELAY_us
  4470 ;;		_GPIO_PinWrite
  4471 ;; This function is called by:
  4472 ;;		_LCD_CmdWrite
  4473 ;;		_lcd_Reset
  4474 ;; This function uses a non-reentrant model
  4475 ;;
  4476                           
  4477                           	psect	text26
  4478  0019EA                     __ptext26:
  4479                           	opt stack 0
  4480  0019EA                     _lcd_SendCmdSignals:
  4481                           	opt stack 24
  4482                           
  4483                           ;lcd.c: 983: GPIO_PinWrite(LCDConfig.RS,0);
  4484                           
  4485                           ;incstack = 0
  4486  0019EA  0E00               	movlw	0
  4487  0019EC  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4488  0019EE  5059               	movf	_LCDConfig+3,w,c
  4489  0019F0  EC7E  F006         	call	_GPIO_PinWrite
  4490                           
  4491                           ;lcd.c: 984: GPIO_PinWrite(LCDConfig.RW,0);
  4492  0019F4  0E00               	movlw	0
  4493  0019F6  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4494  0019F8  505A               	movf	_LCDConfig+4,w,c
  4495  0019FA  EC7E  F006         	call	_GPIO_PinWrite
  4496                           
  4497                           ;lcd.c: 985: GPIO_PinWrite(LCDConfig.EN,1);
  4498  0019FE  0E01               	movlw	1
  4499  001A00  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4500  001A02  505B               	movf	_LCDConfig+5,w,c
  4501  001A04  EC7E  F006         	call	_GPIO_PinWrite
  4502                           
  4503                           ;lcd.c: 986: DELAY_us(10);
  4504  001A08  0E00               	movlw	0
  4505  001A0A  6E02               	movwf	DELAY_us@us_count+1,c
  4506  001A0C  0E0A               	movlw	10
  4507  001A0E  6E01               	movwf	DELAY_us@us_count,c
  4508  001A10  ECCB  F00D         	call	_DELAY_us	;wreg free
  4509                           
  4510                           ;lcd.c: 987: GPIO_PinWrite(LCDConfig.EN,0);
  4511  001A14  0E00               	movlw	0
  4512  001A16  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4513  001A18  505B               	movf	_LCDConfig+5,w,c
  4514  001A1A  EC7E  F006         	call	_GPIO_PinWrite
  4515  001A1E  0012               	return		;funcret
  4516  001A20                     __end_of_lcd_SendCmdSignals:
  4517                           	opt stack 0
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           prodh	equ	0xFF4
  4523                           prodl	equ	0xFF3
  4524                           postinc0	equ	0xFEE
  4525                           wreg	equ	0xFE8
  4526                           postdec1	equ	0xFE5
  4527                           fsr1l	equ	0xFE1
  4528                           indf2	equ	0xFDF
  4529                           postinc2	equ	0xFDE
  4530                           postdec2	equ	0xFDD
  4531                           fsr2h	equ	0xFDA
  4532                           fsr2l	equ	0xFD9
  4533                           status	equ	0xFD8
  4534                           
  4535 ;; *************** function _lcd_BusyCheck *****************
  4536 ;; Defined at:
  4537 ;;		line 860 in file "../00-libfiles/lcd.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  busyflag        1    5[COMRAM] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      void 
  4544 ;; Registers used:
  4545 ;;		wreg, status,2, status,0, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4551 ;;      Params:         0       0       0       0       0       0       0
  4552 ;;      Locals:         1       0       0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0
  4554 ;;      Totals:         1       0       0       0       0       0       0
  4555 ;;Total ram usage:        1 bytes
  4556 ;; Hardware stack levels used:    1
  4557 ;; Hardware stack levels required when called:    2
  4558 ;; This function calls:
  4559 ;;		_DELAY_ms
  4560 ;;		_DELAY_us
  4561 ;;		_GPIO_PinDirection
  4562 ;;		_GPIO_PinRead
  4563 ;;		_GPIO_PinWrite
  4564 ;; This function is called by:
  4565 ;;		_LCD_CmdWrite
  4566 ;;		_lcd_DataWrite
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text27
  4571  001670                     __ptext27:
  4572                           	opt stack 0
  4573  001670                     _lcd_BusyCheck:
  4574                           	opt stack 24
  4575                           
  4576                           ;lcd.c: 862: uint8_t busyflag;
  4577                           ;lcd.c: 864: if(LCDConfig.RW != P_NC)
  4578                           
  4579                           ;incstack = 0
  4580  001670  285A               	incf	_LCDConfig+4,w,c
  4581  001672  B4D8               	btfsc	status,2,c
  4582  001674  D04C               	goto	l1918
  4583                           
  4584                           ;lcd.c: 865: {
  4585                           ;lcd.c: 866: GPIO_PinDirection(LCDConfig.D7,0x01u);
  4586  001676  0E01               	movlw	1
  4587  001678  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  4588  00167A  5063               	movf	_LCDConfig+13,w,c
  4589  00167C  EC2E  F007         	call	_GPIO_PinDirection
  4590                           
  4591                           ;lcd.c: 867: GPIO_PinWrite(LCDConfig.RS,0);
  4592  001680  0E00               	movlw	0
  4593  001682  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4594  001684  5059               	movf	_LCDConfig+3,w,c
  4595  001686  EC7E  F006         	call	_GPIO_PinWrite
  4596                           
  4597                           ;lcd.c: 868: GPIO_PinWrite(LCDConfig.RW,1);
  4598  00168A  0E01               	movlw	1
  4599  00168C  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4600  00168E  505A               	movf	_LCDConfig+4,w,c
  4601  001690  EC7E  F006         	call	_GPIO_PinWrite
  4602  001694                     l319:
  4603                           
  4604                           ;lcd.c: 870: {
  4605                           ;lcd.c: 872: GPIO_PinWrite(LCDConfig.EN,0);
  4606  001694  0E00               	movlw	0
  4607  001696  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4608  001698  505B               	movf	_LCDConfig+5,w,c
  4609  00169A  EC7E  F006         	call	_GPIO_PinWrite
  4610                           
  4611                           ;lcd.c: 873: DELAY_us(10);
  4612  00169E  0E00               	movlw	0
  4613  0016A0  6E02               	movwf	DELAY_us@us_count+1,c
  4614  0016A2  0E0A               	movlw	10
  4615  0016A4  6E01               	movwf	DELAY_us@us_count,c
  4616  0016A6  ECCB  F00D         	call	_DELAY_us	;wreg free
  4617                           
  4618                           ;lcd.c: 874: GPIO_PinWrite(LCDConfig.EN,1);
  4619  0016AA  0E01               	movlw	1
  4620  0016AC  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4621  0016AE  505B               	movf	_LCDConfig+5,w,c
  4622  0016B0  EC7E  F006         	call	_GPIO_PinWrite
  4623                           
  4624                           ;lcd.c: 875: DELAY_us(10);
  4625  0016B4  0E00               	movlw	0
  4626  0016B6  6E02               	movwf	DELAY_us@us_count+1,c
  4627  0016B8  0E0A               	movlw	10
  4628  0016BA  6E01               	movwf	DELAY_us@us_count,c
  4629  0016BC  ECCB  F00D         	call	_DELAY_us	;wreg free
  4630                           
  4631                           ;lcd.c: 876: busyflag = GPIO_PinRead(LCDConfig.D7);
  4632  0016C0  5063               	movf	_LCDConfig+13,w,c
  4633  0016C2  ECB7  F009         	call	_GPIO_PinRead
  4634  0016C6  6E06               	movwf	lcd_BusyCheck@busyflag,c
  4635                           
  4636                           ;lcd.c: 879: if(LCDConfig.v_LcdMode_U8 == 4)
  4637  0016C8  0E04               	movlw	4
  4638  0016CA  1858               	xorwf	_LCDConfig+2,w,c
  4639  0016CC  A4D8               	btfss	status,2,c
  4640  0016CE  D016               	goto	l1914
  4641                           
  4642                           ;lcd.c: 880: {
  4643                           ;lcd.c: 882: GPIO_PinWrite(LCDConfig.EN,0);
  4644  0016D0  0E00               	movlw	0
  4645  0016D2  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4646  0016D4  505B               	movf	_LCDConfig+5,w,c
  4647  0016D6  EC7E  F006         	call	_GPIO_PinWrite
  4648                           
  4649                           ;lcd.c: 883: DELAY_us(10);
  4650  0016DA  0E00               	movlw	0
  4651  0016DC  6E02               	movwf	DELAY_us@us_count+1,c
  4652  0016DE  0E0A               	movlw	10
  4653  0016E0  6E01               	movwf	DELAY_us@us_count,c
  4654  0016E2  ECCB  F00D         	call	_DELAY_us	;wreg free
  4655                           
  4656                           ;lcd.c: 884: GPIO_PinWrite(LCDConfig.EN,1);
  4657  0016E6  0E01               	movlw	1
  4658  0016E8  6E01               	movwf	GPIO_PinWrite@var_pinValue_u8,c
  4659  0016EA  505B               	movf	_LCDConfig+5,w,c
  4660  0016EC  EC7E  F006         	call	_GPIO_PinWrite
  4661                           
  4662                           ;lcd.c: 885: DELAY_us(10);
  4663  0016F0  0E00               	movlw	0
  4664  0016F2  6E02               	movwf	DELAY_us@us_count+1,c
  4665  0016F4  0E0A               	movlw	10
  4666  0016F6  6E01               	movwf	DELAY_us@us_count,c
  4667  0016F8  ECCB  F00D         	call	_DELAY_us	;wreg free
  4668  0016FC                     l1914:
  4669                           
  4670                           ;lcd.c: 886: }
  4671                           ;lcd.c: 887: }while(busyflag!=0);
  4672  0016FC  5006               	movf	lcd_BusyCheck@busyflag,w,c
  4673  0016FE  A4D8               	btfss	status,2,c
  4674  001700  D7C9               	goto	l319
  4675                           
  4676                           ;lcd.c: 889: GPIO_PinDirection(LCDConfig.D7,0x00u);
  4677  001702  0E00               	movlw	0
  4678  001704  6E01               	movwf	GPIO_PinDirection@var_pinDirn_u8,c
  4679  001706  5063               	movf	_LCDConfig+13,w,c
  4680  001708  EC2E  F007         	call	_GPIO_PinDirection
  4681                           
  4682                           ;lcd.c: 890: }
  4683  00170C  0012               	return	
  4684  00170E                     l1918:
  4685                           
  4686                           ;lcd.c: 891: else
  4687                           ;lcd.c: 892: {
  4688                           ;lcd.c: 895: DELAY_ms(1);
  4689  00170E  0E00               	movlw	0
  4690  001710  6E04               	movwf	DELAY_ms@ms_count+1,c
  4691  001712  0E01               	movlw	1
  4692  001714  6E03               	movwf	DELAY_ms@ms_count,c
  4693  001716  ECBC  F00D         	call	_DELAY_ms	;wreg free
  4694  00171A  0012               	return	
  4695  00171C                     __end_of_lcd_BusyCheck:
  4696                           	opt stack 0
  4697                           tblptru	equ	0xFF8
  4698                           tblptrh	equ	0xFF7
  4699                           tblptrl	equ	0xFF6
  4700                           tablat	equ	0xFF5
  4701                           prodh	equ	0xFF4
  4702                           prodl	equ	0xFF3
  4703                           postinc0	equ	0xFEE
  4704                           wreg	equ	0xFE8
  4705                           postdec1	equ	0xFE5
  4706                           fsr1l	equ	0xFE1
  4707                           indf2	equ	0xFDF
  4708                           postinc2	equ	0xFDE
  4709                           postdec2	equ	0xFDD
  4710                           fsr2h	equ	0xFDA
  4711                           fsr2l	equ	0xFD9
  4712                           status	equ	0xFD8
  4713                           
  4714 ;; *************** function _GPIO_PinWrite *****************
  4715 ;; Defined at:
  4716 ;;		line 127 in file "../00-libfiles/gpio.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  enm_pinNumbe    1    wreg     enum E3211
  4719 ;;  var_pinValue    1    0[COMRAM] unsigned char 
  4720 ;; Auto vars:     Size  Location     Type
  4721 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  4722 ;;  var_portNumb    1    3[COMRAM] unsigned char 
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      void 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2, status,0
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4732 ;;      Params:         1       0       0       0       0       0       0
  4733 ;;      Locals:         2       0       0       0       0       0       0
  4734 ;;      Temps:          2       0       0       0       0       0       0
  4735 ;;      Totals:         5       0       0       0       0       0       0
  4736 ;;Total ram usage:        5 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_lcd_BusyCheck
  4742 ;;		_lcd_SendHigherNibble
  4743 ;;		_lcd_SendLowerNibble
  4744 ;;		_lcd_SendCmdSignals
  4745 ;;		_lcd_SendDataSignals
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           	psect	text28
  4750  000CFC                     __ptext28:
  4751                           	opt stack 0
  4752  000CFC                     _GPIO_PinWrite:
  4753                           	opt stack 25
  4754                           
  4755                           ;incstack = 0
  4756                           ;GPIO_PinWrite@enm_pinNumber stored from wreg
  4757  000CFC  6E05               	movwf	GPIO_PinWrite@enm_pinNumber,c
  4758                           
  4759                           ;gpio.c: 130: uint8_t var_portNumber_u8;
  4760                           ;gpio.c: 133: var_portNumber_u8 = (enm_pinNumber>>3);
  4761  000CFE  3805               	swapf	GPIO_PinWrite@enm_pinNumber,w,c
  4762  000D00  46E8               	rlncf	wreg,f,c
  4763  000D02  0B1F               	andlw	31
  4764  000D04  6E04               	movwf	GPIO_PinWrite@var_portNumber_u8,c
  4765                           
  4766                           ;gpio.c: 134: enm_pinNumber = enm_pinNumber & 0x07;
  4767  000D06  5005               	movf	GPIO_PinWrite@enm_pinNumber,w,c
  4768  000D08  0B07               	andlw	7
  4769  000D0A  6E05               	movwf	GPIO_PinWrite@enm_pinNumber,c
  4770                           
  4771                           ;gpio.c: 138: switch(var_portNumber_u8)
  4772  000D0C  D096               	goto	l1872
  4773  000D0E                     l1840:
  4774                           
  4775                           ;gpio.c: 142: ((var_pinValue_u8)? ((LATA) |= ((uint8_t)1<<(enm_pinNumber))): ((LATA) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  4776  000D0E  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  4777  000D10  B4D8               	btfsc	status,2,c
  4778  000D12  D00D               	goto	l1844
  4779  000D14  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4780  000D18  0E01               	movlw	1
  4781  000D1A  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4782  000D1C  2A02               	incf	??_GPIO_PinWrite,f,c
  4783  000D1E  D002               	goto	u1824
  4784  000D20                     u1825:
  4785  000D20  90D8               	bcf	status,0,c
  4786  000D22  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4787  000D24                     u1824:
  4788  000D24  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4789  000D26  D7FC               	goto	u1825
  4790  000D28  5003               	movf	??_GPIO_PinWrite+1,w,c
  4791  000D2A  1289               	iorwf	3977,f,c	;volatile
  4792  000D2C  0012               	return	
  4793  000D2E                     l1844:
  4794  000D2E  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4795  000D32  0E01               	movlw	1
  4796  000D34  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4797  000D36  2A02               	incf	??_GPIO_PinWrite,f,c
  4798  000D38  D002               	goto	u1834
  4799  000D3A                     u1835:
  4800  000D3A  90D8               	bcf	status,0,c
  4801  000D3C  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4802  000D3E                     u1834:
  4803  000D3E  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4804  000D40  D7FC               	goto	u1835
  4805  000D42  5003               	movf	??_GPIO_PinWrite+1,w,c
  4806  000D44  0AFF               	xorlw	255
  4807  000D46  1689               	andwf	3977,f,c	;volatile
  4808                           
  4809                           ;gpio.c: 143: break;
  4810  000D48  0012               	return	
  4811  000D4A                     l1846:
  4812                           
  4813                           ;gpio.c: 148: ((var_pinValue_u8)? ((LATB) |= ((uint8_t)1<<(enm_pinNumber))): ((LATB) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  4814  000D4A  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  4815  000D4C  B4D8               	btfsc	status,2,c
  4816  000D4E  D00D               	goto	l1850
  4817  000D50  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4818  000D54  0E01               	movlw	1
  4819  000D56  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4820  000D58  2A02               	incf	??_GPIO_PinWrite,f,c
  4821  000D5A  D002               	goto	u1854
  4822  000D5C                     u1855:
  4823  000D5C  90D8               	bcf	status,0,c
  4824  000D5E  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4825  000D60                     u1854:
  4826  000D60  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4827  000D62  D7FC               	goto	u1855
  4828  000D64  5003               	movf	??_GPIO_PinWrite+1,w,c
  4829  000D66  128A               	iorwf	3978,f,c	;volatile
  4830  000D68  0012               	return	
  4831  000D6A                     l1850:
  4832  000D6A  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4833  000D6E  0E01               	movlw	1
  4834  000D70  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4835  000D72  2A02               	incf	??_GPIO_PinWrite,f,c
  4836  000D74  D002               	goto	u1864
  4837  000D76                     u1865:
  4838  000D76  90D8               	bcf	status,0,c
  4839  000D78  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4840  000D7A                     u1864:
  4841  000D7A  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4842  000D7C  D7FC               	goto	u1865
  4843  000D7E  5003               	movf	??_GPIO_PinWrite+1,w,c
  4844  000D80  0AFF               	xorlw	255
  4845  000D82  168A               	andwf	3978,f,c	;volatile
  4846                           
  4847                           ;gpio.c: 149: break;
  4848  000D84  0012               	return	
  4849  000D86                     l1852:
  4850                           
  4851                           ;gpio.c: 154: ((var_pinValue_u8)? ((LATC) |= ((uint8_t)1<<(enm_pinNumber))): ((LATC) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  4852  000D86  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  4853  000D88  B4D8               	btfsc	status,2,c
  4854  000D8A  D00D               	goto	l1856
  4855  000D8C  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4856  000D90  0E01               	movlw	1
  4857  000D92  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4858  000D94  2A02               	incf	??_GPIO_PinWrite,f,c
  4859  000D96  D002               	goto	u1884
  4860  000D98                     u1885:
  4861  000D98  90D8               	bcf	status,0,c
  4862  000D9A  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4863  000D9C                     u1884:
  4864  000D9C  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4865  000D9E  D7FC               	goto	u1885
  4866  000DA0  5003               	movf	??_GPIO_PinWrite+1,w,c
  4867  000DA2  128B               	iorwf	3979,f,c	;volatile
  4868  000DA4  0012               	return	
  4869  000DA6                     l1856:
  4870  000DA6  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4871  000DAA  0E01               	movlw	1
  4872  000DAC  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4873  000DAE  2A02               	incf	??_GPIO_PinWrite,f,c
  4874  000DB0  D002               	goto	u1894
  4875  000DB2                     u1895:
  4876  000DB2  90D8               	bcf	status,0,c
  4877  000DB4  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4878  000DB6                     u1894:
  4879  000DB6  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4880  000DB8  D7FC               	goto	u1895
  4881  000DBA  5003               	movf	??_GPIO_PinWrite+1,w,c
  4882  000DBC  0AFF               	xorlw	255
  4883  000DBE  168B               	andwf	3979,f,c	;volatile
  4884                           
  4885                           ;gpio.c: 155: break;
  4886  000DC0  0012               	return	
  4887  000DC2                     l1858:
  4888                           
  4889                           ;gpio.c: 160: ((var_pinValue_u8)? ((LATD) |= ((uint8_t)1<<(enm_pinNumber))): ((LATD) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  4890  000DC2  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  4891  000DC4  B4D8               	btfsc	status,2,c
  4892  000DC6  D00D               	goto	l1862
  4893  000DC8  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4894  000DCC  0E01               	movlw	1
  4895  000DCE  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4896  000DD0  2A02               	incf	??_GPIO_PinWrite,f,c
  4897  000DD2  D002               	goto	u1914
  4898  000DD4                     u1915:
  4899  000DD4  90D8               	bcf	status,0,c
  4900  000DD6  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4901  000DD8                     u1914:
  4902  000DD8  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4903  000DDA  D7FC               	goto	u1915
  4904  000DDC  5003               	movf	??_GPIO_PinWrite+1,w,c
  4905  000DDE  128C               	iorwf	3980,f,c	;volatile
  4906  000DE0  0012               	return	
  4907  000DE2                     l1862:
  4908  000DE2  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4909  000DE6  0E01               	movlw	1
  4910  000DE8  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4911  000DEA  2A02               	incf	??_GPIO_PinWrite,f,c
  4912  000DEC  D002               	goto	u1924
  4913  000DEE                     u1925:
  4914  000DEE  90D8               	bcf	status,0,c
  4915  000DF0  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4916  000DF2                     u1924:
  4917  000DF2  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4918  000DF4  D7FC               	goto	u1925
  4919  000DF6  5003               	movf	??_GPIO_PinWrite+1,w,c
  4920  000DF8  0AFF               	xorlw	255
  4921  000DFA  168C               	andwf	3980,f,c	;volatile
  4922                           
  4923                           ;gpio.c: 161: break;
  4924  000DFC  0012               	return	
  4925  000DFE                     l1864:
  4926                           
  4927                           ;gpio.c: 166: ((var_pinValue_u8)? ((LATE) |= ((uint8_t)1<<(enm_pinNumber))): ((LATE) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  4928  000DFE  5001               	movf	GPIO_PinWrite@var_pinValue_u8,w,c
  4929  000E00  B4D8               	btfsc	status,2,c
  4930  000E02  D00D               	goto	l1868
  4931  000E04  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4932  000E08  0E01               	movlw	1
  4933  000E0A  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4934  000E0C  2A02               	incf	??_GPIO_PinWrite,f,c
  4935  000E0E  D002               	goto	u1944
  4936  000E10                     u1945:
  4937  000E10  90D8               	bcf	status,0,c
  4938  000E12  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4939  000E14                     u1944:
  4940  000E14  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4941  000E16  D7FC               	goto	u1945
  4942  000E18  5003               	movf	??_GPIO_PinWrite+1,w,c
  4943  000E1A  128D               	iorwf	3981,f,c	;volatile
  4944  000E1C  0012               	return	
  4945  000E1E                     l1868:
  4946  000E1E  C005  F002         	movff	GPIO_PinWrite@enm_pinNumber,??_GPIO_PinWrite
  4947  000E22  0E01               	movlw	1
  4948  000E24  6E03               	movwf	(??_GPIO_PinWrite+1)& (0+255),c
  4949  000E26  2A02               	incf	??_GPIO_PinWrite,f,c
  4950  000E28  D002               	goto	u1954
  4951  000E2A                     u1955:
  4952  000E2A  90D8               	bcf	status,0,c
  4953  000E2C  3603               	rlcf	??_GPIO_PinWrite+1,f,c
  4954  000E2E                     u1954:
  4955  000E2E  2E02               	decfsz	??_GPIO_PinWrite,f,c
  4956  000E30  D7FC               	goto	u1955
  4957  000E32  5003               	movf	??_GPIO_PinWrite+1,w,c
  4958  000E34  0AFF               	xorlw	255
  4959  000E36  168D               	andwf	3981,f,c	;volatile
  4960                           
  4961                           ;gpio.c: 169: }
  4962                           
  4963                           ;gpio.c: 167: break;
  4964  000E38  0012               	return	
  4965  000E3A                     l1872:
  4966  000E3A  5004               	movf	GPIO_PinWrite@var_portNumber_u8,w,c
  4967                           
  4968                           ; Switch size 1, requested type "space"
  4969                           ; Number of cases is 5, Range of values is 0 to 4
  4970                           ; switch strategies available:
  4971                           ; Name         Instructions Cycles
  4972                           ; simple_byte           16     9 (average)
  4973                           ;	Chosen strategy is simple_byte
  4974  000E3C  0A00               	xorlw	0	; case 0
  4975  000E3E  B4D8               	btfsc	status,2,c
  4976  000E40  D766               	goto	l1840
  4977  000E42  0A01               	xorlw	1	; case 1
  4978  000E44  B4D8               	btfsc	status,2,c
  4979  000E46  D781               	goto	l1846
  4980  000E48  0A03               	xorlw	3	; case 2
  4981  000E4A  B4D8               	btfsc	status,2,c
  4982  000E4C  D79C               	goto	l1852
  4983  000E4E  0A01               	xorlw	1	; case 3
  4984  000E50  B4D8               	btfsc	status,2,c
  4985  000E52  D7B7               	goto	l1858
  4986  000E54  0A07               	xorlw	7	; case 4
  4987  000E56  A4D8               	btfss	status,2,c
  4988  000E58  0012               	return	
  4989  000E5A  D7D1               	goto	l1864
  4990  000E5C                     __end_of_GPIO_PinWrite:
  4991                           	opt stack 0
  4992                           tblptru	equ	0xFF8
  4993                           tblptrh	equ	0xFF7
  4994                           tblptrl	equ	0xFF6
  4995                           tablat	equ	0xFF5
  4996                           prodh	equ	0xFF4
  4997                           prodl	equ	0xFF3
  4998                           postinc0	equ	0xFEE
  4999                           wreg	equ	0xFE8
  5000                           postdec1	equ	0xFE5
  5001                           fsr1l	equ	0xFE1
  5002                           indf2	equ	0xFDF
  5003                           postinc2	equ	0xFDE
  5004                           postdec2	equ	0xFDD
  5005                           fsr2h	equ	0xFDA
  5006                           fsr2l	equ	0xFD9
  5007                           status	equ	0xFD8
  5008                           
  5009 ;; *************** function _GPIO_PinRead *****************
  5010 ;; Defined at:
  5011 ;;		line 192 in file "../00-libfiles/gpio.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  enm_pinNumbe    1    wreg     enum E3211
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  5016 ;;  returnStatus    1    3[COMRAM] unsigned char 
  5017 ;;  var_portNumb    1    2[COMRAM] unsigned char 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      unsigned char 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5027 ;;      Params:         0       0       0       0       0       0       0
  5028 ;;      Locals:         3       0       0       0       0       0       0
  5029 ;;      Temps:          2       0       0       0       0       0       0
  5030 ;;      Totals:         5       0       0       0       0       0       0
  5031 ;;Total ram usage:        5 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_lcd_BusyCheck
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text29
  5041  00136E                     __ptext29:
  5042                           	opt stack 0
  5043  00136E                     _GPIO_PinRead:
  5044                           	opt stack 25
  5045                           
  5046                           ;incstack = 0
  5047                           ;GPIO_PinRead@enm_pinNumber stored from wreg
  5048  00136E  6E05               	movwf	GPIO_PinRead@enm_pinNumber,c
  5049                           
  5050                           ;gpio.c: 194: uint8_t var_portNumber_u8;
  5051                           ;gpio.c: 195: uint8_t returnStatus = 0;
  5052  001370  0E00               	movlw	0
  5053  001372  6E04               	movwf	GPIO_PinRead@returnStatus,c
  5054                           
  5055                           ;gpio.c: 197: var_portNumber_u8 = (enm_pinNumber>>3);
  5056  001374  3805               	swapf	GPIO_PinRead@enm_pinNumber,w,c
  5057  001376  46E8               	rlncf	wreg,f,c
  5058  001378  0B1F               	andlw	31
  5059  00137A  6E03               	movwf	GPIO_PinRead@var_portNumber_u8,c
  5060                           
  5061                           ;gpio.c: 198: enm_pinNumber = enm_pinNumber & 0x07;
  5062  00137C  5005               	movf	GPIO_PinRead@enm_pinNumber,w,c
  5063  00137E  0B07               	andlw	7
  5064  001380  6E05               	movwf	GPIO_PinRead@enm_pinNumber,c
  5065                           
  5066                           ;gpio.c: 201: switch(var_portNumber_u8)
  5067  001382  D04C               	goto	l1892
  5068  001384                     l1880:
  5069                           
  5070                           ;gpio.c: 205: returnStatus = (((PORTA)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  5071  001384  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  5072  001388  0E01               	movlw	1
  5073  00138A  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  5074  00138C  2A01               	incf	??_GPIO_PinRead,f,c
  5075  00138E  D002               	goto	u1964
  5076  001390                     u1965:
  5077  001390  90D8               	bcf	status,0,c
  5078  001392  3602               	rlcf	??_GPIO_PinRead+1,f,c
  5079  001394                     u1964:
  5080  001394  2E01               	decfsz	??_GPIO_PinRead,f,c
  5081  001396  D7FC               	goto	u1965
  5082  001398  5002               	movf	??_GPIO_PinRead+1,w,c
  5083  00139A  1480               	andwf	3968,w,c	;volatile
  5084  00139C  0900               	iorlw	0
  5085  00139E  B4D8               	btfsc	status,2,c
  5086  0013A0  D03B               	goto	u2090
  5087  0013A2  D029               	goto	u2061
  5088  0013A4                     u1980:
  5089  0013A4  6E04               	movwf	GPIO_PinRead@returnStatus,c
  5090                           
  5091                           ;gpio.c: 206: break;
  5092  0013A6  D04A               	goto	l1894
  5093  0013A8                     l1882:
  5094                           
  5095                           ;gpio.c: 210: returnStatus = (((PORTB)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  5096  0013A8  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  5097  0013AC  0E01               	movlw	1
  5098  0013AE  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  5099  0013B0  2A01               	incf	??_GPIO_PinRead,f,c
  5100  0013B2  D002               	goto	u1994
  5101  0013B4                     u1995:
  5102  0013B4  90D8               	bcf	status,0,c
  5103  0013B6  3602               	rlcf	??_GPIO_PinRead+1,f,c
  5104  0013B8                     u1994:
  5105  0013B8  2E01               	decfsz	??_GPIO_PinRead,f,c
  5106  0013BA  D7FC               	goto	u1995
  5107  0013BC  5002               	movf	??_GPIO_PinRead+1,w,c
  5108  0013BE  1481               	andwf	3969,w,c	;volatile
  5109  0013C0  D028               	goto	L4
  5110  0013C2                     l1884:
  5111                           
  5112                           ;gpio.c: 215: returnStatus = (((PORTC)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  5113  0013C2  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  5114  0013C6  0E01               	movlw	1
  5115  0013C8  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  5116  0013CA  2A01               	incf	??_GPIO_PinRead,f,c
  5117  0013CC  D002               	goto	u2024
  5118  0013CE                     u2025:
  5119  0013CE  90D8               	bcf	status,0,c
  5120  0013D0  3602               	rlcf	??_GPIO_PinRead+1,f,c
  5121  0013D2                     u2024:
  5122  0013D2  2E01               	decfsz	??_GPIO_PinRead,f,c
  5123  0013D4  D7FC               	goto	u2025
  5124  0013D6  5002               	movf	??_GPIO_PinRead+1,w,c
  5125  0013D8  1482               	andwf	3970,w,c	;volatile
  5126  0013DA  D01B               	goto	L4
  5127  0013DC                     l1886:
  5128                           
  5129                           ;gpio.c: 221: returnStatus = (((PORTD)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  5130  0013DC  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  5131  0013E0  0E01               	movlw	1
  5132  0013E2  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  5133  0013E4  2A01               	incf	??_GPIO_PinRead,f,c
  5134  0013E6  D002               	goto	u2054
  5135  0013E8                     u2055:
  5136  0013E8  90D8               	bcf	status,0,c
  5137  0013EA  3602               	rlcf	??_GPIO_PinRead+1,f,c
  5138  0013EC                     u2054:
  5139  0013EC  2E01               	decfsz	??_GPIO_PinRead,f,c
  5140  0013EE  D7FC               	goto	u2055
  5141  0013F0  5002               	movf	??_GPIO_PinRead+1,w,c
  5142  0013F2  1483               	andwf	3971,w,c	;volatile
  5143  0013F4  D00E               	goto	L4
  5144  0013F6                     u2061:
  5145  0013F6  0E01               	movlw	1
  5146  0013F8  D7D5               	goto	u1980
  5147  0013FA                     l1888:
  5148                           
  5149                           ;gpio.c: 227: returnStatus = (((PORTE)&(((uint8_t)1<<(enm_pinNumber))))!=0u);
  5150  0013FA  C005  F001         	movff	GPIO_PinRead@enm_pinNumber,??_GPIO_PinRead
  5151  0013FE  0E01               	movlw	1
  5152  001400  6E02               	movwf	(??_GPIO_PinRead+1)& (0+255),c
  5153  001402  2A01               	incf	??_GPIO_PinRead,f,c
  5154  001404  D002               	goto	u2084
  5155  001406                     u2085:
  5156  001406  90D8               	bcf	status,0,c
  5157  001408  3602               	rlcf	??_GPIO_PinRead+1,f,c
  5158  00140A                     u2084:
  5159  00140A  2E01               	decfsz	??_GPIO_PinRead,f,c
  5160  00140C  D7FC               	goto	u2085
  5161  00140E  5002               	movf	??_GPIO_PinRead+1,w,c
  5162  001410  1484               	andwf	3972,w,c	;volatile
  5163  001412                     L4:
  5164  001412  0900               	iorlw	0
  5165  001414  A4D8               	btfss	status,2,c
  5166  001416  D7EF               	goto	u2061
  5167  001418                     u2090:
  5168  001418  0E00               	movlw	0
  5169  00141A  D7C4               	goto	u1980
  5170  00141C                     l1892:
  5171  00141C  5003               	movf	GPIO_PinRead@var_portNumber_u8,w,c
  5172                           
  5173                           ; Switch size 1, requested type "space"
  5174                           ; Number of cases is 5, Range of values is 0 to 4
  5175                           ; switch strategies available:
  5176                           ; Name         Instructions Cycles
  5177                           ; simple_byte           16     9 (average)
  5178                           ;	Chosen strategy is simple_byte
  5179  00141E  0A00               	xorlw	0	; case 0
  5180  001420  B4D8               	btfsc	status,2,c
  5181  001422  D7B0               	goto	l1880
  5182  001424  0A01               	xorlw	1	; case 1
  5183  001426  B4D8               	btfsc	status,2,c
  5184  001428  D7BF               	goto	l1882
  5185  00142A  0A03               	xorlw	3	; case 2
  5186  00142C  B4D8               	btfsc	status,2,c
  5187  00142E  D7C9               	goto	l1884
  5188  001430  0A01               	xorlw	1	; case 3
  5189  001432  B4D8               	btfsc	status,2,c
  5190  001434  D7D3               	goto	l1886
  5191  001436  0A07               	xorlw	7	; case 4
  5192  001438  B4D8               	btfsc	status,2,c
  5193  00143A  D7DF               	goto	l1888
  5194  00143C                     l1894:
  5195                           
  5196                           ;gpio.c: 230: return returnStatus;
  5197  00143C  5004               	movf	GPIO_PinRead@returnStatus,w,c
  5198  00143E  0012               	return	
  5199  001440                     __end_of_GPIO_PinRead:
  5200                           	opt stack 0
  5201                           tblptru	equ	0xFF8
  5202                           tblptrh	equ	0xFF7
  5203                           tblptrl	equ	0xFF6
  5204                           tablat	equ	0xFF5
  5205                           prodh	equ	0xFF4
  5206                           prodl	equ	0xFF3
  5207                           postinc0	equ	0xFEE
  5208                           wreg	equ	0xFE8
  5209                           postdec1	equ	0xFE5
  5210                           fsr1l	equ	0xFE1
  5211                           indf2	equ	0xFDF
  5212                           postinc2	equ	0xFDE
  5213                           postdec2	equ	0xFDD
  5214                           fsr2h	equ	0xFDA
  5215                           fsr2l	equ	0xFD9
  5216                           status	equ	0xFD8
  5217                           
  5218 ;; *************** function _GPIO_PinDirection *****************
  5219 ;; Defined at:
  5220 ;;		line 60 in file "../00-libfiles/gpio.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  enm_pinNumbe    1    wreg     enum E3211
  5223 ;;  var_pinDirn_    1    0[COMRAM] unsigned char 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  enm_pinNumbe    1    4[COMRAM] enum E3211
  5226 ;;  var_portNumb    1    3[COMRAM] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg, status,2, status,0
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5236 ;;      Params:         1       0       0       0       0       0       0
  5237 ;;      Locals:         2       0       0       0       0       0       0
  5238 ;;      Temps:          2       0       0       0       0       0       0
  5239 ;;      Totals:         5       0       0       0       0       0       0
  5240 ;;Total ram usage:        5 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; This function calls:
  5243 ;;		Nothing
  5244 ;; This function is called by:
  5245 ;;		_LCD_SetUp
  5246 ;;		_lcd_BusyCheck
  5247 ;; This function uses a non-reentrant model
  5248 ;;
  5249                           
  5250                           	psect	text30
  5251  000E5C                     __ptext30:
  5252                           	opt stack 0
  5253  000E5C                     _GPIO_PinDirection:
  5254                           	opt stack 29
  5255                           
  5256                           ;incstack = 0
  5257                           ;GPIO_PinDirection@enm_pinNumber stored from wreg
  5258  000E5C  6E05               	movwf	GPIO_PinDirection@enm_pinNumber,c
  5259                           
  5260                           ;gpio.c: 63: uint8_t var_portNumber_u8;
  5261                           ;gpio.c: 66: var_portNumber_u8 = (enm_pinNumber>>3);
  5262  000E5E  3805               	swapf	GPIO_PinDirection@enm_pinNumber,w,c
  5263  000E60  46E8               	rlncf	wreg,f,c
  5264  000E62  0B1F               	andlw	31
  5265  000E64  6E04               	movwf	GPIO_PinDirection@var_portNumber_u8,c
  5266                           
  5267                           ;gpio.c: 67: enm_pinNumber = enm_pinNumber & 0x07;
  5268  000E66  5005               	movf	GPIO_PinDirection@enm_pinNumber,w,c
  5269  000E68  0B07               	andlw	7
  5270  000E6A  6E05               	movwf	GPIO_PinDirection@enm_pinNumber,c
  5271                           
  5272                           ;gpio.c: 71: switch(var_portNumber_u8)
  5273  000E6C  D096               	goto	l1836
  5274  000E6E                     l1804:
  5275                           
  5276                           ;gpio.c: 75: ((var_pinDirn_u8)? ((TRISA) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISA) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  5277  000E6E  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  5278  000E70  B4D8               	btfsc	status,2,c
  5279  000E72  D00D               	goto	l1808
  5280  000E74  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5281  000E78  0E01               	movlw	1
  5282  000E7A  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5283  000E7C  2A02               	incf	??_GPIO_PinDirection,f,c
  5284  000E7E  D002               	goto	u1674
  5285  000E80                     u1675:
  5286  000E80  90D8               	bcf	status,0,c
  5287  000E82  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5288  000E84                     u1674:
  5289  000E84  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5290  000E86  D7FC               	goto	u1675
  5291  000E88  5003               	movf	??_GPIO_PinDirection+1,w,c
  5292  000E8A  1292               	iorwf	3986,f,c	;volatile
  5293  000E8C  0012               	return	
  5294  000E8E                     l1808:
  5295  000E8E  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5296  000E92  0E01               	movlw	1
  5297  000E94  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5298  000E96  2A02               	incf	??_GPIO_PinDirection,f,c
  5299  000E98  D002               	goto	u1684
  5300  000E9A                     u1685:
  5301  000E9A  90D8               	bcf	status,0,c
  5302  000E9C  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5303  000E9E                     u1684:
  5304  000E9E  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5305  000EA0  D7FC               	goto	u1685
  5306  000EA2  5003               	movf	??_GPIO_PinDirection+1,w,c
  5307  000EA4  0AFF               	xorlw	255
  5308  000EA6  1692               	andwf	3986,f,c	;volatile
  5309                           
  5310                           ;gpio.c: 76: break;
  5311  000EA8  0012               	return	
  5312  000EAA                     l1810:
  5313                           
  5314                           ;gpio.c: 81: ((var_pinDirn_u8)? ((TRISB) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISB) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  5315  000EAA  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  5316  000EAC  B4D8               	btfsc	status,2,c
  5317  000EAE  D00D               	goto	l1814
  5318  000EB0  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5319  000EB4  0E01               	movlw	1
  5320  000EB6  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5321  000EB8  2A02               	incf	??_GPIO_PinDirection,f,c
  5322  000EBA  D002               	goto	u1704
  5323  000EBC                     u1705:
  5324  000EBC  90D8               	bcf	status,0,c
  5325  000EBE  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5326  000EC0                     u1704:
  5327  000EC0  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5328  000EC2  D7FC               	goto	u1705
  5329  000EC4  5003               	movf	??_GPIO_PinDirection+1,w,c
  5330  000EC6  1293               	iorwf	3987,f,c	;volatile
  5331  000EC8  0012               	return	
  5332  000ECA                     l1814:
  5333  000ECA  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5334  000ECE  0E01               	movlw	1
  5335  000ED0  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5336  000ED2  2A02               	incf	??_GPIO_PinDirection,f,c
  5337  000ED4  D002               	goto	u1714
  5338  000ED6                     u1715:
  5339  000ED6  90D8               	bcf	status,0,c
  5340  000ED8  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5341  000EDA                     u1714:
  5342  000EDA  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5343  000EDC  D7FC               	goto	u1715
  5344  000EDE  5003               	movf	??_GPIO_PinDirection+1,w,c
  5345  000EE0  0AFF               	xorlw	255
  5346  000EE2  1693               	andwf	3987,f,c	;volatile
  5347                           
  5348                           ;gpio.c: 82: break;
  5349  000EE4  0012               	return	
  5350  000EE6                     l1816:
  5351                           
  5352                           ;gpio.c: 87: ((var_pinDirn_u8)? ((TRISC) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISC) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  5353  000EE6  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  5354  000EE8  B4D8               	btfsc	status,2,c
  5355  000EEA  D00D               	goto	l1820
  5356  000EEC  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5357  000EF0  0E01               	movlw	1
  5358  000EF2  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5359  000EF4  2A02               	incf	??_GPIO_PinDirection,f,c
  5360  000EF6  D002               	goto	u1734
  5361  000EF8                     u1735:
  5362  000EF8  90D8               	bcf	status,0,c
  5363  000EFA  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5364  000EFC                     u1734:
  5365  000EFC  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5366  000EFE  D7FC               	goto	u1735
  5367  000F00  5003               	movf	??_GPIO_PinDirection+1,w,c
  5368  000F02  1294               	iorwf	3988,f,c	;volatile
  5369  000F04  0012               	return	
  5370  000F06                     l1820:
  5371  000F06  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5372  000F0A  0E01               	movlw	1
  5373  000F0C  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5374  000F0E  2A02               	incf	??_GPIO_PinDirection,f,c
  5375  000F10  D002               	goto	u1744
  5376  000F12                     u1745:
  5377  000F12  90D8               	bcf	status,0,c
  5378  000F14  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5379  000F16                     u1744:
  5380  000F16  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5381  000F18  D7FC               	goto	u1745
  5382  000F1A  5003               	movf	??_GPIO_PinDirection+1,w,c
  5383  000F1C  0AFF               	xorlw	255
  5384  000F1E  1694               	andwf	3988,f,c	;volatile
  5385                           
  5386                           ;gpio.c: 88: break;
  5387  000F20  0012               	return	
  5388  000F22                     l1822:
  5389                           
  5390                           ;gpio.c: 93: ((var_pinDirn_u8)? ((TRISD) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISD) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  5391  000F22  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  5392  000F24  B4D8               	btfsc	status,2,c
  5393  000F26  D00D               	goto	l1826
  5394  000F28  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5395  000F2C  0E01               	movlw	1
  5396  000F2E  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5397  000F30  2A02               	incf	??_GPIO_PinDirection,f,c
  5398  000F32  D002               	goto	u1764
  5399  000F34                     u1765:
  5400  000F34  90D8               	bcf	status,0,c
  5401  000F36  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5402  000F38                     u1764:
  5403  000F38  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5404  000F3A  D7FC               	goto	u1765
  5405  000F3C  5003               	movf	??_GPIO_PinDirection+1,w,c
  5406  000F3E  1295               	iorwf	3989,f,c	;volatile
  5407  000F40  0012               	return	
  5408  000F42                     l1826:
  5409  000F42  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5410  000F46  0E01               	movlw	1
  5411  000F48  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5412  000F4A  2A02               	incf	??_GPIO_PinDirection,f,c
  5413  000F4C  D002               	goto	u1774
  5414  000F4E                     u1775:
  5415  000F4E  90D8               	bcf	status,0,c
  5416  000F50  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5417  000F52                     u1774:
  5418  000F52  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5419  000F54  D7FC               	goto	u1775
  5420  000F56  5003               	movf	??_GPIO_PinDirection+1,w,c
  5421  000F58  0AFF               	xorlw	255
  5422  000F5A  1695               	andwf	3989,f,c	;volatile
  5423                           
  5424                           ;gpio.c: 94: break;
  5425  000F5C  0012               	return	
  5426  000F5E                     l1828:
  5427                           
  5428                           ;gpio.c: 98: ((var_pinDirn_u8)? ((TRISE) |= ((uint8_t)1<<(enm_pinNumber))): ((TRISE) &= 
      +                          ~((uint8_t)1<<(enm_pinNumber))));
  5429  000F5E  5001               	movf	GPIO_PinDirection@var_pinDirn_u8,w,c
  5430  000F60  B4D8               	btfsc	status,2,c
  5431  000F62  D00D               	goto	l1832
  5432  000F64  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5433  000F68  0E01               	movlw	1
  5434  000F6A  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5435  000F6C  2A02               	incf	??_GPIO_PinDirection,f,c
  5436  000F6E  D002               	goto	u1794
  5437  000F70                     u1795:
  5438  000F70  90D8               	bcf	status,0,c
  5439  000F72  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5440  000F74                     u1794:
  5441  000F74  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5442  000F76  D7FC               	goto	u1795
  5443  000F78  5003               	movf	??_GPIO_PinDirection+1,w,c
  5444  000F7A  1296               	iorwf	3990,f,c	;volatile
  5445  000F7C  0012               	return	
  5446  000F7E                     l1832:
  5447  000F7E  C005  F002         	movff	GPIO_PinDirection@enm_pinNumber,??_GPIO_PinDirection
  5448  000F82  0E01               	movlw	1
  5449  000F84  6E03               	movwf	(??_GPIO_PinDirection+1)& (0+255),c
  5450  000F86  2A02               	incf	??_GPIO_PinDirection,f,c
  5451  000F88  D002               	goto	u1804
  5452  000F8A                     u1805:
  5453  000F8A  90D8               	bcf	status,0,c
  5454  000F8C  3603               	rlcf	??_GPIO_PinDirection+1,f,c
  5455  000F8E                     u1804:
  5456  000F8E  2E02               	decfsz	??_GPIO_PinDirection,f,c
  5457  000F90  D7FC               	goto	u1805
  5458  000F92  5003               	movf	??_GPIO_PinDirection+1,w,c
  5459  000F94  0AFF               	xorlw	255
  5460  000F96  1696               	andwf	3990,f,c	;volatile
  5461                           
  5462                           ;gpio.c: 101: }
  5463                           
  5464                           ;gpio.c: 99: break;
  5465  000F98  0012               	return	
  5466  000F9A                     l1836:
  5467  000F9A  5004               	movf	GPIO_PinDirection@var_portNumber_u8,w,c
  5468                           
  5469                           ; Switch size 1, requested type "space"
  5470                           ; Number of cases is 5, Range of values is 0 to 4
  5471                           ; switch strategies available:
  5472                           ; Name         Instructions Cycles
  5473                           ; simple_byte           16     9 (average)
  5474                           ;	Chosen strategy is simple_byte
  5475  000F9C  0A00               	xorlw	0	; case 0
  5476  000F9E  B4D8               	btfsc	status,2,c
  5477  000FA0  D766               	goto	l1804
  5478  000FA2  0A01               	xorlw	1	; case 1
  5479  000FA4  B4D8               	btfsc	status,2,c
  5480  000FA6  D781               	goto	l1810
  5481  000FA8  0A03               	xorlw	3	; case 2
  5482  000FAA  B4D8               	btfsc	status,2,c
  5483  000FAC  D79C               	goto	l1816
  5484  000FAE  0A01               	xorlw	1	; case 3
  5485  000FB0  B4D8               	btfsc	status,2,c
  5486  000FB2  D7B7               	goto	l1822
  5487  000FB4  0A07               	xorlw	7	; case 4
  5488  000FB6  A4D8               	btfss	status,2,c
  5489  000FB8  0012               	return	
  5490  000FBA  D7D1               	goto	l1828
  5491  000FBC                     __end_of_GPIO_PinDirection:
  5492                           	opt stack 0
  5493                           tblptru	equ	0xFF8
  5494                           tblptrh	equ	0xFF7
  5495                           tblptrl	equ	0xFF6
  5496                           tablat	equ	0xFF5
  5497                           prodh	equ	0xFF4
  5498                           prodl	equ	0xFF3
  5499                           postinc0	equ	0xFEE
  5500                           wreg	equ	0xFE8
  5501                           postdec1	equ	0xFE5
  5502                           fsr1l	equ	0xFE1
  5503                           indf2	equ	0xFDF
  5504                           postinc2	equ	0xFDE
  5505                           postdec2	equ	0xFDD
  5506                           fsr2h	equ	0xFDA
  5507                           fsr2l	equ	0xFD9
  5508                           status	equ	0xFD8
  5509                           
  5510 ;; *************** function _DELAY_ms *****************
  5511 ;; Defined at:
  5512 ;;		line 75 in file "../00-libfiles/delay.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  ms_count        2    2[COMRAM] unsigned int 
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		wreg, status,2, status,0, cstack
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5526 ;;      Params:         2       0       0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0
  5529 ;;      Totals:         2       0       0       0       0       0       0
  5530 ;;Total ram usage:        2 bytes
  5531 ;; Hardware stack levels used:    1
  5532 ;; Hardware stack levels required when called:    1
  5533 ;; This function calls:
  5534 ;;		_DELAY_us
  5535 ;; This function is called by:
  5536 ;;		_LCD_Init
  5537 ;;		_lcd_BusyCheck
  5538 ;;		_lcd_Reset
  5539 ;;		_DELAY_sec
  5540 ;;		_LCD_ScrollMessage
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text31
  5545  001B78                     __ptext31:
  5546                           	opt stack 0
  5547  001B78                     _DELAY_ms:
  5548                           	opt stack 24
  5549                           
  5550                           ;delay.c: 77: while (ms_count != 0)
  5551                           
  5552                           ;incstack = 0
  5553  001B78  D009               	goto	l1904
  5554  001B7A                     l1900:
  5555                           
  5556                           ;delay.c: 78: {
  5557                           ;delay.c: 79: DELAY_us(350u);
  5558  001B7A  0E01               	movlw	1
  5559  001B7C  6E02               	movwf	DELAY_us@us_count+1,c
  5560  001B7E  0E5E               	movlw	94
  5561  001B80  6E01               	movwf	DELAY_us@us_count,c
  5562  001B82  ECCB  F00D         	call	_DELAY_us	;wreg free
  5563                           
  5564                           ;delay.c: 80: ms_count--;
  5565  001B86  0603               	decf	DELAY_ms@ms_count,f,c
  5566  001B88  A0D8               	btfss	status,0,c
  5567  001B8A  0604               	decf	DELAY_ms@ms_count+1,f,c
  5568  001B8C                     l1904:
  5569  001B8C  5003               	movf	DELAY_ms@ms_count,w,c
  5570  001B8E  1004               	iorwf	DELAY_ms@ms_count+1,w,c
  5571  001B90  B4D8               	btfsc	status,2,c
  5572  001B92  0012               	return	
  5573  001B94  D7F2               	goto	l1900
  5574  001B96                     __end_of_DELAY_ms:
  5575                           	opt stack 0
  5576                           tblptru	equ	0xFF8
  5577                           tblptrh	equ	0xFF7
  5578                           tblptrl	equ	0xFF6
  5579                           tablat	equ	0xFF5
  5580                           prodh	equ	0xFF4
  5581                           prodl	equ	0xFF3
  5582                           postinc0	equ	0xFEE
  5583                           wreg	equ	0xFE8
  5584                           postdec1	equ	0xFE5
  5585                           fsr1l	equ	0xFE1
  5586                           indf2	equ	0xFDF
  5587                           postinc2	equ	0xFDE
  5588                           postdec2	equ	0xFDD
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _ADC_Init *****************
  5594 ;; Defined at:
  5595 ;;		line 54 in file "../00-libfiles/adc.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;		None
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;		None
  5600 ;; Return value:  Size  Location     Type
  5601 ;;                  1    wreg      void 
  5602 ;; Registers used:
  5603 ;;		wreg, status,2
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5609 ;;      Params:         0       0       0       0       0       0       0
  5610 ;;      Locals:         0       0       0       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0       0       0
  5612 ;;      Totals:         0       0       0       0       0       0       0
  5613 ;;Total ram usage:        0 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; This function calls:
  5616 ;;		Nothing
  5617 ;; This function is called by:
  5618 ;;		_main
  5619 ;; This function uses a non-reentrant model
  5620 ;;
  5621                           
  5622                           	psect	text32
  5623  001BB6                     __ptext32:
  5624                           	opt stack 0
  5625  001BB6                     _ADC_Init:
  5626                           	opt stack 30
  5627                           
  5628                           ;adc.c: 56: ADCON0 = 0x00;
  5629                           
  5630                           ;incstack = 0
  5631  001BB6  0E00               	movlw	0
  5632  001BB8  6EC2               	movwf	4034,c	;volatile
  5633                           
  5634                           ;adc.c: 57: ADCON1 = 0x00;
  5635  001BBA  0E00               	movlw	0
  5636  001BBC  6EC1               	movwf	4033,c	;volatile
  5637                           
  5638                           ;adc.c: 58: ADCON2 = 0x82;
  5639  001BBE  0E82               	movlw	130
  5640  001BC0  6EC0               	movwf	4032,c	;volatile
  5641  001BC2  0012               	return		;funcret
  5642  001BC4                     __end_of_ADC_Init:
  5643                           	opt stack 0
  5644                           tblptru	equ	0xFF8
  5645                           tblptrh	equ	0xFF7
  5646                           tblptrl	equ	0xFF6
  5647                           tablat	equ	0xFF5
  5648                           prodh	equ	0xFF4
  5649                           prodl	equ	0xFF3
  5650                           postinc0	equ	0xFEE
  5651                           wreg	equ	0xFE8
  5652                           postdec1	equ	0xFE5
  5653                           fsr1l	equ	0xFE1
  5654                           indf2	equ	0xFDF
  5655                           postinc2	equ	0xFDE
  5656                           postdec2	equ	0xFDD
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _ADC_GetAdcValue *****************
  5662 ;; Defined at:
  5663 ;;		line 76 in file "../00-libfiles/adc.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  var_adcChann    1    wreg     unsigned char 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  var_adcChann    1    6[COMRAM] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  2    2[COMRAM] unsigned int 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5677 ;;      Params:         2       0       0       0       0       0       0
  5678 ;;      Locals:         1       0       0       0       0       0       0
  5679 ;;      Temps:          2       0       0       0       0       0       0
  5680 ;;      Totals:         5       0       0       0       0       0       0
  5681 ;;Total ram usage:        5 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    1
  5684 ;; This function calls:
  5685 ;;		_DELAY_us
  5686 ;; This function is called by:
  5687 ;;		_main
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text33
  5692  001A84                     __ptext33:
  5693                           	opt stack 0
  5694  001A84                     _ADC_GetAdcValue:
  5695                           	opt stack 29
  5696                           
  5697                           ;incstack = 0
  5698                           ;ADC_GetAdcValue@var_adcChannel_u8 stored from wreg
  5699  001A84  6E07               	movwf	ADC_GetAdcValue@var_adcChannel_u8,c
  5700                           
  5701                           ;adc.c: 79: ADCON0= (var_adcChannel_u8<<2);
  5702  001A86  4407               	rlncf	ADC_GetAdcValue@var_adcChannel_u8,w,c
  5703  001A88  46E8               	rlncf	wreg,f,c
  5704  001A8A  0BFC               	andlw	252
  5705  001A8C  6EC2               	movwf	4034,c	;volatile
  5706                           
  5707                           ;adc.c: 80: ADON = 1;
  5708  001A8E  80C2               	bsf	4034,0,c	;volatile
  5709                           
  5710                           ;adc.c: 81: DELAY_us(10);
  5711  001A90  0E00               	movlw	0
  5712  001A92  6E02               	movwf	DELAY_us@us_count+1,c
  5713  001A94  0E0A               	movlw	10
  5714  001A96  6E01               	movwf	DELAY_us@us_count,c
  5715  001A98  ECCB  F00D         	call	_DELAY_us	;wreg free
  5716                           
  5717                           ;adc.c: 83: GO=1;
  5718  001A9C  82C2               	bsf	4034,1,c	;volatile
  5719  001A9E                     l142:
  5720  001A9E  B2C2               	btfsc	4034,1,c	;volatile
  5721  001AA0  D7FE               	goto	l142
  5722                           
  5723                           ;adc.c: 87: return((ADRESH<<8) + ADRESL);
  5724  001AA2  50C4               	movf	4036,w,c	;volatile
  5725  001AA4  6E06               	movwf	(??_ADC_GetAdcValue+1)& (0+255),c
  5726  001AA6  6A05               	clrf	??_ADC_GetAdcValue& (0+255),c
  5727  001AA8  50C3               	movf	4035,w,c	;volatile
  5728  001AAA  2405               	addwf	??_ADC_GetAdcValue,w,c
  5729  001AAC  6E03               	movwf	?_ADC_GetAdcValue,c
  5730  001AAE  0E00               	movlw	0
  5731  001AB0  2006               	addwfc	??_ADC_GetAdcValue+1,w,c
  5732  001AB2  6E04               	movwf	?_ADC_GetAdcValue+1,c
  5733  001AB4  0012               	return	
  5734  001AB6                     __end_of_ADC_GetAdcValue:
  5735                           	opt stack 0
  5736                           tblptru	equ	0xFF8
  5737                           tblptrh	equ	0xFF7
  5738                           tblptrl	equ	0xFF6
  5739                           tablat	equ	0xFF5
  5740                           prodh	equ	0xFF4
  5741                           prodl	equ	0xFF3
  5742                           postinc0	equ	0xFEE
  5743                           wreg	equ	0xFE8
  5744                           postdec1	equ	0xFE5
  5745                           fsr1l	equ	0xFE1
  5746                           indf2	equ	0xFDF
  5747                           postinc2	equ	0xFDE
  5748                           postdec2	equ	0xFDD
  5749                           fsr2h	equ	0xFDA
  5750                           fsr2l	equ	0xFD9
  5751                           status	equ	0xFD8
  5752                           
  5753 ;; *************** function _DELAY_us *****************
  5754 ;; Defined at:
  5755 ;;		line 56 in file "../00-libfiles/delay.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  us_count        2    0[COMRAM] unsigned int 
  5758 ;; Auto vars:     Size  Location     Type
  5759 ;;		None
  5760 ;; Return value:  Size  Location     Type
  5761 ;;                  1    wreg      void 
  5762 ;; Registers used:
  5763 ;;		wreg, status,2, status,0
  5764 ;; Tracked objects:
  5765 ;;		On entry : 0/0
  5766 ;;		On exit  : 0/0
  5767 ;;		Unchanged: 0/0
  5768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5769 ;;      Params:         2       0       0       0       0       0       0
  5770 ;;      Locals:         0       0       0       0       0       0       0
  5771 ;;      Temps:          0       0       0       0       0       0       0
  5772 ;;      Totals:         2       0       0       0       0       0       0
  5773 ;;Total ram usage:        2 bytes
  5774 ;; Hardware stack levels used:    1
  5775 ;; This function calls:
  5776 ;;		Nothing
  5777 ;; This function is called by:
  5778 ;;		_DELAY_ms
  5779 ;;		_ADC_GetAdcValue
  5780 ;;		_lcd_BusyCheck
  5781 ;;		_lcd_Reset
  5782 ;;		_lcd_SendCmdSignals
  5783 ;;		_lcd_SendDataSignals
  5784 ;; This function uses a non-reentrant model
  5785 ;;
  5786                           
  5787                           	psect	text34
  5788  001B96                     __ptext34:
  5789                           	opt stack 0
  5790  001B96                     _DELAY_us:
  5791                           	opt stack 25
  5792                           
  5793                           ;delay.c: 58: while (us_count != 0)
  5794                           
  5795                           ;incstack = 0
  5796  001B96  D003               	goto	l1800
  5797  001B98                     l1798:
  5798                           
  5799                           ;delay.c: 59: {
  5800                           ;delay.c: 60: us_count--;
  5801  001B98  0601               	decf	DELAY_us@us_count,f,c
  5802  001B9A  A0D8               	btfss	status,0,c
  5803  001B9C  0602               	decf	DELAY_us@us_count+1,f,c
  5804  001B9E                     l1800:
  5805  001B9E  5001               	movf	DELAY_us@us_count,w,c
  5806  001BA0  1002               	iorwf	DELAY_us@us_count+1,w,c
  5807  001BA2  B4D8               	btfsc	status,2,c
  5808  001BA4  0012               	return	
  5809  001BA6  D7F8               	goto	l1798
  5810  001BA8                     __end_of_DELAY_us:
  5811                           	opt stack 0
  5812                           tblptru	equ	0xFF8
  5813                           tblptrh	equ	0xFF7
  5814                           tblptrl	equ	0xFF6
  5815                           tablat	equ	0xFF5
  5816                           prodh	equ	0xFF4
  5817                           prodl	equ	0xFF3
  5818                           postinc0	equ	0xFEE
  5819                           wreg	equ	0xFE8
  5820                           postdec1	equ	0xFE5
  5821                           fsr1l	equ	0xFE1
  5822                           indf2	equ	0xFDF
  5823                           postinc2	equ	0xFDE
  5824                           postdec2	equ	0xFDD
  5825                           fsr2h	equ	0xFDA
  5826                           fsr2l	equ	0xFD9
  5827                           status	equ	0xFD8
  5828                           tblptru	equ	0xFF8
  5829                           tblptrh	equ	0xFF7
  5830                           tblptrl	equ	0xFF6
  5831                           tablat	equ	0xFF5
  5832                           prodh	equ	0xFF4
  5833                           prodl	equ	0xFF3
  5834                           postinc0	equ	0xFEE
  5835                           wreg	equ	0xFE8
  5836                           postdec1	equ	0xFE5
  5837                           fsr1l	equ	0xFE1
  5838                           indf2	equ	0xFDF
  5839                           postinc2	equ	0xFDE
  5840                           postdec2	equ	0xFDD
  5841                           fsr2h	equ	0xFDA
  5842                           fsr2l	equ	0xFD9
  5843                           status	equ	0xFD8
  5844                           
  5845                           	psect	rparam
  5846  0000                     tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           prodh	equ	0xFF4
  5851                           prodl	equ	0xFF3
  5852                           postinc0	equ	0xFEE
  5853                           wreg	equ	0xFE8
  5854                           postdec1	equ	0xFE5
  5855                           fsr1l	equ	0xFE1
  5856                           indf2	equ	0xFDF
  5857                           postinc2	equ	0xFDE
  5858                           postdec2	equ	0xFDD
  5859                           fsr2h	equ	0xFDA
  5860                           fsr2l	equ	0xFD9
  5861                           status	equ	0xFD8


Data Sizes:
    Strings     23
    Constant    0
    Data        4
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     85     105
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    LCD_Printf@str	PTR unsigned char  size(2) Largest target is 0

    LCD_Printf@argList	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    LCD_Printf@ptr	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_1(CODE[23]), 

    LCD_Printf@argp	PTR void [1] size(2) Largest target is 1
		 -> ?_LCD_Printf(COMRAM[1]), 

    LCD_DisplayString@ptr_stringPointer_u8	PTR const unsigned char  size(2) Largest target is 0


Critical Paths under _main in COMRAM

    _main->_LCD_Printf
    ___ftdiv->___ftmul
    ___awtoft->___ftpack
    _LCD_SetUp->_GPIO_PinDirection
    _LCD_Printf->_LCD_DisplayFloatNumber
    _LCD_DisplayString->_LCD_DisplayChar
    _LCD_DisplayFloatNumber->_LCD_DisplayNumber
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___awtoft
    ___ftadd->___ftneg
    _LCD_DisplayNumber->___lldiv
    _LCD_DisplayChar->_lcd_DataWrite
    _lcd_DataWrite->_lcd_BusyCheck
    _lcd_DataWrite->_lcd_SendHigherNibble
    _lcd_DataWrite->_lcd_SendLowerNibble
    _lcd_SendDataSignals->_GPIO_PinWrite
    _LCD_GoToNextLine->_LCD_CmdWrite
    _lcd_Reset->_lcd_SendHigherNibble
    _LCD_Clear->_LCD_GoToLine
    _LCD_GoToLine->_LCD_CmdWrite
    _LCD_CmdWrite->_lcd_BusyCheck
    _LCD_CmdWrite->_lcd_SendHigherNibble
    _LCD_CmdWrite->_lcd_SendLowerNibble
    _lcd_SendLowerNibble->_GPIO_PinWrite
    _lcd_SendHigherNibble->_GPIO_PinWrite
    _lcd_SendCmdSignals->_GPIO_PinWrite
    _lcd_BusyCheck->_GPIO_PinDirection
    _lcd_BusyCheck->_GPIO_PinRead
    _lcd_BusyCheck->_GPIO_PinWrite
    _DELAY_ms->_DELAY_us
    _ADC_GetAdcValue->_DELAY_us

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  194491
                                             80 COMRAM     5     5      0
                    _ADC_GetAdcValue
                           _ADC_Init
                       _LCD_GoToLine
                           _LCD_Init
                         _LCD_Printf
                          _LCD_SetUp
                           ___awtoft
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2619
                                             27 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    2264
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _LCD_SetUp                                           11     1     10    2442
                                              5 COMRAM    11     1     10
                  _GPIO_PinDirection
 ---------------------------------------------------------------------------------
 (1) _LCD_Printf                                          30    23      7  130068
                                             50 COMRAM    30    23      7
                    _LCD_DisplayChar
             _LCD_DisplayFloatNumber
                  _LCD_DisplayNumber
                  _LCD_DisplayString
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayString                                    2     0      2   23119
                                              8 COMRAM     2     0      2
                    _LCD_DisplayChar
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayFloatNumber                               7     4      3   57376
                                             43 COMRAM     7     4      3
                    _LCD_DisplayChar
                  _LCD_DisplayNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2242
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     380
                                             27 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             17 COMRAM     3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2793
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3281
                                             20 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    2109
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayNumber                                   30    25      5   25362
                                             13 COMRAM    30    25      5
                    _LCD_DisplayChar
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     418
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _LCD_DisplayChar                                      1     1      0   23010
                                              7 COMRAM     1     1      0
                   _LCD_GoToNextLine
                      _lcd_DataWrite
 ---------------------------------------------------------------------------------
 (4) _lcd_DataWrite                                        1     1      0   11472
                                              6 COMRAM     1     1      0
                      _lcd_BusyCheck
                _lcd_SendDataSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendDataSignals                                  0     0      0    2533
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (4) _LCD_GoToNextLine                                     0     0      0   11472
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     1      1   41950
                                              8 COMRAM     2     1      1
                           _DELAY_ms
                          _LCD_Clear
                       _LCD_CmdWrite
                          _lcd_Reset
 ---------------------------------------------------------------------------------
 (2) _lcd_Reset                                            0     0      0    6224
                           _DELAY_ms
                           _DELAY_us
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0   23010
                       _LCD_CmdWrite
                       _LCD_GoToLine
 ---------------------------------------------------------------------------------
 (3) _LCD_GoToLine                                         1     1      0   11538
                                              7 COMRAM     1     1      0
                       _LCD_CmdWrite
 ---------------------------------------------------------------------------------
 (5) _LCD_CmdWrite                                         1     1      0   11472
                                              6 COMRAM     1     1      0
                      _lcd_BusyCheck
                 _lcd_SendCmdSignals
               _lcd_SendHigherNibble
                _lcd_SendLowerNibble
 ---------------------------------------------------------------------------------
 (5) _lcd_SendLowerNibble                                  1     1      0    1894
                                              5 COMRAM     1     1      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_SendHigherNibble                                 1     1      0    1894
                                              5 COMRAM     1     1      0
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _lcd_SendCmdSignals                                   0     0      0    2533
                           _DELAY_us
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (5) _lcd_BusyCheck                                        1     1      0    5062
                                              5 COMRAM     1     1      0
                           _DELAY_ms
                           _DELAY_us
                  _GPIO_PinDirection
                       _GPIO_PinRead
                      _GPIO_PinWrite
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinWrite                                        5     4      1    1806
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (6) _GPIO_PinRead                                         5     5      0     206
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (2) _GPIO_PinDirection                                    5     4      1    1230
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (6) _DELAY_ms                                             2     0      2    1070
                                              2 COMRAM     2     0      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetAdcValue                                      5     3      2     749
                                              2 COMRAM     5     3      2
                           _DELAY_us
 ---------------------------------------------------------------------------------
 (6) _DELAY_us                                             2     0      2     727
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetAdcValue
     _DELAY_us
   _ADC_Init
   _LCD_GoToLine
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
   _LCD_Init
     _DELAY_ms
       _DELAY_us
     _LCD_Clear
       _LCD_CmdWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendCmdSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
       _LCD_GoToLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
     _LCD_CmdWrite
       _lcd_BusyCheck
         _DELAY_ms
           _DELAY_us
         _DELAY_us
         _GPIO_PinDirection
         _GPIO_PinRead
         _GPIO_PinWrite
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
       _lcd_SendLowerNibble
         _GPIO_PinWrite
     _lcd_Reset
       _DELAY_ms
         _DELAY_us
       _DELAY_us
       _lcd_SendCmdSignals
         _DELAY_us
         _GPIO_PinWrite
       _lcd_SendHigherNibble
         _GPIO_PinWrite
   _LCD_Printf
     _LCD_DisplayChar
       _LCD_GoToNextLine
         _LCD_CmdWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendCmdSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _lcd_DataWrite
         _lcd_BusyCheck
           _DELAY_ms
             _DELAY_us
           _DELAY_us
           _GPIO_PinDirection
           _GPIO_PinRead
           _GPIO_PinWrite
         _lcd_SendDataSignals
           _DELAY_us
           _GPIO_PinWrite
         _lcd_SendHigherNibble
           _GPIO_PinWrite
         _lcd_SendLowerNibble
           _GPIO_PinWrite
     _LCD_DisplayFloatNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       _LCD_DisplayNumber
         _LCD_DisplayChar
           _LCD_GoToNextLine
             _LCD_CmdWrite
               _lcd_BusyCheck
                 _DELAY_ms
                   _DELAY_us
                 _DELAY_us
                 _GPIO_PinDirection
                 _GPIO_PinRead
                 _GPIO_PinWrite
               _lcd_SendCmdSignals
                 _DELAY_us
                 _GPIO_PinWrite
               _lcd_SendHigherNibble
                 _GPIO_PinWrite
               _lcd_SendLowerNibble
                 _GPIO_PinWrite
           _lcd_DataWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendDataSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       ___lltoft
         ___ftpack
     _LCD_DisplayNumber
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
       ___lldiv
     _LCD_DisplayString
       _LCD_DisplayChar
         _LCD_GoToNextLine
           _LCD_CmdWrite
             _lcd_BusyCheck
               _DELAY_ms
                 _DELAY_us
               _DELAY_us
               _GPIO_PinDirection
               _GPIO_PinRead
               _GPIO_PinWrite
             _lcd_SendCmdSignals
               _DELAY_us
               _GPIO_PinWrite
             _lcd_SendHigherNibble
               _GPIO_PinWrite
             _lcd_SendLowerNibble
               _GPIO_PinWrite
         _lcd_DataWrite
           _lcd_BusyCheck
             _DELAY_ms
               _DELAY_us
             _DELAY_us
             _GPIO_PinDirection
             _GPIO_PinRead
             _GPIO_PinWrite
           _lcd_SendDataSignals
             _DELAY_us
             _GPIO_PinWrite
           _lcd_SendHigherNibble
             _GPIO_PinWrite
           _lcd_SendLowerNibble
             _GPIO_PinWrite
   _LCD_SetUp
     _GPIO_PinDirection
   ___awtoft
     ___ftpack
   ___ftdiv
     ___awtoft (ARG)
       ___ftpack
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     55      69       1       82.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      69      15        0.0%
DATA                 0      0      69       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 13 19:56:04 2016

                    _LCD_DisplayFloatNumber 128A                               ?_LCD_CmdWrite 0001  
                                        _GO 007E11                                 ?_LCD_Printf 0033  
                             ?_LCD_GoToLine 0001                                 __CFG_BORV$2 000000  
                              __CFG_CP0$OFF 000000                                __CFG_CP1$OFF 000000  
                              __CFG_CP2$OFF 000000                                __CFG_CP3$OFF 000000  
                               __CFG_OSC$HS 000000                                ___ftadd@exp1 0020  
                              ___ftadd@exp2 001F                                ___ftadd@sign 001E  
                                       l142 1A9E                                         l319 1694  
                                       l280 0692                                         l604 0B94  
                                       l199 1848                                         l608 0BBE  
                                       l706 178C                                         l619 0C6E  
                                       l628 0C8A                                         l581 1650  
                                       l661 1B6A                                         l639 1258  
                              __CFG_CPB$OFF 000000                                __CFG_CPD$OFF 000000  
                                       prod 000FF3                                         wreg 000FE8  
                   __end_of_ADC_GetAdcValue 1AB6                     __end_of_LCD_DisplayChar 1B30  
                              __CFG_LVP$OFF 000000                                ___ftdiv@cntr 0025  
                              ___ftdiv@sign 002A                                __CFG_WDT$OFF 000000  
                                      l2020 173E                                        l2022 174A  
                                      l2102 0BA2                                        l2032 177E  
                                      l2024 174E                                        l2200 115A  
                                      l2050 0990                                        l2130 0C1E  
                                      l2132 0C28                                        l2124 0BFC  
                                      l2108 0BCC                                        l2204 116A  
                                      l2070 0A8E                                        l2062 0A12  
                                      l2150 0CA6                                        l2142 0C5C  
                                      l2134 0C32                                        l2222 0FE8  
                                      l2064 0A18                                        l2080 0AB2  
                                      l2056 09F6                                        l2160 0CD6  
                                      l2144 0C66                                        l2136 0C3A  
                                      l2240 104E                                        l2082 0ABC  
                                      l2058 09FE                                        l2170 10D8  
                                      l2250 1076                                        l2076 0A9C  
                                      l2092 0B48                                        l2252 1082  
                                      l2244 105E                                        l2404 0684  
                                      l2500 0962                                        l2086 0B0E  
                                      l2078 0AB0                                        l2190 1132  
                                      l2254 1088                                        l2414 06B2  
                                      l2502 0968                                        l1800 1B9E  
                                      l2176 1100                                        l2264 17A4  
                                      l2280 1B32                                        l2424 06DC  
                                      l2408 0696                                        l2504 096C  
                                      l2336 1548                                        l2512 11CC  
                                      l1810 0EAA                                        l2370 181A  
                                      l2194 1142                                        l2258 109E  
                                      l2266 17B0                                        l2450 07BC  
                                      l2426 06FA                                        l2338 154E  
                                      l1900 1B7A                                        l1820 0F06  
                                      l1804 0E6E                                        l2284 1B44  
                                      l2444 0780                                        l2436 0734  
                                      l2348 157A                                        l2612 147C  
                                      l1822 0F22                                        l1814 0ECA  
                                      l2470 084A                                        l2462 0828  
                                      l2438 0750                                        l2518 11F4  
                                      l1904 1B8C                                        l1832 0F7E  
                                      l1816 0EE6                                        l1808 0E8E  
                                      l1840 0D0E                                        l2376 1836  
                                      l2480 088C                                        l2472 0862  
                                      l2456 07EC                                        l2384 062C  
                                      l2560 195A                                        l1826 0F42  
                                      l1850 0D6A                                        l1914 16FC  
                                      l2482 08A8                                        l2538 1232  
                                      l1828 0F5E                                        l1836 0F9A  
                                      l1852 0D86                                        l1844 0D2E  
                                      l1932 1A68                                        l1862 0DE2  
                                      l1846 0D4A                                        l1918 170E  
                                      l1950 1AC8                                        l2494 08FC  
                                      l2398 0666                                        l1880 1384  
                                      l1864 0DFE                                        l1856 0DA6  
                                      l1872 0E3A                                        l1936 1A78  
                                      l2488 08D6                                        l1882 13A8  
                                      l1858 0DC2                                        l1962 1A46  
                                      l1970 1B1A                                        l2498 0904  
                                      l1884 13C2                                        l1892 141C  
                                      l1868 0E1E                                        l1798 1B98  
                                      l1886 13DC                                        l1894 143C  
                                      l1958 1A36                                        l1990 1608  
                                      l1982 15D2                                        l1888 13FA  
                                      l1994 161E                                        l1986 15E0  
                                      l1996 163C                                        l1988 15EA  
                                      l1998 1646                                        _ADON 007E10  
                                      STR_1 0601                                        u2024 13D2  
                                      u2200 18DE                                        u2025 13CE  
                                      u2210 18EE                                        u2300 193C  
                                      u2220 18F0                                        u2061 13F6  
                                      _LATA 000F89                                        u2054 13EC  
                                      u2230 1904                                        u2150 18B8  
                                      _LATB 000F8A                                        u2055 13E8  
                                      _LATC 000F8B                                        u2240 1906  
                                      u2160 18BA                                        _LATD 000F8C  
                                      _LATE 000F8D                                        u2090 1418  
                                      u2250 1916                                        u2170 18CA  
                                      u2084 140A                                        u2260 1918  
                                      u2180 18CC                                        u2085 1406  
                                      u2270 1928                                        u2190 18DC  
                                      u2510 09E8                                        u1704 0EC0  
                                      u2280 192A                                        u2520 09EA  
                                      u2504 09AA                                        u1705 0EBC  
                                      u2505 09A4                                        u1714 0EDA  
                                      u2290 193A                                        u1715 0ED6  
                                      u2611 0B60                                        u3171 11B4  
                                      u1804 0F8E                                        u1805 0F8A  
                                      u2621 0B74                                        u1734 0EFC  
                                      u1735 0EF8                                        u3191 11DC  
                                      u1744 0F16                                        u1824 0D24  
                                      u1745 0F12                                        u1825 0D20  
                                      u1674 0E84                                        u1914 0DD8  
                                      u1834 0D3E                                        u1675 0E80  
                                      u1915 0DD4                                        u1835 0D3A  
                                      u1764 0F38                                        u1684 0E9E  
                                      u1924 0DF2                                        u1765 0F34  
                                      u1685 0E9A                                        u1925 0DEE  
                                      u2821 10C0                                        u1774 0F52  
                                      u1854 0D60                                        u2910 1006  
                                      u1775 0F4E                                        u1855 0D5C  
                                      u1944 0E14                                        u1864 0D7A  
                                      u1945 0E10                                        u1865 0D76  
                                      u2841 10E8                                        u1794 0F74  
                                      u1954 0E2E                                        u1795 0F70  
                                      u1955 0E2A                                        u2915 0FFE  
                                      u1980 13A4                                        u1964 1394  
                                      u1884 0D9C                                        u1965 1390  
                                      u1885 0D98                                        u1894 0DB6  
                                      u1895 0DB2                                        u1994 13B8  
                                      u1995 13B4                                        u2891 0FCC  
                                      _main 1440                                ___ftpack@arg 0001  
                        __size_of_LCD_Clear 000E                                ___ftpack@exp 0004  
                                      fsr2h 000FDA                                        fsr1l 000FE1  
                                      indf2 000FDF                                        fsr2l 000FD9  
                          __end_of_ADC_Init 1BC4                                main@adcValue 0054  
                        __size_of_LCD_SetUp 00C0                                        prodl 000FF3  
                                      start 0000                               __CFG_IESO$OFF 000000  
                          __end_of_DELAY_ms 1B96                            __end_of_DELAY_us 1BA8  
                             __CFG_MCLRE$ON 000000                                ___ftmul@cntr 001A  
                              ___param_bank 000010                               ?_GPIO_PinRead 0001  
                              ___ftmul@sign 001B                              ??_LCD_CmdWrite 0007  
                               LCD_SetUp@D0 0008                                 LCD_SetUp@D1 0009  
                               LCD_SetUp@D2 000A                                 LCD_SetUp@D3 000B  
                               LCD_SetUp@D4 000C                                 LCD_SetUp@D5 000D  
                               LCD_SetUp@D6 000E                                 LCD_SetUp@D7 000F  
                               LCD_SetUp@EN 0007                                ___fttol@exp1 002A  
                               LCD_SetUp@RS 0010                                 LCD_SetUp@RW 0006  
                              ___fttol@lval 0026                              ??_LCD_GoToLine 0008  
                             _GPIO_PinWrite 0CFC                            __end_of_LCD_Init 1854  
          LCD_Printf@v_numOfDigitsToDisp_u8 004E                     LCD_CmdWrite@v_lcdCmd_u8 0007  
                                     ?_main 0001                             __end_of___ftadd 0CFC  
                           __end_of___ftdiv 128A                             __end_of___ftneg 1B78  
                           __end_of___lldiv 179E                             __end_of___ftmul 11A4  
                           __end_of___fttol 10B0                       _LCD_DisplayNumber$283 0028  
                                     _PORTA 000F80                                       _PORTB 000F81  
                                     _PORTC 000F82                                       _PORTD 000F83  
                                     _PORTE 000F84                                       _TRISA 000F92  
                                     _TRISB 000F93                                       _TRISC 000F94  
                                     _TRISD 000F95                                       _TRISE 000F96  
                             __CFG_PWRT$OFF 000000                               __CFG_WRT0$OFF 000000  
                             __CFG_WRT1$OFF 000000                               __CFG_WRT2$OFF 000000  
                             __CFG_WRT3$OFF 000000                                ___lltoft@exp 0011  
                            __CFG_EBTR0$OFF 000000                              __CFG_FCMEN$OFF 000000  
                            __CFG_EBTR1$OFF 000000                              __CFG_EBTR2$OFF 000000  
                            __CFG_EBTR3$OFF 000000                               __CFG_WRTB$OFF 000000  
                             __CFG_WRTC$OFF 000000                               __CFG_WRTD$OFF 000000  
                            __CFG_EBTRB$OFF 000000                               ___awtoft@sign 000C  
     LCD_DisplayString@ptr_stringPointer_u8 0009                               ___ftpack@sign 0005  
                            __CFG_BOREN$OFF 000000                                       tablat 000FF5  
              __end_of_lcd_SendHigherNibble 1946                         __size_of_LCD_Printf 0366  
                                     status 000FD8                              ??_GPIO_PinRead 0001  
                           __initialization 197E                  GPIO_PinWrite@enm_pinNumber 0005  
                              __end_of_main 1502                              ?_GPIO_PinWrite 0001  
                         _GPIO_PinDirection 0E5C                                      ??_main 0051  
                             ___fttol@sign1 0025                 __size_of_lcd_SendCmdSignals 0036  
                         __end_of_LCD_Clear 1BB6                               __activetblptr 000002  
                        ?_GPIO_PinDirection 0001                           __end_of_LCD_SetUp 15C2  
                          ?_ADC_GetAdcValue 0003                                      _ADCON0 000FC2  
                                    _ADCON1 000FC1                                      _ADCON2 000FC0  
                          ?_LCD_DisplayChar 0001                 LCD_DisplayChar@v_lcdData_u8 0008  
                              LCD_Printf@ch 004D                                      _ADRESH 000FC4  
                                    _ADRESL 000FC3                         ??_GPIO_PinDirection 0002  
                          __end_of___awtoft 197E                            __end_of___ftpack 1670  
                          __end_of___lltoft 17FA                       lcd_BusyCheck@busyflag 0006  
                            __CFG_XINST$OFF 000000                   GPIO_PinRead@enm_pinNumber 0005  
                                 ??___ftadd 001B                                   ??___ftdiv 0022  
                                 ??___ftneg 0015                                   ??___lldiv 0009  
                                 ??___ftmul 0013                                   ??___fttol 0020  
                 __end_of_GPIO_PinDirection 0FBC                                      clear_0 1984  
            GPIO_PinDirection@enm_pinNumber 0005                            DELAY_ms@ms_count 0003  
                     ___ftmul@f3_as_product 0017                                __pdataCOMRAM 0066  
                                 ?_ADC_Init 0001                                __mediumconst 0000  
                         ?_LCD_GoToNextLine 0001                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ?_DELAY_ms 0003                                   ?_DELAY_us 0001  
               __end_of_lcd_SendLowerNibble 18FA                          ??_LCD_GoToNextLine 0008  
                      __end_of_LCD_CmdWrite 1A84                        __end_of_LCD_GoToLine 1B0A  
               lcd_SendLowerNibble@dataByte 0006                                  __accesstop 0080  
                   __end_of__initialization 19AA                                   ?_LCD_Init 0009  
                           __CFG_PBADEN$OFF 000000                                  ___ftadd@f1 0015  
                                ___ftadd@f2 0018                               ___rparam_used 000001  
                                ___ftdiv@f1 001C                                  ___ftdiv@f2 001F  
                                ___ftdiv@f3 0026                     ?_LCD_DisplayFloatNumber 002C  
                                ___ftneg@f1 0012                                  ___awtoft@c 0009  
                                ___ftmul@f1 000D                                  ___ftmul@f2 0010  
                           ??_GPIO_PinWrite 0002                                  ___fttol@f1 001C  
                            __pcstackCOMRAM 0001                                  ___lltoft@c 0009  
                     __end_of_lcd_DataWrite 1A52                                ??_LCD_Printf 003A  
                      _lcd_SendHigherNibble 18FA                         LCD_Printf@v_num_s16 0043  
                       LCD_Printf@v_num_s32 003F                         LCD_Printf@v_num_u16 0049  
                       LCD_Printf@v_num_u32 0045                          __size_of_lcd_Reset 005A  
                                ??_ADC_Init 0001                __size_of_lcd_SendDataSignals 0036  
                                ??_DELAY_ms 0005                                  ??_DELAY_us 0003  
                      __end_of_GPIO_PinRead 1440              GPIO_PinWrite@var_portNumber_u8 0004  
                     __end_of_lcd_BusyCheck 171C                lcd_SendHigherNibble@dataByte 0006  
              GPIO_PinWrite@var_pinValue_u8 0001                                  ??_LCD_Init 000A  
            __end_of_LCD_DisplayFloatNumber 136E                          __end_of_LCD_Printf 0980  
                __size_of_GPIO_PinDirection 0160                               LCD_Printf@ptr 004B  
                             LCD_Printf@str 003D                                   ?___awtoft 0009  
                                 ?___ftpack 0001                       ?_lcd_SendHigherNibble 0001  
                                 ?___lltoft 0009                                     _GO_DONE 007E11  
                          DELAY_us@us_count 0001                                     __Hparam 0000  
                         __end_of_lcd_Reset 18AE                                     __Lparam 0000  
                 LCD_Init@v_lcdNoOfLines_u8 000A                                     ___ftadd 0B50  
                                   ___ftdiv 11A4                                     ___ftneg 1B54  
                                   ___lldiv 171C                                     ___ftmul 10B0  
                                   ___fttol 0FBC                                __psmallconst 0600  
                           __CFG_STVREN$OFF 000000                                     __pcinit 197E  
                                ??___awtoft 000C                                  ??___ftpack 0006  
                                   __ramtop 0600                          LCD_DisplayNumber@a 001E  
                        LCD_DisplayNumber@i 002B                                  ??___lltoft 000D  
                                   __ptext0 1440                                     __ptext1 11A4  
                                   __ptext2 1946                                     __ptext3 1502  
                                   __ptext4 061A                                     __ptext5 1B30  
                                   __ptext6 128A                                     __ptext7 179E  
                                   __ptext8 0FBC                                     __ptext9 1B54  
                     __size_of_LCD_CmdWrite 0032                                   _LCDConfig 0056  
                     __size_of_LCD_GoToLine 002A                                   _LCD_Clear 1BA8  
                                 _LCD_SetUp 1502                        end_of_initialization 19AA  
              LCD_Init@v_MaxCharsPerLine_u8 0009                               __Lmediumconst 0000  
                           ___lldiv@divisor 0005                             ___lldiv@counter 000D  
                                   postdec1 000FE5                                     postdec2 000FDD  
                                   postinc0 000FEE                                     postinc2 000FDE  
                    ??_lcd_SendHigherNibble 0006                  __end_of_lcd_SendCmdSignals 1A20  
                              _LCD_CmdWrite 1A52                                _LCD_GoToLine 1AE0  
          ADC_GetAdcValue@var_adcChannel_u8 0007                       __size_of_GPIO_PinRead 00D2  
                                ?_LCD_Clear 0001                                  ?_LCD_SetUp 0006  
                         __size_of_ADC_Init 000E                           __size_of_DELAY_ms 001E  
                         __size_of_DELAY_us 0012                                 ___ftdiv@exp 0029  
                  __size_of_ADC_GetAdcValue 0032                    __size_of_LCD_DisplayChar 0026  
                         __size_of_LCD_Init 005A                   __size_of_LCD_GoToNextLine 002A  
                       _lcd_SendDataSignals 19B4                                 ___ftmul@exp 0016  
        GPIO_PinDirection@var_portNumber_u8 0004                                _GPIO_PinRead 136E  
                             __pidataCOMRAM 1BC4       LCD_DisplayFloatNumber@v_decNumber_u32 002F  
                         LCD_Printf@argList 0033                    _ARR_LcdLineNumAddress_U8 0066  
                       start_initialization 197E                        ?_lcd_SendDataSignals 0001  
                    _v_LcdTrackCursorPos_U8 0064               GPIO_PinRead@var_portNumber_u8 0003  
              __size_of_lcd_SendLowerNibble 004C             GPIO_PinDirection@var_pinDirn_u8 0001  
                     __end_of_GPIO_PinWrite 0E5C                            __CFG_LPT1OSC$OFF 000000  
      LCD_DisplayFloatNumber@v_floatNum_f32 002C                           __size_of___awtoft 0038  
                         __size_of___ftpack 00AE                       ??_lcd_SendDataSignals 0006  
                      _v_LcdTrackLineNum_U8 0065                           __size_of___lltoft 005C  
                               __pbssCOMRAM 0056                       lcd_DataWrite@dataByte 0007  
                               ??_LCD_Clear 0009                                 ??_LCD_SetUp 0010  
                    __size_of_lcd_DataWrite 0032                 LCD_GoToLine@v_lineNumber_u8 0008  
                         __CFG_CCP2MX$PORTC 000000                                    ?___ftadd 0015  
                                  ?___ftdiv 001C                                    ?___ftneg 0012  
                                  ?___lldiv 0001                           ??_ADC_GetAdcValue 0005  
                                  ?___ftmul 000D                                    ?___fttol 001C  
                                 _lcd_Reset 1854                           ??_LCD_DisplayChar 0008  
                    __size_of_lcd_BusyCheck 00AC                                 __smallconst 0600  
                         _LCD_DisplayNumber 0980                              LCD_Printf@argp 004F  
                                  _ADC_Init 1BB6                           _LCD_DisplayString 1B30  
                                  _DELAY_ms 1B78                                    _DELAY_us 1B96  
                        ?_LCD_DisplayNumber 000E                          ?_LCD_DisplayString 0009  
                       ??_LCD_DisplayNumber 0013                                    _LCD_Init 17FA  
                       ??_LCD_DisplayString 000B                            _LCD_GoToNextLine 1AB6  
                          __CFG_WDTPS$32768 000000                                  ?_lcd_Reset 0001  
                             _lcd_DataWrite 1A20                    GPIO_PinRead@returnStatus 0004  
                 __end_of_LCD_DisplayNumber 0B50                   __end_of_LCD_DisplayString 1B54  
                        _lcd_SendCmdSignals 19EA                    ??_LCD_DisplayFloatNumber 002F  
                                 copy_data0 199E                               _lcd_BusyCheck 1670  
                       ?_lcd_SendCmdSignals 0001                                    __Hrparam 0000  
                                  __Lrparam 0000                              ?_lcd_DataWrite 0001  
                          __size_of___ftadd 01AC                            __size_of___ftdiv 00E6  
                          __size_of___ftneg 0024                            __size_of___lldiv 0082  
                          __size_of___ftmul 00F4                            __size_of___fttol 00F4  
                                  ___awtoft 1946                                    ___ftpack 15C2  
                      ??_lcd_SendCmdSignals 0006                                    ___lltoft 179E  
             __size_of_lcd_SendHigherNibble 004C                         _lcd_SendLowerNibble 18AE  
                                  __ptext10 10B0                                    __ptext11 0B50  
                                  __ptext20 1854                                    __ptext12 15C2  
                                  __ptext21 1BA8                                    __ptext13 0980  
                                  __ptext30 0E5C                                    __ptext22 1AE0  
                                  __ptext14 171C                                    __ptext31 1B78  
                                  __ptext23 1A52                                    __ptext15 1B0A  
                                  __ptext32 1BB6                                    __ptext24 18AE  
                                  __ptext16 1A20                                    __ptext33 1A84  
                                  __ptext25 18FA                                    __ptext17 19B4  
                                  __ptext34 1B96                                    __ptext26 19EA  
                                  __ptext18 1AB6                                    __ptext27 1670  
                                  __ptext19 17FA                                    __ptext28 0CFC  
                                  __ptext29 136E                              ?_lcd_BusyCheck 0001  
       LCD_DisplayNumber@v_numericSystem_u8 002A                               __size_of_main 00C2  
                      ?_lcd_SendLowerNibble 0001                                 ??_lcd_Reset 0007  
                                _LCD_Printf 061A                                    main@volt 0051  
                __size_of_LCD_DisplayNumber 01D0                  __size_of_LCD_DisplayString 0024  
           __size_of_LCD_DisplayFloatNumber 00E4                             _ADC_GetAdcValue 1A84  
                     ??_lcd_SendLowerNibble 0006                            ___lldiv@dividend 0001  
                           _LCD_DisplayChar 1B0A                             ??_lcd_DataWrite 0007  
               __end_of_lcd_SendDataSignals 19EA                    LCD_Printf@v_floatNum_f32 003A  
                          ___lldiv@quotient 0009                    __end_of_LCD_GoToNextLine 1AE0  
LCD_DisplayNumber@v_numOfDigitsToDisplay_u8 0012                             ??_lcd_BusyCheck 0006  
                    __size_of_GPIO_PinWrite 0160               LCD_DisplayNumber@v_number_u32 000E  
