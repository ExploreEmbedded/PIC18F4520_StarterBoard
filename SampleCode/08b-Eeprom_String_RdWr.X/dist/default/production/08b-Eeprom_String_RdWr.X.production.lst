

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sat Aug 13 20:08:03 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    32  0000                     
    33                           	psect	idataCOMRAM
    34  0012C4                     __pidataCOMRAM:
    35                           	opt stack 0
    36                           
    37                           ;initializer for main@F3254
    38  0012C4  57                 	db	87
    39  0012C5  65                 	db	101
    40  0012C6  6C                 	db	108
    41  0012C7  63                 	db	99
    42  0012C8  6F                 	db	111
    43  0012C9  6D                 	db	109
    44  0012CA  65                 	db	101
    45  0012CB  20                 	db	32
    46  0012CC  74                 	db	116
    47  0012CD  6F                 	db	111
    48  0012CE  20                 	db	32
    49  0012CF  50                 	db	80
    50  0012D0  69                 	db	105
    51  0012D1  63                 	db	99
    52  0012D2  20                 	db	32
    53  0012D3  70                 	db	112
    54  0012D4  72                 	db	114
    55  0012D5  6F                 	db	111
    56  0012D6  67                 	db	103
    57  0012D7  72                 	db	114
    58  0012D8  61                 	db	97
    59  0012D9  6D                 	db	109
    60  0012DA  6D                 	db	109
    61  0012DB  69                 	db	105
    62  0012DC  6E                 	db	110
    63  0012DD  67                 	db	103
    64  0012DE  20                 	db	32
    65  0012DF  62                 	db	98
    66  0012E0  79                 	db	121
    67  0012E1  20                 	db	32
    68  0012E2  45                 	db	69
    69  0012E3  78                 	db	120
    70  0012E4  70                 	db	112
    71  0012E5  6C                 	db	108
    72  0012E6  6F                 	db	111
    73  0012E7  72                 	db	114
    74  0012E8  65                 	db	101
    75  0012E9  20                 	db	32
    76  0012EA  45                 	db	69
    77  0012EB  6D                 	db	109
    78  0012EC  62                 	db	98
    79  0012ED  65                 	db	101
    80  0012EE  64                 	db	100
    81  0012EF  64                 	db	100
    82  0012F0  65                 	db	101
    83  0012F1  64                 	db	100
    84  0012F2  00                 	db	0
    85  0000                     _EEADR	set	4009
    86  0000                     _EECON1	set	4006
    87  0000                     _EECON2	set	4007
    88  0000                     _EEDATA	set	4008
    89  0000                     _RCREG	set	4014
    90  0000                     _RCSTA	set	4011
    91  0000                     _SPBRG	set	4015
    92  0000                     _TRISC	set	3988
    93  0000                     _TXREG	set	4013
    94  0000                     _TXSTA	set	4012
    95  0000                     _GIE	set	32663
    96  0000                     _RCIF	set	31989
    97  0000                     _TXIF	set	31988
    98                           
    99                           	psect	smallconst
   100  000600                     __psmallconst:
   101                           	opt stack 0
   102  000600  00                 	db	0
   103  000601                     STR_1:
   104  000601  0A                 	db	10
   105  000602  0D                 	db	13
   106  000603  45                 	db	69	;'E'
   107  000604  65                 	db	101	;'e'
   108  000605  70                 	db	112	;'p'
   109  000606  72                 	db	114	;'r'
   110  000607  6F                 	db	111	;'o'
   111  000608  6D                 	db	109	;'m'
   112  000609  20                 	db	32
   113  00060A  57                 	db	87	;'W'
   114  00060B  72                 	db	114	;'r'
   115  00060C  69                 	db	105	;'i'
   116  00060D  74                 	db	116	;'t'
   117  00060E  65                 	db	101	;'e'
   118  00060F  20                 	db	32
   119  000610  53                 	db	83	;'S'
   120  000611  74                 	db	116	;'t'
   121  000612  72                 	db	114	;'r'
   122  000613  69                 	db	105	;'i'
   123  000614  6E                 	db	110	;'n'
   124  000615  67                 	db	103	;'g'
   125  000616  3A                 	db	58	;':'
   126  000617  20                 	db	32
   127  000618  25                 	db	37
   128  000619  73                 	db	115	;'s'
   129  00061A  00                 	db	0
   130  00061B                     STR_2:
   131  00061B  0A                 	db	10
   132  00061C  0D                 	db	13
   133  00061D  45                 	db	69	;'E'
   134  00061E  65                 	db	101	;'e'
   135  00061F  70                 	db	112	;'p'
   136  000620  72                 	db	114	;'r'
   137  000621  6F                 	db	111	;'o'
   138  000622  6D                 	db	109	;'m'
   139  000623  20                 	db	32
   140  000624  52                 	db	82	;'R'
   141  000625  65                 	db	101	;'e'
   142  000626  61                 	db	97	;'a'
   143  000627  64                 	db	100	;'d'
   144  000628  20                 	db	32
   145  000629  53                 	db	83	;'S'
   146  00062A  74                 	db	116	;'t'
   147  00062B  72                 	db	114	;'r'
   148  00062C  69                 	db	105	;'i'
   149  00062D  6E                 	db	110	;'n'
   150  00062E  67                 	db	103	;'g'
   151  00062F  3A                 	db	58	;':'
   152  000630  20                 	db	32
   153  000631  25                 	db	37
   154  000632  73                 	db	115	;'s'
   155  000633  00                 	db	0
   156                           
   157                           ; #config settings
   158  000634  00                 	db	0	; dummy byte at the end
   159  0000                     
   160                           	psect	cinit
   161  0012F4                     __pcinit:
   162                           	opt stack 0
   163  0012F4                     start_initialization:
   164                           	opt stack 0
   165  0012F4                     __initialization:
   166                           	opt stack 0
   167                           
   168                           ; Initialize objects allocated to COMRAM (47 bytes)
   169                           ; load TBLPTR registers with __pidataCOMRAM
   170  0012F4  0EC4               	movlw	low __pidataCOMRAM
   171  0012F6  6EF6               	movwf	tblptrl,c
   172  0012F8  0E12               	movlw	high __pidataCOMRAM
   173  0012FA  6EF7               	movwf	tblptrh,c
   174  0012FC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   175  0012FE  6EF8               	movwf	tblptru,c
   176  001300  EE00  F04E         	lfsr	0,__pdataCOMRAM
   177  001304  EE10 F02F          	lfsr	1,47
   178  001308                     copy_data0:
   179  001308  0009               	tblrd		*+
   180  00130A  CFF5 FFEE          	movff	tablat,postinc0
   181  00130E  50E5               	movf	postdec1,w,c
   182  001310  50E1               	movf	fsr1l,w,c
   183  001312  E1FA               	bnz	copy_data0
   184  001314                     end_of_initialization:
   185                           	opt stack 0
   186  001314                     __end_of__initialization:
   187                           	opt stack 0
   188  001314  0E00               	movlw	low (__Lmediumconst shr (0+16))
   189  001316  6EF8               	movwf	tblptru,c
   190  001318  0100               	movlb	0
   191  00131A  EF8A  F008         	goto	_main	;jump to C main() function
   192                           tblptru	equ	0xFF8
   193                           tblptrh	equ	0xFF7
   194                           tblptrl	equ	0xFF6
   195                           tablat	equ	0xFF5
   196                           postinc0	equ	0xFEE
   197                           postdec1	equ	0xFE5
   198                           fsr1l	equ	0xFE1
   199                           
   200                           	psect	dataCOMRAM
   201  00004E                     __pdataCOMRAM:
   202                           	opt stack 0
   203  00004E                     main@F3254:
   204                           	opt stack 0
   205  00004E                     	ds	47
   206                           tblptru	equ	0xFF8
   207                           tblptrh	equ	0xFF7
   208                           tblptrl	equ	0xFF6
   209                           tablat	equ	0xFF5
   210                           postinc0	equ	0xFEE
   211                           postdec1	equ	0xFE5
   212                           fsr1l	equ	0xFE1
   213                           
   214                           	psect	cstackBANK0
   215  000080                     __pcstackBANK0:
   216                           	opt stack 0
   217  000080                     main@read_str:
   218                           	opt stack 0
   219                           
   220                           ; 50 bytes @ 0x0
   221  000080                     	ds	50
   222  0000B2                     main@write_str:
   223                           	opt stack 0
   224                           
   225                           ; 47 bytes @ 0x32
   226  0000B2                     	ds	47
   227  0000E1                     main@eeprom_address:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x61
   231  0000E1                     	ds	1
   232                           tblptru	equ	0xFF8
   233                           tblptrh	equ	0xFF7
   234                           tblptrl	equ	0xFF6
   235                           tablat	equ	0xFF5
   236                           postinc0	equ	0xFEE
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	cstackCOMRAM
   241  000001                     __pcstackCOMRAM:
   242                           	opt stack 0
   243  000001                     ?___ftpack:
   244                           	opt stack 0
   245  000001                     ?___lldiv:
   246                           	opt stack 0
   247  000001                     UART_TxChar@v_uartData_u8:
   248                           	opt stack 0
   249  000001                     EEPROM_WriteByte@v_eepromAddress_u16:
   250                           	opt stack 0
   251  000001                     EEPROM_ReadByte@v_eepromAddress_u16:
   252                           	opt stack 0
   253  000001                     ___ftpack@arg:
   254                           	opt stack 0
   255  000001                     ___lldiv@dividend:
   256                           	opt stack 0
   257                           
   258                           ; 4 bytes @ 0x0
   259  000001                     	ds	1
   260  000002                     UART_TxString@ptr_string:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0x1
   264  000002                     	ds	1
   265  000003                     EEPROM_WriteByte@v_eepromData_u8:
   266                           	opt stack 0
   267  000003                     EEPROM_ReadString@v_eepromAddress_u16:
   268                           	opt stack 0
   269                           
   270                           ; 2 bytes @ 0x2
   271  000003                     	ds	1
   272  000004                     EEPROM_WriteByte@gie_value:
   273                           	opt stack 0
   274  000004                     ___ftpack@exp:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x3
   278  000004                     	ds	1
   279  000005                     ___ftpack@sign:
   280                           	opt stack 0
   281  000005                     EEPROM_WriteString@v_eepromAddress_u16:
   282                           	opt stack 0
   283  000005                     EEPROM_ReadString@ptr_destStringAddress_u8:
   284                           	opt stack 0
   285  000005                     ___lldiv@divisor:
   286                           	opt stack 0
   287                           
   288                           ; 4 bytes @ 0x4
   289  000005                     	ds	1
   290  000006                     ??___ftpack:
   291                           
   292                           ; 1 bytes @ 0x5
   293  000006                     	ds	1
   294  000007                     EEPROM_ReadString@eeprom_data:
   295                           	opt stack 0
   296  000007                     EEPROM_WriteString@ptr_stringPointer_u8:
   297                           	opt stack 0
   298                           
   299                           ; 2 bytes @ 0x6
   300  000007                     	ds	2
   301  000009                     ?___ftmul:
   302                           	opt stack 0
   303  000009                     ?___lltoft:
   304                           	opt stack 0
   305  000009                     ___ftmul@f1:
   306                           	opt stack 0
   307  000009                     ___lldiv@quotient:
   308                           	opt stack 0
   309  000009                     ___lltoft@c:
   310                           	opt stack 0
   311                           
   312                           ; 4 bytes @ 0x8
   313  000009                     	ds	3
   314  00000C                     ___ftmul@f2:
   315                           	opt stack 0
   316                           
   317                           ; 3 bytes @ 0xB
   318  00000C                     	ds	1
   319  00000D                     ??___lltoft:
   320  00000D                     ___lldiv@counter:
   321                           	opt stack 0
   322                           
   323                           ; 1 bytes @ 0xC
   324  00000D                     	ds	1
   325  00000E                     UART_SetBaudRate@v_baudRate_u32:
   326                           	opt stack 0
   327  00000E                     UART_TxNumber@v_number_u32:
   328                           	opt stack 0
   329                           
   330                           ; 4 bytes @ 0xD
   331  00000E                     	ds	1
   332  00000F                     ??___ftmul:
   333                           
   334                           ; 1 bytes @ 0xE
   335  00000F                     	ds	2
   336  000011                     ___lltoft@exp:
   337                           	opt stack 0
   338                           
   339                           ; 1 bytes @ 0x10
   340  000011                     	ds	1
   341  000012                     ??_UART_SetBaudRate:
   342  000012                     ?___ftneg:
   343                           	opt stack 0
   344  000012                     UART_TxNumber@v_numOfDigitsToTransmit_u8:
   345                           	opt stack 0
   346  000012                     ___ftmul@exp:
   347                           	opt stack 0
   348  000012                     ___ftneg@f1:
   349                           	opt stack 0
   350                           
   351                           ; 3 bytes @ 0x11
   352  000012                     	ds	1
   353  000013                     ??_UART_TxNumber:
   354  000013                     ___ftmul@f3_as_product:
   355                           	opt stack 0
   356                           
   357                           ; 3 bytes @ 0x12
   358  000013                     	ds	2
   359  000015                     ?___ftadd:
   360                           	opt stack 0
   361  000015                     ___ftadd@f1:
   362                           	opt stack 0
   363                           
   364                           ; 3 bytes @ 0x14
   365  000015                     	ds	1
   366  000016                     UART_SetBaudRate@RegValue:
   367                           	opt stack 0
   368  000016                     ___ftmul@cntr:
   369                           	opt stack 0
   370                           
   371                           ; 1 bytes @ 0x15
   372  000016                     	ds	1
   373  000017                     ___ftmul@sign:
   374                           	opt stack 0
   375  000017                     UART_Init@v_baudRate_u32:
   376                           	opt stack 0
   377                           
   378                           ; 4 bytes @ 0x16
   379  000017                     	ds	1
   380  000018                     ?___fttol:
   381                           	opt stack 0
   382  000018                     ___ftadd@f2:
   383                           	opt stack 0
   384  000018                     ___fttol@f1:
   385                           	opt stack 0
   386                           
   387                           ; 3 bytes @ 0x17
   388  000018                     	ds	3
   389  00001B                     ??___ftadd:
   390  00001B                     
   391                           ; 1 bytes @ 0x1A
   392  00001B                     	ds	1
   393  00001C                     ??___fttol:
   394                           
   395                           ; 1 bytes @ 0x1B
   396  00001C                     	ds	2
   397  00001E                     ___ftadd@sign:
   398                           	opt stack 0
   399  00001E                     UART_TxNumber@a:
   400                           	opt stack 0
   401                           
   402                           ; 10 bytes @ 0x1D
   403  00001E                     	ds	1
   404  00001F                     ___ftadd@exp2:
   405                           	opt stack 0
   406                           
   407                           ; 1 bytes @ 0x1E
   408  00001F                     	ds	1
   409  000020                     ___ftadd@exp1:
   410                           	opt stack 0
   411                           
   412                           ; 1 bytes @ 0x1F
   413  000020                     	ds	1
   414  000021                     ___fttol@sign1:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0x20
   418  000021                     	ds	1
   419  000022                     ___fttol@lval:
   420                           	opt stack 0
   421                           
   422                           ; 4 bytes @ 0x21
   423  000022                     	ds	4
   424  000026                     ___fttol@exp1:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x25
   428  000026                     	ds	2
   429  000028                     _UART_TxNumber$101:
   430                           	opt stack 0
   431                           
   432                           ; 2 bytes @ 0x27
   433  000028                     	ds	2
   434  00002A                     UART_TxNumber@v_numericSystem_u8:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x29
   438  00002A                     	ds	1
   439  00002B                     UART_TxNumber@i:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x2A
   443  00002B                     	ds	1
   444  00002C                     UART_TxFloatNumber@v_floatNumber_f32:
   445                           	opt stack 0
   446                           
   447                           ; 3 bytes @ 0x2B
   448  00002C                     	ds	3
   449  00002F                     UART_TxFloatNumber@v_decNumber_u32:
   450                           	opt stack 0
   451                           
   452                           ; 4 bytes @ 0x2E
   453  00002F                     	ds	4
   454  000033                     ?_UART_Printf:
   455                           	opt stack 0
   456  000033                     UART_Printf@argList:
   457                           	opt stack 0
   458                           
   459                           ; 2 bytes @ 0x32
   460  000033                     	ds	4
   461  000037                     UART_Printf@v_floatNum_f32:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x36
   465  000037                     	ds	3
   466  00003A                     UART_Printf@str:
   467                           	opt stack 0
   468                           
   469                           ; 2 bytes @ 0x39
   470  00003A                     	ds	2
   471  00003C                     UART_Printf@v_num_s32:
   472                           	opt stack 0
   473                           
   474                           ; 4 bytes @ 0x3B
   475  00003C                     	ds	4
   476  000040                     UART_Printf@v_num_s16:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x3F
   480  000040                     	ds	2
   481  000042                     UART_Printf@v_num_u32:
   482                           	opt stack 0
   483                           
   484                           ; 4 bytes @ 0x41
   485  000042                     	ds	4
   486  000046                     UART_Printf@v_num_u16:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x45
   490  000046                     	ds	2
   491  000048                     UART_Printf@ptr:
   492                           	opt stack 0
   493                           
   494                           ; 2 bytes @ 0x47
   495  000048                     	ds	2
   496  00004A                     UART_Printf@ch:
   497                           	opt stack 0
   498                           
   499                           ; 1 bytes @ 0x49
   500  00004A                     	ds	1
   501  00004B                     UART_Printf@v_numOfDigitsToTransmit_u8:
   502                           	opt stack 0
   503                           
   504                           ; 1 bytes @ 0x4A
   505  00004B                     	ds	1
   506  00004C                     UART_Printf@argp:
   507                           	opt stack 0
   508                           
   509                           ; 2 bytes @ 0x4B
   510  00004C                     	ds	2
   511  00004E                     tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           postdec1	equ	0xFE5
   517                           fsr1l	equ	0xFE1
   518                           
   519                           ; 1 bytes @ 0x4D
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 42 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  read_str       50    0[BANK0 ] unsigned char [50]
   530 ;;  write_str      47   50[BANK0 ] unsigned char [47]
   531 ;;  eeprom_addre    1   97[BANK0 ] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  2  197[None  ] int 
   534 ;; Registers used:
   535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   541 ;;      Params:         0       0       0       0       0       0       0
   542 ;;      Locals:         0      98       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0
   544 ;;      Totals:         0      98       0       0       0       0       0
   545 ;;Total ram usage:       98 bytes
   546 ;; Hardware stack levels required when called:    4
   547 ;; This function calls:
   548 ;;		_EEPROM_ReadString
   549 ;;		_EEPROM_WriteString
   550 ;;		_UART_Init
   551 ;;		_UART_Printf
   552 ;; This function is called by:
   553 ;;		Startup code after reset
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text0
   558  001114                     __ptext0:
   559                           	opt stack 0
   560  001114                     _main:
   561                           	opt stack 27
   562                           
   563                           ;main.c: 44: unsigned char eeprom_address = 0x00, write_str[] = "Welcome to Pic programm
      +                          ing by Explore Embedded";
   564                           
   565                           ;incstack = 0
   566  001114  0E00               	movlw	0
   567  001116  0100               	movlb	0	; () banked
   568  001118  6FE1               	movwf	main@eeprom_address& (0+255),b
   569                           
   570                           ; BSR set to: 0
   571  00111A  EE20  F04E         	lfsr	2,main@F3254
   572  00111E  EE10  F0B2         	lfsr	1,main@write_str
   573  001122  0E2E               	movlw	46
   574  001124                     u1821:
   575  001124  CFDB FFE3          	movff	plusw2,plusw1
   576  001128  06E8               	decf	wreg,f,c
   577  00112A  E2FC               	bc	u1821
   578                           
   579                           ; BSR set to: 0
   580                           ;main.c: 45: unsigned char read_str[50];
   581                           ;main.c: 47: UART_Init(9600);
   582  00112C  0E80               	movlw	128
   583  00112E  6E17               	movwf	UART_Init@v_baudRate_u32,c
   584  001130  0E25               	movlw	37
   585  001132  6E18               	movwf	UART_Init@v_baudRate_u32+1,c
   586  001134  0E00               	movlw	0
   587  001136  6E19               	movwf	UART_Init@v_baudRate_u32+2,c
   588  001138  0E00               	movlw	0
   589  00113A  6E1A               	movwf	UART_Init@v_baudRate_u32+3,c
   590  00113C  ECC8  F009         	call	_UART_Init	;wreg free
   591                           
   592                           ;main.c: 49: UART_Printf("\n\rEeprom Write String: %s", write_str);
   593  001140  0E01               	movlw	low STR_1
   594  001142  6E33               	movwf	UART_Printf@argList,c
   595  001144  0E06               	movlw	high STR_1
   596  001146  6E34               	movwf	UART_Printf@argList+1,c
   597  001148  0EB2               	movlw	low main@write_str
   598  00114A  6E35               	movwf	?_UART_Printf+2,c
   599  00114C  0E00               	movlw	high main@write_str
   600  00114E  6E36               	movwf	?_UART_Printf+3,c
   601  001150  EC1B  F003         	call	_UART_Printf	;wreg free
   602                           
   603                           ;main.c: 50: EEPROM_WriteString(eeprom_address, write_str);
   604  001154  C0E1  F005         	movff	main@eeprom_address,EEPROM_WriteString@v_eepromAddress_u16
   605  001158  6A06               	clrf	EEPROM_WriteString@v_eepromAddress_u16+1,c
   606  00115A  0EB2               	movlw	low main@write_str
   607  00115C  6E07               	movwf	EEPROM_WriteString@ptr_stringPointer_u8,c
   608  00115E  0E00               	movlw	high main@write_str
   609  001160  6E08               	movwf	EEPROM_WriteString@ptr_stringPointer_u8+1,c
   610  001162  EC30  F009         	call	_EEPROM_WriteString	;wreg free
   611                           
   612                           ;main.c: 53: EEPROM_ReadString(eeprom_address, read_str);
   613  001166  C0E1  F003         	movff	main@eeprom_address,EEPROM_ReadString@v_eepromAddress_u16
   614  00116A  6A04               	clrf	EEPROM_ReadString@v_eepromAddress_u16+1,c
   615  00116C  0E80               	movlw	low main@read_str
   616  00116E  6E05               	movwf	EEPROM_ReadString@ptr_destStringAddress_u8,c
   617  001170  0E00               	movlw	high main@read_str
   618  001172  6E06               	movwf	EEPROM_ReadString@ptr_destStringAddress_u8+1,c
   619  001174  EC8F  F009         	call	_EEPROM_ReadString	;wreg free
   620                           
   621                           ;main.c: 54: UART_Printf("\n\rEeprom Read String: %s", read_str);
   622  001178  0E1B               	movlw	low STR_2
   623  00117A  6E33               	movwf	UART_Printf@argList,c
   624  00117C  0E06               	movlw	high STR_2
   625  00117E  6E34               	movwf	UART_Printf@argList+1,c
   626  001180  0E80               	movlw	low main@read_str
   627  001182  6E35               	movwf	?_UART_Printf+2,c
   628  001184  0E00               	movlw	high main@read_str
   629  001186  6E36               	movwf	?_UART_Printf+3,c
   630  001188  EC1B  F003         	call	_UART_Printf	;wreg free
   631  00118C                     l200:
   632  00118C  D7FF               	goto	l200
   633  00118E                     __end_of_main:
   634                           	opt stack 0
   635                           tblptru	equ	0xFF8
   636                           tblptrh	equ	0xFF7
   637                           tblptrl	equ	0xFF6
   638                           tablat	equ	0xFF5
   639                           postinc0	equ	0xFEE
   640                           wreg	equ	0xFE8
   641                           postdec1	equ	0xFE5
   642                           plusw1	equ	0xFE3
   643                           fsr1l	equ	0xFE1
   644                           plusw2	equ	0xFDB
   645                           
   646 ;; *************** function _UART_Printf *****************
   647 ;; Defined at:
   648 ;;		line 413 in file "../00-libfiles/uart.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;  argList         2   50[COMRAM] PTR const unsigned char 
   651 ;;		 -> STR_2(25), STR_1(26), 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;  v_num_u32       4   65[COMRAM] unsigned long 
   654 ;;  v_num_s32       4   59[COMRAM] long 
   655 ;;  v_floatNum_f    3   54[COMRAM] long 
   656 ;;  argp            2   75[COMRAM] PTR void [1]
   657 ;;		 -> ?_UART_Printf(1), 
   658 ;;  ptr             2   71[COMRAM] PTR const unsigned char 
   659 ;;		 -> STR_2(25), STR_1(26), 
   660 ;;  v_num_u16       2   69[COMRAM] unsigned int 
   661 ;;  v_num_s16       2   63[COMRAM] int 
   662 ;;  str             2   57[COMRAM] PTR unsigned char 
   663 ;;		 -> main@read_str(50), main@write_str(47), 
   664 ;;  v_numOfDigit    1   74[COMRAM] unsigned char 
   665 ;;  ch              1   73[COMRAM] unsigned char 
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   675 ;;      Params:         4       0       0       0       0       0       0
   676 ;;      Locals:        23       0       0       0       0       0       0
   677 ;;      Temps:          0       0       0       0       0       0       0
   678 ;;      Totals:        27       0       0       0       0       0       0
   679 ;;Total ram usage:       27 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    3
   682 ;; This function calls:
   683 ;;		_UART_TxChar
   684 ;;		_UART_TxFloatNumber
   685 ;;		_UART_TxNumber
   686 ;;		_UART_TxString
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text1
   693  000636                     __ptext1:
   694                           	opt stack 0
   695  000636                     _UART_Printf:
   696                           	opt stack 27
   697                           
   698                           ;uart.c: 415: const char *ptr;
   699                           ;uart.c: 416: va_list argp;
   700                           ;uart.c: 417: sint16_t v_num_s16;
   701                           ;uart.c: 418: sint32_t v_num_s32;
   702                           ;uart.c: 419: uint16_t v_num_u16;
   703                           ;uart.c: 420: uint32_t v_num_u32;
   704                           ;uart.c: 421: char *str;
   705                           ;uart.c: 422: char ch;
   706                           ;uart.c: 423: uint8_t v_numOfDigitsToTransmit_u8;
   707                           ;uart.c: 425: double v_floatNum_f32;
   708                           ;uart.c: 429: *argp = __va_start();
   709                           
   710                           ;incstack = 0
   711  000636  0E35               	movlw	low (?_UART_Printf+2)
   712  000638  6E4C               	movwf	UART_Printf@argp,c
   713  00063A  0E00               	movlw	high (?_UART_Printf+2)
   714  00063C  6E4D               	movwf	UART_Printf@argp+1,c
   715                           
   716                           ;uart.c: 432: for(ptr = argList; *ptr != '\0'; ptr++)
   717  00063E  C033  F048         	movff	UART_Printf@argList,UART_Printf@ptr
   718  000642  C034  F049         	movff	UART_Printf@argList+1,UART_Printf@ptr+1
   719  000646  D1A0               	goto	l1889
   720  000648                     l1769:
   721                           
   722                           ;uart.c: 433: {
   723                           ;uart.c: 435: ch= *ptr;
   724  000648  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
   725  00064C  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   726  000650                     	if	0	;tblptru may be non-zero
   727  000650                     	endif
   728  000650                     	if	0	;tblptru may be non-zero
   729  000650                     	endif
   730  000650  0008               	tblrd		*
   731  000652  CFF5 F04A          	movff	tablat,UART_Printf@ch
   732                           
   733                           ;uart.c: 436: if(ch == '%')
   734  000656  0E25               	movlw	37
   735  000658  184A               	xorwf	UART_Printf@ch,w,c
   736  00065A  A4D8               	btfss	status,2,c
   737  00065C  D190               	goto	l1885
   738                           
   739                           ;uart.c: 437: {
   740                           ;uart.c: 438: ptr++;
   741  00065E  4A48               	infsnz	UART_Printf@ptr,f,c
   742  000660  2A49               	incf	UART_Printf@ptr+1,f,c
   743                           
   744                           ;uart.c: 439: ch = *ptr;
   745  000662  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
   746  000666  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   747  00066A                     	if	0	;tblptru may be non-zero
   748  00066A                     	endif
   749  00066A                     	if	0	;tblptru may be non-zero
   750  00066A                     	endif
   751  00066A  0008               	tblrd		*
   752  00066C  CFF5 F04A          	movff	tablat,UART_Printf@ch
   753                           
   754                           ;uart.c: 440: if((ch>=0x30) && (ch<=0x39))
   755  000670  0E2F               	movlw	47
   756  000672  644A               	cpfsgt	UART_Printf@ch,c
   757  000674  D01C               	goto	l157
   758  000676  0E3A               	movlw	58
   759  000678  604A               	cpfslt	UART_Printf@ch,c
   760  00067A  D019               	goto	l157
   761                           
   762                           ;uart.c: 441: {
   763                           ;uart.c: 442: v_numOfDigitsToTransmit_u8 = 0;
   764  00067C  0E00               	movlw	0
   765  00067E  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   766                           
   767                           ;uart.c: 443: while((ch>=0x30) && (ch<=0x39))
   768  000680  D00F               	goto	l1789
   769  000682                     l1783:
   770                           
   771                           ;uart.c: 444: {
   772                           ;uart.c: 445: v_numOfDigitsToTransmit_u8 = (v_numOfDigitsToTransmit_u8 * 10) + (ch-0x30)
      +                          ;
   773  000682  504B               	movf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
   774  000684  0D0A               	mullw	10
   775  000686  50F3               	movf	prodl,w,c
   776  000688  244A               	addwf	UART_Printf@ch,w,c
   777  00068A  0FD0               	addlw	208
   778  00068C  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   779                           
   780                           ;uart.c: 446: ptr++;
   781  00068E  4A48               	infsnz	UART_Printf@ptr,f,c
   782  000690  2A49               	incf	UART_Printf@ptr+1,f,c
   783                           
   784                           ;uart.c: 447: ch = *ptr;
   785  000692  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
   786  000696  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
   787  00069A                     	if	0	;tblptru may be non-zero
   788  00069A                     	endif
   789  00069A                     	if	0	;tblptru may be non-zero
   790  00069A                     	endif
   791  00069A  0008               	tblrd		*
   792  00069C  CFF5 F04A          	movff	tablat,UART_Printf@ch
   793  0006A0                     l1789:
   794  0006A0  0E2F               	movlw	47
   795  0006A2  644A               	cpfsgt	UART_Printf@ch,c
   796  0006A4  D13D               	goto	l1883
   797  0006A6  0E39               	movlw	57
   798  0006A8  644A               	cpfsgt	UART_Printf@ch,c
   799  0006AA  D7EB               	goto	l1783
   800  0006AC  D139               	goto	l1883
   801  0006AE                     l157:
   802                           
   803                           ;uart.c: 450: else
   804                           ;uart.c: 451: {
   805                           ;uart.c: 452: v_numOfDigitsToTransmit_u8 = 0xffu;
   806  0006AE  684B               	setf	UART_Printf@v_numOfDigitsToTransmit_u8,c
   807                           
   808                           ;uart.c: 453: }
   809                           ;uart.c: 456: switch(ch)
   810  0006B0  D137               	goto	l1883
   811  0006B2                     l1793:
   812                           
   813                           ;uart.c: 459: case 'c':
   814                           ;uart.c: 460: ch = (*(uint8_t *)__va_arg((*(uint8_t **)argp), (uint8_t)0));
   815  0006B2  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   816  0006B6  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   817  0006BA  50DF               	movf	indf2,w,c
   818  0006BC  6E4A               	movwf	UART_Printf@ch,c
   819  0006BE  0E02               	movlw	2
   820  0006C0  264C               	addwf	UART_Printf@argp,f,c
   821  0006C2  0E00               	movlw	0
   822  0006C4  224D               	addwfc	UART_Printf@argp+1,f,c
   823                           
   824                           ;uart.c: 461: UART_TxChar(ch);
   825  0006C6  504A               	movf	UART_Printf@ch,w,c
   826  0006C8  ECE1  F009         	call	_UART_TxChar
   827                           
   828                           ;uart.c: 462: break;
   829  0006CC  D15B               	goto	l1887
   830  0006CE                     l1799:
   831                           
   832                           ;uart.c: 465: v_num_s16 = (*(sint16_t *)__va_arg((*(sint16_t **)argp), (sint16_t)0));
   833  0006CE  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   834  0006D2  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   835  0006D6  CFDE F040          	movff	postinc2,UART_Printf@v_num_s16
   836  0006DA  CFDD F041          	movff	postdec2,UART_Printf@v_num_s16+1
   837  0006DE  0E02               	movlw	2
   838  0006E0  264C               	addwf	UART_Printf@argp,f,c
   839  0006E2  0E00               	movlw	0
   840  0006E4  224D               	addwfc	UART_Printf@argp+1,f,c
   841                           
   842                           ;uart.c: 466: if(v_num_s16<0)
   843  0006E6  AE41               	btfss	UART_Printf@v_num_s16+1,7,c
   844  0006E8  D007               	goto	l1809
   845                           
   846                           ;uart.c: 467: {
   847                           ;uart.c: 468: v_num_s16 = -v_num_s16;
   848  0006EA  6C40               	negf	UART_Printf@v_num_s16,c
   849  0006EC  1E41               	comf	UART_Printf@v_num_s16+1,f,c
   850  0006EE  B0D8               	btfsc	status,0,c
   851  0006F0  2A41               	incf	UART_Printf@v_num_s16+1,f,c
   852                           
   853                           ;uart.c: 469: UART_TxChar('-');
   854  0006F2  0E2D               	movlw	45
   855  0006F4  ECE1  F009         	call	_UART_TxChar
   856  0006F8                     l1809:
   857                           
   858                           ;uart.c: 470: }
   859                           ;uart.c: 471: UART_TxNumber(10u,v_num_s16,v_numOfDigitsToTransmit_u8);
   860  0006F8  C040  F00E         	movff	UART_Printf@v_num_s16,UART_TxNumber@v_number_u32
   861  0006FC  C041  F00F         	movff	UART_Printf@v_num_s16+1,UART_TxNumber@v_number_u32+1
   862  000700  0E00               	movlw	0
   863  000702  BE0F               	btfsc	UART_TxNumber@v_number_u32+1,7,c
   864  000704  0EFF               	movlw	-1
   865  000706  6E10               	movwf	UART_TxNumber@v_number_u32+2,c
   866  000708  6E11               	movwf	UART_TxNumber@v_number_u32+3,c
   867  00070A  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   868  00070E  0E0A               	movlw	10
   869  000710  ECCE  F004         	call	_UART_TxNumber
   870                           
   871                           ;uart.c: 472: break;
   872  000714  D137               	goto	l1887
   873  000716                     l1811:
   874                           
   875                           ;uart.c: 475: v_num_s32 = (*(sint32_t *)__va_arg((*(sint32_t **)argp), (sint32_t)0));
   876  000716  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   877  00071A  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   878  00071E  CFDE F03C          	movff	postinc2,UART_Printf@v_num_s32
   879  000722  CFDE F03D          	movff	postinc2,UART_Printf@v_num_s32+1
   880  000726  CFDE F03E          	movff	postinc2,UART_Printf@v_num_s32+2
   881  00072A  CFDE F03F          	movff	postinc2,UART_Printf@v_num_s32+3
   882  00072E  0E04               	movlw	4
   883  000730  264C               	addwf	UART_Printf@argp,f,c
   884  000732  0E00               	movlw	0
   885  000734  224D               	addwfc	UART_Printf@argp+1,f,c
   886                           
   887                           ;uart.c: 476: if(v_num_s32<0)
   888  000736  AE3F               	btfss	UART_Printf@v_num_s32+3,7,c
   889  000738  D00B               	goto	l1821
   890                           
   891                           ;uart.c: 477: {
   892                           ;uart.c: 478: v_num_s32 = -v_num_s32;
   893  00073A  1E3F               	comf	UART_Printf@v_num_s32+3,f,c
   894  00073C  1E3E               	comf	UART_Printf@v_num_s32+2,f,c
   895  00073E  1E3D               	comf	UART_Printf@v_num_s32+1,f,c
   896  000740  6C3C               	negf	UART_Printf@v_num_s32,c
   897  000742  0E00               	movlw	0
   898  000744  223D               	addwfc	UART_Printf@v_num_s32+1,f,c
   899  000746  223E               	addwfc	UART_Printf@v_num_s32+2,f,c
   900  000748  223F               	addwfc	UART_Printf@v_num_s32+3,f,c
   901                           
   902                           ;uart.c: 479: UART_TxChar('-');
   903  00074A  0E2D               	movlw	45
   904  00074C  ECE1  F009         	call	_UART_TxChar
   905  000750                     l1821:
   906                           
   907                           ;uart.c: 480: }
   908                           ;uart.c: 481: UART_TxNumber(10u,v_num_s32,v_numOfDigitsToTransmit_u8);
   909  000750  C03C  F00E         	movff	UART_Printf@v_num_s32,UART_TxNumber@v_number_u32
   910  000754  C03D  F00F         	movff	UART_Printf@v_num_s32+1,UART_TxNumber@v_number_u32+1
   911  000758  C03E  F010         	movff	UART_Printf@v_num_s32+2,UART_TxNumber@v_number_u32+2
   912  00075C  C03F  F011         	movff	UART_Printf@v_num_s32+3,UART_TxNumber@v_number_u32+3
   913  000760  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   914  000764  0E0A               	movlw	10
   915  000766  ECCE  F004         	call	_UART_TxNumber
   916                           
   917                           ;uart.c: 482: break;
   918  00076A  D10C               	goto	l1887
   919  00076C                     l1823:
   920                           
   921                           ;uart.c: 485: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   922  00076C  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   923  000770  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   924  000774  CFDE F046          	movff	postinc2,UART_Printf@v_num_u16
   925  000778  CFDD F047          	movff	postdec2,UART_Printf@v_num_u16+1
   926  00077C  0E02               	movlw	2
   927  00077E  264C               	addwf	UART_Printf@argp,f,c
   928  000780  0E00               	movlw	0
   929  000782  224D               	addwfc	UART_Printf@argp+1,f,c
   930                           
   931                           ;uart.c: 486: UART_TxNumber(10u,v_num_u16,v_numOfDigitsToTransmit_u8);
   932  000784  C046  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   933  000788  C047  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   934  00078C  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   935  00078E  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   936  000790  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   937  000794  0E0A               	movlw	10
   938  000796  ECCE  F004         	call	_UART_TxNumber
   939                           
   940                           ;uart.c: 487: break;
   941  00079A  D0F4               	goto	l1887
   942  00079C                     l1829:
   943                           
   944                           ;uart.c: 490: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   945  00079C  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   946  0007A0  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   947  0007A4  CFDE F042          	movff	postinc2,UART_Printf@v_num_u32
   948  0007A8  CFDE F043          	movff	postinc2,UART_Printf@v_num_u32+1
   949  0007AC  CFDE F044          	movff	postinc2,UART_Printf@v_num_u32+2
   950  0007B0  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32+3
   951  0007B4  0E04               	movlw	4
   952  0007B6  264C               	addwf	UART_Printf@argp,f,c
   953  0007B8  0E00               	movlw	0
   954  0007BA  224D               	addwfc	UART_Printf@argp+1,f,c
   955                           
   956                           ;uart.c: 491: UART_TxNumber(10u,v_num_u32,v_numOfDigitsToTransmit_u8);
   957  0007BC  C042  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
   958  0007C0  C043  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
   959  0007C4  C044  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
   960  0007C8  C045  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
   961  0007CC  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   962  0007D0  0E0A               	movlw	10
   963  0007D2  ECCE  F004         	call	_UART_TxNumber
   964                           
   965                           ;uart.c: 492: break;
   966  0007D6  D0D6               	goto	l1887
   967  0007D8                     l1835:
   968                           
   969                           ;uart.c: 495: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
   970  0007D8  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   971  0007DC  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   972  0007E0  CFDE F046          	movff	postinc2,UART_Printf@v_num_u16
   973  0007E4  CFDD F047          	movff	postdec2,UART_Printf@v_num_u16+1
   974  0007E8  0E02               	movlw	2
   975  0007EA  264C               	addwf	UART_Printf@argp,f,c
   976  0007EC  0E00               	movlw	0
   977  0007EE  224D               	addwfc	UART_Printf@argp+1,f,c
   978                           
   979                           ;uart.c: 496: UART_TxNumber(16u,v_num_u16,v_numOfDigitsToTransmit_u8);
   980  0007F0  C046  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
   981  0007F4  C047  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
   982  0007F8  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
   983  0007FA  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
   984  0007FC  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
   985  000800  0E10               	movlw	16
   986  000802  ECCE  F004         	call	_UART_TxNumber
   987                           
   988                           ;uart.c: 497: break;
   989  000806  D0BE               	goto	l1887
   990  000808                     l1841:
   991                           
   992                           ;uart.c: 500: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
   993  000808  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
   994  00080C  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
   995  000810  CFDE F042          	movff	postinc2,UART_Printf@v_num_u32
   996  000814  CFDE F043          	movff	postinc2,UART_Printf@v_num_u32+1
   997  000818  CFDE F044          	movff	postinc2,UART_Printf@v_num_u32+2
   998  00081C  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32+3
   999  000820  0E04               	movlw	4
  1000  000822  264C               	addwf	UART_Printf@argp,f,c
  1001  000824  0E00               	movlw	0
  1002  000826  224D               	addwfc	UART_Printf@argp+1,f,c
  1003                           
  1004                           ;uart.c: 501: UART_TxNumber(16u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1005  000828  C042  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
  1006  00082C  C043  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
  1007  000830  C044  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
  1008  000834  C045  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
  1009  000838  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1010  00083C  0E10               	movlw	16
  1011  00083E  ECCE  F004         	call	_UART_TxNumber
  1012                           
  1013                           ;uart.c: 502: break;
  1014  000842  D0A0               	goto	l1887
  1015  000844                     l1847:
  1016                           
  1017                           ;uart.c: 506: v_num_u16 = (*(uint16_t *)__va_arg((*(uint16_t **)argp), (uint16_t)0));
  1018  000844  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
  1019  000848  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1020  00084C  CFDE F046          	movff	postinc2,UART_Printf@v_num_u16
  1021  000850  CFDD F047          	movff	postdec2,UART_Printf@v_num_u16+1
  1022  000854  0E02               	movlw	2
  1023  000856  264C               	addwf	UART_Printf@argp,f,c
  1024  000858  0E00               	movlw	0
  1025  00085A  224D               	addwfc	UART_Printf@argp+1,f,c
  1026                           
  1027                           ;uart.c: 508: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1028  00085C  284B               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
  1029  00085E  A4D8               	btfss	status,2,c
  1030  000860  D002               	goto	l1855
  1031                           
  1032                           ;uart.c: 509: v_numOfDigitsToTransmit_u8 = 16;
  1033  000862  0E10               	movlw	16
  1034  000864  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
  1035  000866                     l1855:
  1036                           
  1037                           ;uart.c: 511: UART_TxNumber(2u,v_num_u16,v_numOfDigitsToTransmit_u8);
  1038  000866  C046  F00E         	movff	UART_Printf@v_num_u16,UART_TxNumber@v_number_u32
  1039  00086A  C047  F00F         	movff	UART_Printf@v_num_u16+1,UART_TxNumber@v_number_u32+1
  1040  00086E  6A10               	clrf	UART_TxNumber@v_number_u32+2,c
  1041  000870  6A11               	clrf	UART_TxNumber@v_number_u32+3,c
  1042  000872  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1043  000876  0E02               	movlw	2
  1044  000878  ECCE  F004         	call	_UART_TxNumber
  1045                           
  1046                           ;uart.c: 512: break;
  1047  00087C  D083               	goto	l1887
  1048  00087E                     l1857:
  1049                           
  1050                           ;uart.c: 515: v_num_u32 = (*(uint32_t *)__va_arg((*(uint32_t **)argp), (uint32_t)0));
  1051  00087E  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
  1052  000882  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1053  000886  CFDE F042          	movff	postinc2,UART_Printf@v_num_u32
  1054  00088A  CFDE F043          	movff	postinc2,UART_Printf@v_num_u32+1
  1055  00088E  CFDE F044          	movff	postinc2,UART_Printf@v_num_u32+2
  1056  000892  CFDE F045          	movff	postinc2,UART_Printf@v_num_u32+3
  1057  000896  0E04               	movlw	4
  1058  000898  264C               	addwf	UART_Printf@argp,f,c
  1059  00089A  0E00               	movlw	0
  1060  00089C  224D               	addwfc	UART_Printf@argp+1,f,c
  1061                           
  1062                           ;uart.c: 517: if(v_numOfDigitsToTransmit_u8 == 0xffu)
  1063  00089E  284B               	incf	UART_Printf@v_numOfDigitsToTransmit_u8,w,c
  1064  0008A0  A4D8               	btfss	status,2,c
  1065  0008A2  D002               	goto	l1865
  1066                           
  1067                           ;uart.c: 518: v_numOfDigitsToTransmit_u8 = 32;
  1068  0008A4  0E20               	movlw	32
  1069  0008A6  6E4B               	movwf	UART_Printf@v_numOfDigitsToTransmit_u8,c
  1070  0008A8                     l1865:
  1071                           
  1072                           ;uart.c: 520: UART_TxNumber(2u,v_num_u32,v_numOfDigitsToTransmit_u8);
  1073  0008A8  C042  F00E         	movff	UART_Printf@v_num_u32,UART_TxNumber@v_number_u32
  1074  0008AC  C043  F00F         	movff	UART_Printf@v_num_u32+1,UART_TxNumber@v_number_u32+1
  1075  0008B0  C044  F010         	movff	UART_Printf@v_num_u32+2,UART_TxNumber@v_number_u32+2
  1076  0008B4  C045  F011         	movff	UART_Printf@v_num_u32+3,UART_TxNumber@v_number_u32+3
  1077  0008B8  C04B  F012         	movff	UART_Printf@v_numOfDigitsToTransmit_u8,UART_TxNumber@v_numOfDigitsToTransmit_u8
  1078  0008BC  0E02               	movlw	2
  1079  0008BE  ECCE  F004         	call	_UART_TxNumber
  1080                           
  1081                           ;uart.c: 521: break;
  1082  0008C2  D060               	goto	l1887
  1083  0008C4                     l1867:
  1084                           
  1085                           ;uart.c: 525: case 'f':
  1086                           ;uart.c: 527: v_floatNum_f32 = (*(double *)__va_arg((*(double **)argp), (double)0));
  1087  0008C4  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
  1088  0008C8  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1089  0008CC  CFDE F037          	movff	postinc2,UART_Printf@v_floatNum_f32
  1090  0008D0  CFDE F038          	movff	postinc2,UART_Printf@v_floatNum_f32+1
  1091  0008D4  CFDD F039          	movff	postdec2,UART_Printf@v_floatNum_f32+2
  1092  0008D8  0E03               	movlw	3
  1093  0008DA  264C               	addwf	UART_Printf@argp,f,c
  1094  0008DC  0E00               	movlw	0
  1095  0008DE  224D               	addwfc	UART_Printf@argp+1,f,c
  1096                           
  1097                           ;uart.c: 528: UART_TxFloatNumber(v_floatNum_f32);
  1098  0008E0  C037  F02C         	movff	UART_Printf@v_floatNum_f32,UART_TxFloatNumber@v_floatNumber_f32
  1099  0008E4  C038  F02D         	movff	UART_Printf@v_floatNum_f32+1,UART_TxFloatNumber@v_floatNumber_f32+1
  1100  0008E8  C039  F02E         	movff	UART_Printf@v_floatNum_f32+2,UART_TxFloatNumber@v_floatNumber_f32+2
  1101  0008EC  EC80  F007         	call	_UART_TxFloatNumber	;wreg free
  1102                           
  1103                           ;uart.c: 530: break;
  1104  0008F0  D049               	goto	l1887
  1105  0008F2                     l1873:
  1106                           
  1107                           ;uart.c: 534: case 's':
  1108                           ;uart.c: 535: str = (*(char * *)__va_arg((*(char * **)argp), (char *)0));
  1109  0008F2  C04C  FFD9         	movff	UART_Printf@argp,fsr2l
  1110  0008F6  C04D  FFDA         	movff	UART_Printf@argp+1,fsr2h
  1111  0008FA  CFDE F03A          	movff	postinc2,UART_Printf@str
  1112  0008FE  CFDD F03B          	movff	postdec2,UART_Printf@str+1
  1113  000902  0E02               	movlw	2
  1114  000904  264C               	addwf	UART_Printf@argp,f,c
  1115  000906  0E00               	movlw	0
  1116  000908  224D               	addwfc	UART_Printf@argp+1,f,c
  1117                           
  1118                           ;uart.c: 536: UART_TxString(str);
  1119  00090A  C03A  F002         	movff	UART_Printf@str,UART_TxString@ptr_string
  1120  00090E  C03B  F003         	movff	UART_Printf@str+1,UART_TxString@ptr_string+1
  1121  000912  ECA4  F009         	call	_UART_TxString	;wreg free
  1122                           
  1123                           ;uart.c: 537: break;
  1124  000916  D036               	goto	l1887
  1125  000918                     l1879:
  1126                           
  1127                           ;uart.c: 540: UART_TxChar('%');
  1128  000918  0E25               	movlw	37
  1129  00091A  ECE1  F009         	call	_UART_TxChar
  1130                           
  1131                           ;uart.c: 542: }
  1132                           
  1133                           ;uart.c: 541: break;
  1134  00091E  D032               	goto	l1887
  1135  000920                     l1883:
  1136  000920  504A               	movf	UART_Printf@ch,w,c
  1137                           
  1138                           ; Switch size 1, requested type "space"
  1139                           ; Number of cases is 15, Range of values is 37 to 120
  1140                           ; switch strategies available:
  1141                           ; Name         Instructions Cycles
  1142                           ; simple_byte           46    24 (average)
  1143                           ;	Chosen strategy is simple_byte
  1144  000922  0A25               	xorlw	37	; case 37
  1145  000924  B4D8               	btfsc	status,2,c
  1146  000926  D7F8               	goto	l1879
  1147  000928  0A67               	xorlw	103	; case 66
  1148  00092A  B4D8               	btfsc	status,2,c
  1149  00092C  D7A8               	goto	l1857
  1150  00092E  0A01               	xorlw	1	; case 67
  1151  000930  B4D8               	btfsc	status,2,c
  1152  000932  D6BF               	goto	l1793
  1153  000934  0A07               	xorlw	7	; case 68
  1154  000936  B4D8               	btfsc	status,2,c
  1155  000938  D6EE               	goto	l1811
  1156  00093A  0A02               	xorlw	2	; case 70
  1157  00093C  B4D8               	btfsc	status,2,c
  1158  00093E  D7C2               	goto	l1867
  1159  000940  0A15               	xorlw	21	; case 83
  1160  000942  B4D8               	btfsc	status,2,c
  1161  000944  D7D6               	goto	l1873
  1162  000946  0A06               	xorlw	6	; case 85
  1163  000948  B4D8               	btfsc	status,2,c
  1164  00094A  D728               	goto	l1829
  1165  00094C  0A0D               	xorlw	13	; case 88
  1166  00094E  B4D8               	btfsc	status,2,c
  1167  000950  D75B               	goto	l1841
  1168  000952  0A3A               	xorlw	58	; case 98
  1169  000954  B4D8               	btfsc	status,2,c
  1170  000956  D776               	goto	l1847
  1171  000958  0A01               	xorlw	1	; case 99
  1172  00095A  B4D8               	btfsc	status,2,c
  1173  00095C  D6AA               	goto	l1793
  1174  00095E  0A07               	xorlw	7	; case 100
  1175  000960  B4D8               	btfsc	status,2,c
  1176  000962  D6B5               	goto	l1799
  1177  000964  0A02               	xorlw	2	; case 102
  1178  000966  B4D8               	btfsc	status,2,c
  1179  000968  D7AD               	goto	l1867
  1180  00096A  0A15               	xorlw	21	; case 115
  1181  00096C  B4D8               	btfsc	status,2,c
  1182  00096E  D7C1               	goto	l1873
  1183  000970  0A06               	xorlw	6	; case 117
  1184  000972  B4D8               	btfsc	status,2,c
  1185  000974  D6FB               	goto	l1823
  1186  000976  0A0D               	xorlw	13	; case 120
  1187  000978  B4D8               	btfsc	status,2,c
  1188  00097A  D72E               	goto	l1835
  1189                           
  1190                           ;uart.c: 543: }
  1191  00097C  D003               	goto	l1887
  1192  00097E                     l1885:
  1193                           
  1194                           ;uart.c: 544: else
  1195                           ;uart.c: 545: {
  1196                           ;uart.c: 547: UART_TxChar(ch);
  1197  00097E  504A               	movf	UART_Printf@ch,w,c
  1198  000980  ECE1  F009         	call	_UART_TxChar
  1199  000984                     l1887:
  1200  000984  4A48               	infsnz	UART_Printf@ptr,f,c
  1201  000986  2A49               	incf	UART_Printf@ptr+1,f,c
  1202  000988                     l1889:
  1203  000988  C048  FFF6         	movff	UART_Printf@ptr,tblptrl
  1204  00098C  C049  FFF7         	movff	UART_Printf@ptr+1,tblptrh
  1205  000990                     	if	0	;tblptru may be non-zero
  1206  000990                     	endif
  1207  000990                     	if	0	;tblptru may be non-zero
  1208  000990                     	endif
  1209  000990  0008               	tblrd		*
  1210  000992  50F5               	movf	tablat,w,c
  1211  000994  0900               	iorlw	0
  1212  000996  B4D8               	btfsc	status,2,c
  1213  000998  0012               	return	
  1214  00099A  D656               	goto	l1769
  1215  00099C                     __end_of_UART_Printf:
  1216                           	opt stack 0
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           prodl	equ	0xFF3
  1222                           postinc0	equ	0xFEE
  1223                           wreg	equ	0xFE8
  1224                           postdec1	equ	0xFE5
  1225                           plusw1	equ	0xFE3
  1226                           fsr1l	equ	0xFE1
  1227                           indf2	equ	0xFDF
  1228                           postinc2	equ	0xFDE
  1229                           postdec2	equ	0xFDD
  1230                           plusw2	equ	0xFDB
  1231                           fsr2h	equ	0xFDA
  1232                           fsr2l	equ	0xFD9
  1233                           status	equ	0xFD8
  1234                           
  1235 ;; *************** function _UART_TxString *****************
  1236 ;; Defined at:
  1237 ;;		line 169 in file "../00-libfiles/uart.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;  ptr_string      2    1[COMRAM] PTR const unsigned char 
  1240 ;;		 -> main@read_str(50), main@write_str(47), 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;		None
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1252 ;;      Params:         2       0       0       0       0       0       0
  1253 ;;      Locals:         0       0       0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0
  1255 ;;      Totals:         2       0       0       0       0       0       0
  1256 ;;Total ram usage:        2 bytes
  1257 ;; Hardware stack levels used:    1
  1258 ;; Hardware stack levels required when called:    1
  1259 ;; This function calls:
  1260 ;;		_UART_TxChar
  1261 ;; This function is called by:
  1262 ;;		_UART_Printf
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           	psect	text2
  1267  001348                     __ptext2:
  1268                           	opt stack 0
  1269  001348                     _UART_TxString:
  1270                           	opt stack 28
  1271                           
  1272                           ;uart.c: 171: while(*ptr_string)
  1273                           
  1274                           ;incstack = 0
  1275  001348  D009               	goto	l1731
  1276  00134A                     l1727:
  1277                           
  1278                           ;uart.c: 172: UART_TxChar(*ptr_string++);
  1279  00134A  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
  1280  00134E  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
  1281  001352  50DF               	movf	indf2,w,c
  1282  001354  ECE1  F009         	call	_UART_TxChar
  1283  001358  4A02               	infsnz	UART_TxString@ptr_string,f,c
  1284  00135A  2A03               	incf	UART_TxString@ptr_string+1,f,c
  1285  00135C                     l1731:
  1286  00135C  C002  FFD9         	movff	UART_TxString@ptr_string,fsr2l
  1287  001360  C003  FFDA         	movff	UART_TxString@ptr_string+1,fsr2h
  1288  001364  50DF               	movf	indf2,w,c
  1289  001366  B4D8               	btfsc	status,2,c
  1290  001368  0012               	return	
  1291  00136A  D7EF               	goto	l1727
  1292  00136C                     __end_of_UART_TxString:
  1293                           	opt stack 0
  1294                           tblptru	equ	0xFF8
  1295                           tblptrh	equ	0xFF7
  1296                           tblptrl	equ	0xFF6
  1297                           tablat	equ	0xFF5
  1298                           prodl	equ	0xFF3
  1299                           postinc0	equ	0xFEE
  1300                           wreg	equ	0xFE8
  1301                           postdec1	equ	0xFE5
  1302                           plusw1	equ	0xFE3
  1303                           fsr1l	equ	0xFE1
  1304                           indf2	equ	0xFDF
  1305                           postinc2	equ	0xFDE
  1306                           postdec2	equ	0xFDD
  1307                           plusw2	equ	0xFDB
  1308                           fsr2h	equ	0xFDA
  1309                           fsr2l	equ	0xFD9
  1310                           status	equ	0xFD8
  1311                           
  1312 ;; *************** function _UART_TxFloatNumber *****************
  1313 ;; Defined at:
  1314 ;;		line 350 in file "../00-libfiles/uart.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;  v_floatNumbe    3   43[COMRAM] float 
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;  v_decNumber_    4   46[COMRAM] unsigned long 
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1328 ;;      Params:         3       0       0       0       0       0       0
  1329 ;;      Locals:         4       0       0       0       0       0       0
  1330 ;;      Temps:          0       0       0       0       0       0       0
  1331 ;;      Totals:         7       0       0       0       0       0       0
  1332 ;;Total ram usage:        7 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    2
  1335 ;; This function calls:
  1336 ;;		_UART_TxChar
  1337 ;;		_UART_TxNumber
  1338 ;;		___ftadd
  1339 ;;		___ftmul
  1340 ;;		___ftneg
  1341 ;;		___fttol
  1342 ;;		___lltoft
  1343 ;; This function is called by:
  1344 ;;		_UART_Printf
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text3
  1349  000F00                     __ptext3:
  1350                           	opt stack 0
  1351  000F00                     _UART_TxFloatNumber:
  1352                           	opt stack 27
  1353                           
  1354                           ;uart.c: 352: uint32_t v_decNumber_u32;
  1355                           ;uart.c: 359: v_decNumber_u32 = (uint32_t) v_floatNumber_f32;
  1356                           
  1357                           ;incstack = 0
  1358  000F00  C02C  F018         	movff	UART_TxFloatNumber@v_floatNumber_f32,___fttol@f1
  1359  000F04  C02D  F019         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___fttol@f1+1
  1360  000F08  C02E  F01A         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___fttol@f1+2
  1361  000F0C  EC8C  F006         	call	___fttol	;wreg free
  1362  000F10  C018  F02F         	movff	?___fttol,UART_TxFloatNumber@v_decNumber_u32
  1363  000F14  C019  F030         	movff	?___fttol+1,UART_TxFloatNumber@v_decNumber_u32+1
  1364  000F18  C01A  F031         	movff	?___fttol+2,UART_TxFloatNumber@v_decNumber_u32+2
  1365  000F1C  C01B  F032         	movff	?___fttol+3,UART_TxFloatNumber@v_decNumber_u32+3
  1366                           
  1367                           ;uart.c: 360: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  1368  000F20  C02F  F00E         	movff	UART_TxFloatNumber@v_decNumber_u32,UART_TxNumber@v_number_u32
  1369  000F24  C030  F00F         	movff	UART_TxFloatNumber@v_decNumber_u32+1,UART_TxNumber@v_number_u32+1
  1370  000F28  C031  F010         	movff	UART_TxFloatNumber@v_decNumber_u32+2,UART_TxNumber@v_number_u32+2
  1371  000F2C  C032  F011         	movff	UART_TxFloatNumber@v_decNumber_u32+3,UART_TxNumber@v_number_u32+3
  1372  000F30  0EFF               	movlw	255
  1373  000F32  6E12               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  1374  000F34  0E0A               	movlw	10
  1375  000F36  ECCE  F004         	call	_UART_TxNumber
  1376                           
  1377                           ;uart.c: 362: UART_TxChar('.');
  1378  000F3A  0E2E               	movlw	46
  1379  000F3C  ECE1  F009         	call	_UART_TxChar
  1380                           
  1381                           ;uart.c: 364: v_floatNumber_f32 = v_floatNumber_f32 - v_decNumber_u32;
  1382  000F40  C02F  F009         	movff	UART_TxFloatNumber@v_decNumber_u32,___lltoft@c
  1383  000F44  C030  F00A         	movff	UART_TxFloatNumber@v_decNumber_u32+1,___lltoft@c+1
  1384  000F48  C031  F00B         	movff	UART_TxFloatNumber@v_decNumber_u32+2,___lltoft@c+2
  1385  000F4C  C032  F00C         	movff	UART_TxFloatNumber@v_decNumber_u32+3,___lltoft@c+3
  1386  000F50  EC02  F009         	call	___lltoft	;wreg free
  1387  000F54  C009  F012         	movff	?___lltoft,___ftneg@f1
  1388  000F58  C00A  F013         	movff	?___lltoft+1,___ftneg@f1+1
  1389  000F5C  C00B  F014         	movff	?___lltoft+2,___ftneg@f1+2
  1390  000F60  ECB6  F009         	call	___ftneg	;wreg free
  1391  000F64  C012  F015         	movff	?___ftneg,___ftadd@f1
  1392  000F68  C013  F016         	movff	?___ftneg+1,___ftadd@f1+1
  1393  000F6C  C014  F017         	movff	?___ftneg+2,___ftadd@f1+2
  1394  000F70  C02C  F018         	movff	UART_TxFloatNumber@v_floatNumber_f32,___ftadd@f2
  1395  000F74  C02D  F019         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___ftadd@f2+1
  1396  000F78  C02E  F01A         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___ftadd@f2+2
  1397  000F7C  ECB6  F005         	call	___ftadd	;wreg free
  1398  000F80  C015  F02C         	movff	?___ftadd,UART_TxFloatNumber@v_floatNumber_f32
  1399  000F84  C016  F02D         	movff	?___ftadd+1,UART_TxFloatNumber@v_floatNumber_f32+1
  1400  000F88  C017  F02E         	movff	?___ftadd+2,UART_TxFloatNumber@v_floatNumber_f32+2
  1401                           
  1402                           ;uart.c: 365: v_decNumber_u32 = v_floatNumber_f32 * 1000000;
  1403  000F8C  0E24               	movlw	36
  1404  000F8E  6E0C               	movwf	___ftmul@f2,c
  1405  000F90  0E74               	movlw	116
  1406  000F92  6E0D               	movwf	___ftmul@f2+1,c
  1407  000F94  0E49               	movlw	73
  1408  000F96  6E0E               	movwf	___ftmul@f2+2,c
  1409  000F98  C02C  F009         	movff	UART_TxFloatNumber@v_floatNumber_f32,___ftmul@f1
  1410  000F9C  C02D  F00A         	movff	UART_TxFloatNumber@v_floatNumber_f32+1,___ftmul@f1+1
  1411  000FA0  C02E  F00B         	movff	UART_TxFloatNumber@v_floatNumber_f32+2,___ftmul@f1+2
  1412  000FA4  EC06  F007         	call	___ftmul	;wreg free
  1413  000FA8  C009  F018         	movff	?___ftmul,___fttol@f1
  1414  000FAC  C00A  F019         	movff	?___ftmul+1,___fttol@f1+1
  1415  000FB0  C00B  F01A         	movff	?___ftmul+2,___fttol@f1+2
  1416  000FB4  EC8C  F006         	call	___fttol	;wreg free
  1417  000FB8  C018  F02F         	movff	?___fttol,UART_TxFloatNumber@v_decNumber_u32
  1418  000FBC  C019  F030         	movff	?___fttol+1,UART_TxFloatNumber@v_decNumber_u32+1
  1419  000FC0  C01A  F031         	movff	?___fttol+2,UART_TxFloatNumber@v_decNumber_u32+2
  1420  000FC4  C01B  F032         	movff	?___fttol+3,UART_TxFloatNumber@v_decNumber_u32+3
  1421                           
  1422                           ;uart.c: 366: UART_TxNumber(10u,v_decNumber_u32,0xffu);
  1423  000FC8  C02F  F00E         	movff	UART_TxFloatNumber@v_decNumber_u32,UART_TxNumber@v_number_u32
  1424  000FCC  C030  F00F         	movff	UART_TxFloatNumber@v_decNumber_u32+1,UART_TxNumber@v_number_u32+1
  1425  000FD0  C031  F010         	movff	UART_TxFloatNumber@v_decNumber_u32+2,UART_TxNumber@v_number_u32+2
  1426  000FD4  C032  F011         	movff	UART_TxFloatNumber@v_decNumber_u32+3,UART_TxNumber@v_number_u32+3
  1427  000FD8  0EFF               	movlw	255
  1428  000FDA  6E12               	movwf	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  1429  000FDC  0E0A               	movlw	10
  1430  000FDE  ECCE  F004         	call	_UART_TxNumber
  1431  000FE2  0012               	return		;funcret
  1432  000FE4                     __end_of_UART_TxFloatNumber:
  1433                           	opt stack 0
  1434                           tblptru	equ	0xFF8
  1435                           tblptrh	equ	0xFF7
  1436                           tblptrl	equ	0xFF6
  1437                           tablat	equ	0xFF5
  1438                           prodl	equ	0xFF3
  1439                           postinc0	equ	0xFEE
  1440                           wreg	equ	0xFE8
  1441                           postdec1	equ	0xFE5
  1442                           plusw1	equ	0xFE3
  1443                           fsr1l	equ	0xFE1
  1444                           indf2	equ	0xFDF
  1445                           postinc2	equ	0xFDE
  1446                           postdec2	equ	0xFDD
  1447                           plusw2	equ	0xFDB
  1448                           fsr2h	equ	0xFDA
  1449                           fsr2l	equ	0xFD9
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function ___lltoft *****************
  1453 ;; Defined at:
  1454 ;;		line 35 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lltoft.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  c               4    8[COMRAM] unsigned long 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  exp             1   16[COMRAM] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  3    8[COMRAM] float 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1468 ;;      Params:         4       0       0       0       0       0       0
  1469 ;;      Locals:         1       0       0       0       0       0       0
  1470 ;;      Temps:          4       0       0       0       0       0       0
  1471 ;;      Totals:         9       0       0       0       0       0       0
  1472 ;;Total ram usage:        9 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    1
  1475 ;; This function calls:
  1476 ;;		___ftpack
  1477 ;; This function is called by:
  1478 ;;		_UART_TxFloatNumber
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text4
  1483  001204                     __ptext4:
  1484                           	opt stack 0
  1485  001204                     ___lltoft:
  1486                           	opt stack 27
  1487                           
  1488                           ;incstack = 0
  1489  001204  0E8E               	movlw	142
  1490  001206  6E11               	movwf	___lltoft@exp,c
  1491  001208  D006               	goto	l1681
  1492  00120A                     l1679:
  1493  00120A  90D8               	bcf	status,0,c
  1494  00120C  320C               	rrcf	___lltoft@c+3,f,c
  1495  00120E  320B               	rrcf	___lltoft@c+2,f,c
  1496  001210  320A               	rrcf	___lltoft@c+1,f,c
  1497  001212  3209               	rrcf	___lltoft@c,f,c
  1498  001214  2A11               	incf	___lltoft@exp,f,c
  1499  001216                     l1681:
  1500  001216  0E00               	movlw	0
  1501  001218  1409               	andwf	___lltoft@c,w,c
  1502  00121A  6E0D               	movwf	??___lltoft& (0+255),c
  1503  00121C  0E00               	movlw	0
  1504  00121E  140A               	andwf	___lltoft@c+1,w,c
  1505  001220  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  1506  001222  0E00               	movlw	0
  1507  001224  140B               	andwf	___lltoft@c+2,w,c
  1508  001226  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  1509  001228  0EFF               	movlw	255
  1510  00122A  140C               	andwf	___lltoft@c+3,w,c
  1511  00122C  6E10               	movwf	(??___lltoft+3)& (0+255),c
  1512  00122E  500D               	movf	??___lltoft,w,c
  1513  001230  100E               	iorwf	??___lltoft+1,w,c
  1514  001232  100F               	iorwf	??___lltoft+2,w,c
  1515  001234  1010               	iorwf	??___lltoft+3,w,c
  1516  001236  A4D8               	btfss	status,2,c
  1517  001238  D7E8               	goto	l1679
  1518  00123A  C009  F001         	movff	___lltoft@c,___ftpack@arg
  1519  00123E  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  1520  001242  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  1521  001246  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  1522  00124A  0E00               	movlw	0
  1523  00124C  6E05               	movwf	___ftpack@sign,c
  1524  00124E  ECF2  F007         	call	___ftpack	;wreg free
  1525  001252  C001  F009         	movff	?___ftpack,?___lltoft
  1526  001256  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  1527  00125A  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  1528  00125E  0012               	return	
  1529  001260                     __end_of___lltoft:
  1530                           	opt stack 0
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           prodl	equ	0xFF3
  1536                           postinc0	equ	0xFEE
  1537                           wreg	equ	0xFE8
  1538                           postdec1	equ	0xFE5
  1539                           plusw1	equ	0xFE3
  1540                           fsr1l	equ	0xFE1
  1541                           indf2	equ	0xFDF
  1542                           postinc2	equ	0xFDE
  1543                           postdec2	equ	0xFDD
  1544                           plusw2	equ	0xFDB
  1545                           fsr2h	equ	0xFDA
  1546                           fsr2l	equ	0xFD9
  1547                           status	equ	0xFD8
  1548                           
  1549 ;; *************** function ___fttol *****************
  1550 ;; Defined at:
  1551 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\fttol.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  f1              3   23[COMRAM] float 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  lval            4   33[COMRAM] unsigned long 
  1556 ;;  exp1            1   37[COMRAM] unsigned char 
  1557 ;;  sign1           1   32[COMRAM] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  4   23[COMRAM] long 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1567 ;;      Params:         4       0       0       0       0       0       0
  1568 ;;      Locals:         6       0       0       0       0       0       0
  1569 ;;      Temps:          5       0       0       0       0       0       0
  1570 ;;      Totals:        15       0       0       0       0       0       0
  1571 ;;Total ram usage:       15 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_UART_TxFloatNumber
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           	psect	text5
  1581  000D18                     __ptext5:
  1582                           	opt stack 0
  1583  000D18                     ___fttol:
  1584                           	opt stack 28
  1585                           
  1586                           ;incstack = 0
  1587  000D18  C01A  F01C         	movff	___fttol@f1+2,??___fttol
  1588  000D1C  6A1D               	clrf	(??___fttol+1)& (0+255),c
  1589  000D1E  6A1E               	clrf	(??___fttol+2)& (0+255),c
  1590  000D20  3419               	rlcf	___fttol@f1+1,w,c
  1591  000D22  361C               	rlcf	??___fttol& (0+255),f,c
  1592  000D24  E301               	bnc	u1461
  1593  000D26  801D               	bsf	(??___fttol+1)& (0+255),0,c
  1594  000D28                     u1461:
  1595  000D28  501C               	movf	??___fttol,w,c
  1596  000D2A  6E26               	movwf	___fttol@exp1,c
  1597  000D2C  5026               	movf	___fttol@exp1,w,c
  1598  000D2E  A4D8               	btfss	status,2,c
  1599  000D30  D009               	goto	l1637
  1600  000D32  0E00               	movlw	0
  1601  000D34  6E18               	movwf	?___fttol,c
  1602  000D36  0E00               	movlw	0
  1603  000D38  6E19               	movwf	?___fttol+1,c
  1604  000D3A  0E00               	movlw	0
  1605  000D3C  6E1A               	movwf	?___fttol+2,c
  1606  000D3E  0E00               	movlw	0
  1607  000D40  6E1B               	movwf	?___fttol+3,c
  1608  000D42  0012               	return	
  1609  000D44                     l1637:
  1610  000D44  0E17               	movlw	23
  1611  000D46  6E1C               	movwf	??___fttol& (0+255),c
  1612  000D48  C018  F01D         	movff	___fttol@f1,??___fttol+1
  1613  000D4C  C019  F01E         	movff	___fttol@f1+1,??___fttol+2
  1614  000D50  C01A  F01F         	movff	___fttol@f1+2,??___fttol+3
  1615  000D54  281C               	incf	??___fttol,w,c
  1616  000D56  6E20               	movwf	(??___fttol+4)& (0+255),c
  1617  000D58  D004               	goto	u1480
  1618  000D5A                     u1485:
  1619  000D5A  90D8               	bcf	status,0,c
  1620  000D5C  321F               	rrcf	??___fttol+3,f,c
  1621  000D5E  321E               	rrcf	??___fttol+2,f,c
  1622  000D60  321D               	rrcf	??___fttol+1,f,c
  1623  000D62                     u1480:
  1624  000D62  2E20               	decfsz	(??___fttol+4)& (0+255),f,c
  1625  000D64  D7FA               	goto	u1485
  1626  000D66  501D               	movf	??___fttol+1,w,c
  1627  000D68  6E21               	movwf	___fttol@sign1,c
  1628  000D6A  8E19               	bsf	___fttol@f1+1,7,c
  1629  000D6C  0EFF               	movlw	255
  1630  000D6E  1618               	andwf	___fttol@f1,f,c
  1631  000D70  0EFF               	movlw	255
  1632  000D72  1619               	andwf	___fttol@f1+1,f,c
  1633  000D74  0E00               	movlw	0
  1634  000D76  161A               	andwf	___fttol@f1+2,f,c
  1635  000D78  5018               	movf	___fttol@f1,w,c
  1636  000D7A  6E22               	movwf	___fttol@lval,c
  1637  000D7C  5019               	movf	___fttol@f1+1,w,c
  1638  000D7E  6E23               	movwf	___fttol@lval+1,c
  1639  000D80  501A               	movf	___fttol@f1+2,w,c
  1640  000D82  6E24               	movwf	___fttol@lval+2,c
  1641  000D84  6A25               	clrf	___fttol@lval+3,c
  1642  000D86  0E8E               	movlw	142
  1643  000D88  5E26               	subwf	___fttol@exp1,f,c
  1644  000D8A  AE26               	btfss	___fttol@exp1,7,c
  1645  000D8C  D016               	goto	l1659
  1646  000D8E  5026               	movf	___fttol@exp1,w,c
  1647  000D90  0A80               	xorlw	128
  1648  000D92  0F8F               	addlw	143
  1649  000D94  B0D8               	btfsc	status,0,c
  1650  000D96  D009               	goto	l1655
  1651  000D98  0E00               	movlw	0
  1652  000D9A  6E18               	movwf	?___fttol,c
  1653  000D9C  0E00               	movlw	0
  1654  000D9E  6E19               	movwf	?___fttol+1,c
  1655  000DA0  0E00               	movlw	0
  1656  000DA2  6E1A               	movwf	?___fttol+2,c
  1657  000DA4  0E00               	movlw	0
  1658  000DA6  6E1B               	movwf	?___fttol+3,c
  1659  000DA8  0012               	return	
  1660  000DAA                     l1655:
  1661  000DAA  90D8               	bcf	status,0,c
  1662  000DAC  3225               	rrcf	___fttol@lval+3,f,c
  1663  000DAE  3224               	rrcf	___fttol@lval+2,f,c
  1664  000DB0  3223               	rrcf	___fttol@lval+1,f,c
  1665  000DB2  3222               	rrcf	___fttol@lval,f,c
  1666  000DB4  3E26               	incfsz	___fttol@exp1,f,c
  1667  000DB6  D7F9               	goto	l1655
  1668  000DB8  D015               	goto	l1669
  1669  000DBA                     l1659:
  1670  000DBA  0E17               	movlw	23
  1671  000DBC  6426               	cpfsgt	___fttol@exp1,c
  1672  000DBE  D00F               	goto	l1667
  1673  000DC0  0E00               	movlw	0
  1674  000DC2  6E18               	movwf	?___fttol,c
  1675  000DC4  0E00               	movlw	0
  1676  000DC6  6E19               	movwf	?___fttol+1,c
  1677  000DC8  0E00               	movlw	0
  1678  000DCA  6E1A               	movwf	?___fttol+2,c
  1679  000DCC  0E00               	movlw	0
  1680  000DCE  6E1B               	movwf	?___fttol+3,c
  1681  000DD0  0012               	return	
  1682  000DD2                     l1665:
  1683  000DD2  90D8               	bcf	status,0,c
  1684  000DD4  3622               	rlcf	___fttol@lval,f,c
  1685  000DD6  3623               	rlcf	___fttol@lval+1,f,c
  1686  000DD8  3624               	rlcf	___fttol@lval+2,f,c
  1687  000DDA  3625               	rlcf	___fttol@lval+3,f,c
  1688  000DDC  0626               	decf	___fttol@exp1,f,c
  1689  000DDE                     l1667:
  1690  000DDE  5026               	movf	___fttol@exp1,w,c
  1691  000DE0  A4D8               	btfss	status,2,c
  1692  000DE2  D7F7               	goto	l1665
  1693  000DE4                     l1669:
  1694  000DE4  5021               	movf	___fttol@sign1,w,c
  1695  000DE6  B4D8               	btfsc	status,2,c
  1696  000DE8  D008               	goto	l1673
  1697  000DEA  1E25               	comf	___fttol@lval+3,f,c
  1698  000DEC  1E24               	comf	___fttol@lval+2,f,c
  1699  000DEE  1E23               	comf	___fttol@lval+1,f,c
  1700  000DF0  6C22               	negf	___fttol@lval,c
  1701  000DF2  0E00               	movlw	0
  1702  000DF4  2223               	addwfc	___fttol@lval+1,f,c
  1703  000DF6  2224               	addwfc	___fttol@lval+2,f,c
  1704  000DF8  2225               	addwfc	___fttol@lval+3,f,c
  1705  000DFA                     l1673:
  1706  000DFA  C022  F018         	movff	___fttol@lval,?___fttol
  1707  000DFE  C023  F019         	movff	___fttol@lval+1,?___fttol+1
  1708  000E02  C024  F01A         	movff	___fttol@lval+2,?___fttol+2
  1709  000E06  C025  F01B         	movff	___fttol@lval+3,?___fttol+3
  1710  000E0A  0012               	return	
  1711  000E0C                     __end_of___fttol:
  1712                           	opt stack 0
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           prodl	equ	0xFF3
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           postdec1	equ	0xFE5
  1721                           plusw1	equ	0xFE3
  1722                           fsr1l	equ	0xFE1
  1723                           indf2	equ	0xFDF
  1724                           postinc2	equ	0xFDE
  1725                           postdec2	equ	0xFDD
  1726                           plusw2	equ	0xFDB
  1727                           fsr2h	equ	0xFDA
  1728                           fsr2l	equ	0xFD9
  1729                           status	equ	0xFD8
  1730                           
  1731 ;; *************** function ___ftneg *****************
  1732 ;; Defined at:
  1733 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftneg.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  f1              3   17[COMRAM] float 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  3   17[COMRAM] float 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1747 ;;      Params:         3       0       0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0
  1750 ;;      Totals:         3       0       0       0       0       0       0
  1751 ;;Total ram usage:        3 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_UART_TxFloatNumber
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text6
  1761  00136C                     __ptext6:
  1762                           	opt stack 0
  1763  00136C                     ___ftneg:
  1764                           	opt stack 28
  1765                           
  1766                           ;incstack = 0
  1767  00136C  5012               	movf	___ftneg@f1,w,c
  1768  00136E  1013               	iorwf	___ftneg@f1+1,w,c
  1769  001370  1014               	iorwf	___ftneg@f1+2,w,c
  1770  001372  B4D8               	btfsc	status,2,c
  1771  001374  D006               	goto	l508
  1772  001376  0E00               	movlw	0
  1773  001378  1A12               	xorwf	___ftneg@f1,f,c
  1774  00137A  0E00               	movlw	0
  1775  00137C  1A13               	xorwf	___ftneg@f1+1,f,c
  1776  00137E  0E80               	movlw	128
  1777  001380  1A14               	xorwf	___ftneg@f1+2,f,c
  1778  001382                     l508:
  1779  001382  C012  F012         	movff	___ftneg@f1,?___ftneg
  1780  001386  C013  F013         	movff	___ftneg@f1+1,?___ftneg+1
  1781  00138A  C014  F014         	movff	___ftneg@f1+2,?___ftneg+2
  1782  00138E  0012               	return		;funcret
  1783  001390                     __end_of___ftneg:
  1784                           	opt stack 0
  1785                           tblptru	equ	0xFF8
  1786                           tblptrh	equ	0xFF7
  1787                           tblptrl	equ	0xFF6
  1788                           tablat	equ	0xFF5
  1789                           prodl	equ	0xFF3
  1790                           postinc0	equ	0xFEE
  1791                           wreg	equ	0xFE8
  1792                           postdec1	equ	0xFE5
  1793                           plusw1	equ	0xFE3
  1794                           fsr1l	equ	0xFE1
  1795                           indf2	equ	0xFDF
  1796                           postinc2	equ	0xFDE
  1797                           postdec2	equ	0xFDD
  1798                           plusw2	equ	0xFDB
  1799                           fsr2h	equ	0xFDA
  1800                           fsr2l	equ	0xFD9
  1801                           status	equ	0xFD8
  1802                           
  1803 ;; *************** function ___ftmul *****************
  1804 ;; Defined at:
  1805 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;  f1              3    8[COMRAM] float 
  1808 ;;  f2              3   11[COMRAM] float 
  1809 ;; Auto vars:     Size  Location     Type
  1810 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  1811 ;;  sign            1   22[COMRAM] unsigned char 
  1812 ;;  cntr            1   21[COMRAM] unsigned char 
  1813 ;;  exp             1   17[COMRAM] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  3    8[COMRAM] float 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1823 ;;      Params:         6       0       0       0       0       0       0
  1824 ;;      Locals:         6       0       0       0       0       0       0
  1825 ;;      Temps:          3       0       0       0       0       0       0
  1826 ;;      Totals:        15       0       0       0       0       0       0
  1827 ;;Total ram usage:       15 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    1
  1830 ;; This function calls:
  1831 ;;		___ftpack
  1832 ;; This function is called by:
  1833 ;;		_UART_TxFloatNumber
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	text7
  1838  000E0C                     __ptext7:
  1839                           	opt stack 0
  1840  000E0C                     ___ftmul:
  1841                           	opt stack 27
  1842                           
  1843                           ;incstack = 0
  1844  000E0C  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  1845  000E10  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1846  000E12  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1847  000E14  340A               	rlcf	___ftmul@f1+1,w,c
  1848  000E16  360F               	rlcf	??___ftmul& (0+255),f,c
  1849  000E18  E301               	bnc	u1391
  1850  000E1A  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1851  000E1C                     u1391:
  1852  000E1C  500F               	movf	??___ftmul,w,c
  1853  000E1E  6E12               	movwf	___ftmul@exp,c
  1854  000E20  5012               	movf	___ftmul@exp,w,c
  1855  000E22  A4D8               	btfss	status,2,c
  1856  000E24  D007               	goto	l1585
  1857  000E26  0E00               	movlw	0
  1858  000E28  6E09               	movwf	?___ftmul,c
  1859  000E2A  0E00               	movlw	0
  1860  000E2C  6E0A               	movwf	?___ftmul+1,c
  1861  000E2E  0E00               	movlw	0
  1862  000E30  6E0B               	movwf	?___ftmul+2,c
  1863  000E32  0012               	return	
  1864  000E34                     l1585:
  1865  000E34  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  1866  000E38  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1867  000E3A  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1868  000E3C  340D               	rlcf	___ftmul@f2+1,w,c
  1869  000E3E  360F               	rlcf	??___ftmul& (0+255),f,c
  1870  000E40  E301               	bnc	u1411
  1871  000E42  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1872  000E44                     u1411:
  1873  000E44  500F               	movf	??___ftmul,w,c
  1874  000E46  6E17               	movwf	___ftmul@sign,c
  1875  000E48  5017               	movf	___ftmul@sign,w,c
  1876  000E4A  A4D8               	btfss	status,2,c
  1877  000E4C  D007               	goto	l1591
  1878  000E4E  0E00               	movlw	0
  1879  000E50  6E09               	movwf	?___ftmul,c
  1880  000E52  0E00               	movlw	0
  1881  000E54  6E0A               	movwf	?___ftmul+1,c
  1882  000E56  0E00               	movlw	0
  1883  000E58  6E0B               	movwf	?___ftmul+2,c
  1884  000E5A  0012               	return	
  1885  000E5C                     l1591:
  1886  000E5C  5017               	movf	___ftmul@sign,w,c
  1887  000E5E  0F7B               	addlw	123
  1888  000E60  2612               	addwf	___ftmul@exp,f,c
  1889  000E62  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  1890  000E66  500E               	movf	___ftmul@f2+2,w,c
  1891  000E68  1A17               	xorwf	___ftmul@sign,f,c
  1892  000E6A  0E80               	movlw	128
  1893  000E6C  1617               	andwf	___ftmul@sign,f,c
  1894  000E6E  8E0A               	bsf	___ftmul@f1+1,7,c
  1895  000E70  8E0D               	bsf	___ftmul@f2+1,7,c
  1896  000E72  0EFF               	movlw	255
  1897  000E74  160C               	andwf	___ftmul@f2,f,c
  1898  000E76  0EFF               	movlw	255
  1899  000E78  160D               	andwf	___ftmul@f2+1,f,c
  1900  000E7A  0E00               	movlw	0
  1901  000E7C  160E               	andwf	___ftmul@f2+2,f,c
  1902  000E7E  0E00               	movlw	0
  1903  000E80  6E13               	movwf	___ftmul@f3_as_product,c
  1904  000E82  0E00               	movlw	0
  1905  000E84  6E14               	movwf	___ftmul@f3_as_product+1,c
  1906  000E86  0E00               	movlw	0
  1907  000E88  6E15               	movwf	___ftmul@f3_as_product+2,c
  1908  000E8A  0E07               	movlw	7
  1909  000E8C  6E16               	movwf	___ftmul@cntr,c
  1910  000E8E                     l1605:
  1911  000E8E  A009               	btfss	___ftmul@f1,0,c
  1912  000E90  D006               	goto	l1609
  1913  000E92  500C               	movf	___ftmul@f2,w,c
  1914  000E94  2613               	addwf	___ftmul@f3_as_product,f,c
  1915  000E96  500D               	movf	___ftmul@f2+1,w,c
  1916  000E98  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1917  000E9A  500E               	movf	___ftmul@f2+2,w,c
  1918  000E9C  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1919  000E9E                     l1609:
  1920  000E9E  90D8               	bcf	status,0,c
  1921  000EA0  320B               	rrcf	___ftmul@f1+2,f,c
  1922  000EA2  320A               	rrcf	___ftmul@f1+1,f,c
  1923  000EA4  3209               	rrcf	___ftmul@f1,f,c
  1924  000EA6  90D8               	bcf	status,0,c
  1925  000EA8  360C               	rlcf	___ftmul@f2,f,c
  1926  000EAA  360D               	rlcf	___ftmul@f2+1,f,c
  1927  000EAC  360E               	rlcf	___ftmul@f2+2,f,c
  1928  000EAE  2E16               	decfsz	___ftmul@cntr,f,c
  1929  000EB0  D7EE               	goto	l1605
  1930  000EB2  0E09               	movlw	9
  1931  000EB4  6E16               	movwf	___ftmul@cntr,c
  1932  000EB6                     l1615:
  1933  000EB6  A009               	btfss	___ftmul@f1,0,c
  1934  000EB8  D006               	goto	l1619
  1935  000EBA  500C               	movf	___ftmul@f2,w,c
  1936  000EBC  2613               	addwf	___ftmul@f3_as_product,f,c
  1937  000EBE  500D               	movf	___ftmul@f2+1,w,c
  1938  000EC0  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1939  000EC2  500E               	movf	___ftmul@f2+2,w,c
  1940  000EC4  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1941  000EC6                     l1619:
  1942  000EC6  90D8               	bcf	status,0,c
  1943  000EC8  320B               	rrcf	___ftmul@f1+2,f,c
  1944  000ECA  320A               	rrcf	___ftmul@f1+1,f,c
  1945  000ECC  3209               	rrcf	___ftmul@f1,f,c
  1946  000ECE  90D8               	bcf	status,0,c
  1947  000ED0  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  1948  000ED2  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  1949  000ED4  3213               	rrcf	___ftmul@f3_as_product,f,c
  1950  000ED6  2E16               	decfsz	___ftmul@cntr,f,c
  1951  000ED8  D7EE               	goto	l1615
  1952  000EDA  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1953  000EDE  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1954  000EE2  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1955  000EE6  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  1956  000EEA  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  1957  000EEE  ECF2  F007         	call	___ftpack	;wreg free
  1958  000EF2  C001  F009         	movff	?___ftpack,?___ftmul
  1959  000EF6  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  1960  000EFA  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  1961  000EFE  0012               	return	
  1962  000F00                     __end_of___ftmul:
  1963                           	opt stack 0
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           prodl	equ	0xFF3
  1969                           postinc0	equ	0xFEE
  1970                           wreg	equ	0xFE8
  1971                           postdec1	equ	0xFE5
  1972                           plusw1	equ	0xFE3
  1973                           fsr1l	equ	0xFE1
  1974                           indf2	equ	0xFDF
  1975                           postinc2	equ	0xFDE
  1976                           postdec2	equ	0xFDD
  1977                           plusw2	equ	0xFDB
  1978                           fsr2h	equ	0xFDA
  1979                           fsr2l	equ	0xFD9
  1980                           status	equ	0xFD8
  1981                           
  1982 ;; *************** function ___ftadd *****************
  1983 ;; Defined at:
  1984 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\ftadd.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  f1              3   20[COMRAM] float 
  1987 ;;  f2              3   23[COMRAM] float 
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;  exp1            1   31[COMRAM] unsigned char 
  1990 ;;  exp2            1   30[COMRAM] unsigned char 
  1991 ;;  sign            1   29[COMRAM] unsigned char 
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  3   20[COMRAM] float 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2001 ;;      Params:         6       0       0       0       0       0       0
  2002 ;;      Locals:         3       0       0       0       0       0       0
  2003 ;;      Temps:          3       0       0       0       0       0       0
  2004 ;;      Totals:        12       0       0       0       0       0       0
  2005 ;;Total ram usage:       12 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    1
  2008 ;; This function calls:
  2009 ;;		___ftpack
  2010 ;; This function is called by:
  2011 ;;		_UART_TxFloatNumber
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text8
  2016  000B6C                     __ptext8:
  2017                           	opt stack 0
  2018  000B6C                     ___ftadd:
  2019                           	opt stack 27
  2020                           
  2021                           ;incstack = 0
  2022  000B6C  C017  F01B         	movff	___ftadd@f1+2,??___ftadd
  2023  000B70  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  2024  000B72  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  2025  000B74  3416               	rlcf	___ftadd@f1+1,w,c
  2026  000B76  361B               	rlcf	??___ftadd& (0+255),f,c
  2027  000B78  E301               	bnc	u1181
  2028  000B7A  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  2029  000B7C                     u1181:
  2030  000B7C  501B               	movf	??___ftadd,w,c
  2031  000B7E  6E20               	movwf	___ftadd@exp1,c
  2032  000B80  C01A  F01B         	movff	___ftadd@f2+2,??___ftadd
  2033  000B84  6A1C               	clrf	(??___ftadd+1)& (0+255),c
  2034  000B86  6A1D               	clrf	(??___ftadd+2)& (0+255),c
  2035  000B88  3419               	rlcf	___ftadd@f2+1,w,c
  2036  000B8A  361B               	rlcf	??___ftadd& (0+255),f,c
  2037  000B8C  E301               	bnc	u1191
  2038  000B8E  801C               	bsf	(??___ftadd+1)& (0+255),0,c
  2039  000B90                     u1191:
  2040  000B90  501B               	movf	??___ftadd,w,c
  2041  000B92  6E1F               	movwf	___ftadd@exp2,c
  2042  000B94  5020               	movf	___ftadd@exp1,w,c
  2043  000B96  B4D8               	btfsc	status,2,c
  2044  000B98  D00B               	goto	l451
  2045  000B9A  501F               	movf	___ftadd@exp2,w,c
  2046  000B9C  5C20               	subwf	___ftadd@exp1,w,c
  2047  000B9E  B0D8               	btfsc	status,0,c
  2048  000BA0  D00E               	goto	l1517
  2049  000BA2  5020               	movf	___ftadd@exp1,w,c
  2050  000BA4  0800               	sublw	0
  2051  000BA6  241F               	addwf	___ftadd@exp2,w,c
  2052  000BA8  6E1B               	movwf	??___ftadd& (0+255),c
  2053  000BAA  0E18               	movlw	24
  2054  000BAC  641B               	cpfsgt	??___ftadd,c
  2055  000BAE  D007               	goto	l1517
  2056  000BB0                     l451:
  2057  000BB0  C018  F015         	movff	___ftadd@f2,?___ftadd
  2058  000BB4  C019  F016         	movff	___ftadd@f2+1,?___ftadd+1
  2059  000BB8  C01A  F017         	movff	___ftadd@f2+2,?___ftadd+2
  2060  000BBC  0012               	return	
  2061  000BBE                     l1517:
  2062  000BBE  501F               	movf	___ftadd@exp2,w,c
  2063  000BC0  B4D8               	btfsc	status,2,c
  2064  000BC2  D00B               	goto	l455
  2065  000BC4  5020               	movf	___ftadd@exp1,w,c
  2066  000BC6  5C1F               	subwf	___ftadd@exp2,w,c
  2067  000BC8  B0D8               	btfsc	status,0,c
  2068  000BCA  D00E               	goto	l1523
  2069  000BCC  501F               	movf	___ftadd@exp2,w,c
  2070  000BCE  0800               	sublw	0
  2071  000BD0  2420               	addwf	___ftadd@exp1,w,c
  2072  000BD2  6E1B               	movwf	??___ftadd& (0+255),c
  2073  000BD4  0E18               	movlw	24
  2074  000BD6  641B               	cpfsgt	??___ftadd,c
  2075  000BD8  D007               	goto	l1523
  2076  000BDA                     l455:
  2077  000BDA  C015  F015         	movff	___ftadd@f1,?___ftadd
  2078  000BDE  C016  F016         	movff	___ftadd@f1+1,?___ftadd+1
  2079  000BE2  C017  F017         	movff	___ftadd@f1+2,?___ftadd+2
  2080  000BE6  0012               	return	
  2081  000BE8                     l1523:
  2082  000BE8  0E06               	movlw	6
  2083  000BEA  6E1E               	movwf	___ftadd@sign,c
  2084  000BEC  BE17               	btfsc	___ftadd@f1+2,7,c
  2085  000BEE  8E1E               	bsf	___ftadd@sign,7,c
  2086  000BF0  BE1A               	btfsc	___ftadd@f2+2,7,c
  2087  000BF2  8C1E               	bsf	___ftadd@sign,6,c
  2088  000BF4  8E16               	bsf	___ftadd@f1+1,7,c
  2089  000BF6  0EFF               	movlw	255
  2090  000BF8  1615               	andwf	___ftadd@f1,f,c
  2091  000BFA  0EFF               	movlw	255
  2092  000BFC  1616               	andwf	___ftadd@f1+1,f,c
  2093  000BFE  0E00               	movlw	0
  2094  000C00  1617               	andwf	___ftadd@f1+2,f,c
  2095  000C02  8E19               	bsf	___ftadd@f2+1,7,c
  2096  000C04  0EFF               	movlw	255
  2097  000C06  1618               	andwf	___ftadd@f2,f,c
  2098  000C08  0EFF               	movlw	255
  2099  000C0A  1619               	andwf	___ftadd@f2+1,f,c
  2100  000C0C  0E00               	movlw	0
  2101  000C0E  161A               	andwf	___ftadd@f2+2,f,c
  2102  000C10  501F               	movf	___ftadd@exp2,w,c
  2103  000C12  5C20               	subwf	___ftadd@exp1,w,c
  2104  000C14  B0D8               	btfsc	status,0,c
  2105  000C16  D01B               	goto	l1549
  2106  000C18                     l1539:
  2107  000C18  90D8               	bcf	status,0,c
  2108  000C1A  3618               	rlcf	___ftadd@f2,f,c
  2109  000C1C  3619               	rlcf	___ftadd@f2+1,f,c
  2110  000C1E  361A               	rlcf	___ftadd@f2+2,f,c
  2111  000C20  061F               	decf	___ftadd@exp2,f,c
  2112  000C22  5020               	movf	___ftadd@exp1,w,c
  2113  000C24  181F               	xorwf	___ftadd@exp2,w,c
  2114  000C26  B4D8               	btfsc	status,2,c
  2115  000C28  D00D               	goto	l1547
  2116  000C2A  061E               	decf	___ftadd@sign,f,c
  2117  000C2C  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  2118  000C30  0E07               	movlw	7
  2119  000C32  161B               	andwf	??___ftadd,f,c
  2120  000C34  B4D8               	btfsc	status,2,c
  2121  000C36  D006               	goto	l1547
  2122  000C38  D7EF               	goto	l1539
  2123  000C3A                     l1545:
  2124  000C3A  90D8               	bcf	status,0,c
  2125  000C3C  3217               	rrcf	___ftadd@f1+2,f,c
  2126  000C3E  3216               	rrcf	___ftadd@f1+1,f,c
  2127  000C40  3215               	rrcf	___ftadd@f1,f,c
  2128  000C42  2A20               	incf	___ftadd@exp1,f,c
  2129  000C44                     l1547:
  2130  000C44  501F               	movf	___ftadd@exp2,w,c
  2131  000C46  1820               	xorwf	___ftadd@exp1,w,c
  2132  000C48  B4D8               	btfsc	status,2,c
  2133  000C4A  D01F               	goto	l466
  2134  000C4C  D7F6               	goto	l1545
  2135  000C4E                     l1549:
  2136  000C4E  5020               	movf	___ftadd@exp1,w,c
  2137  000C50  5C1F               	subwf	___ftadd@exp2,w,c
  2138  000C52  B0D8               	btfsc	status,0,c
  2139  000C54  D01A               	goto	l466
  2140  000C56                     l1551:
  2141  000C56  90D8               	bcf	status,0,c
  2142  000C58  3615               	rlcf	___ftadd@f1,f,c
  2143  000C5A  3616               	rlcf	___ftadd@f1+1,f,c
  2144  000C5C  3617               	rlcf	___ftadd@f1+2,f,c
  2145  000C5E  0620               	decf	___ftadd@exp1,f,c
  2146  000C60  5020               	movf	___ftadd@exp1,w,c
  2147  000C62  181F               	xorwf	___ftadd@exp2,w,c
  2148  000C64  B4D8               	btfsc	status,2,c
  2149  000C66  D00D               	goto	l1559
  2150  000C68  061E               	decf	___ftadd@sign,f,c
  2151  000C6A  C01E  F01B         	movff	___ftadd@sign,??___ftadd
  2152  000C6E  0E07               	movlw	7
  2153  000C70  161B               	andwf	??___ftadd,f,c
  2154  000C72  B4D8               	btfsc	status,2,c
  2155  000C74  D006               	goto	l1559
  2156  000C76  D7EF               	goto	l1551
  2157  000C78                     l1557:
  2158  000C78  90D8               	bcf	status,0,c
  2159  000C7A  321A               	rrcf	___ftadd@f2+2,f,c
  2160  000C7C  3219               	rrcf	___ftadd@f2+1,f,c
  2161  000C7E  3218               	rrcf	___ftadd@f2,f,c
  2162  000C80  2A1F               	incf	___ftadd@exp2,f,c
  2163  000C82                     l1559:
  2164  000C82  501F               	movf	___ftadd@exp2,w,c
  2165  000C84  1820               	xorwf	___ftadd@exp1,w,c
  2166  000C86  A4D8               	btfss	status,2,c
  2167  000C88  D7F7               	goto	l1557
  2168  000C8A                     l466:
  2169  000C8A  AE1E               	btfss	___ftadd@sign,7,c
  2170  000C8C  D00C               	goto	l475
  2171  000C8E  0EFF               	movlw	255
  2172  000C90  1A15               	xorwf	___ftadd@f1,f,c
  2173  000C92  0EFF               	movlw	255
  2174  000C94  1A16               	xorwf	___ftadd@f1+1,f,c
  2175  000C96  0EFF               	movlw	255
  2176  000C98  1A17               	xorwf	___ftadd@f1+2,f,c
  2177  000C9A  0E01               	movlw	1
  2178  000C9C  2615               	addwf	___ftadd@f1,f,c
  2179  000C9E  0E00               	movlw	0
  2180  000CA0  2216               	addwfc	___ftadd@f1+1,f,c
  2181  000CA2  0E00               	movlw	0
  2182  000CA4  2217               	addwfc	___ftadd@f1+2,f,c
  2183  000CA6                     l475:
  2184  000CA6  AC1E               	btfss	___ftadd@sign,6,c
  2185  000CA8  D00C               	goto	l1565
  2186  000CAA  0EFF               	movlw	255
  2187  000CAC  1A18               	xorwf	___ftadd@f2,f,c
  2188  000CAE  0EFF               	movlw	255
  2189  000CB0  1A19               	xorwf	___ftadd@f2+1,f,c
  2190  000CB2  0EFF               	movlw	255
  2191  000CB4  1A1A               	xorwf	___ftadd@f2+2,f,c
  2192  000CB6  0E01               	movlw	1
  2193  000CB8  2618               	addwf	___ftadd@f2,f,c
  2194  000CBA  0E00               	movlw	0
  2195  000CBC  2219               	addwfc	___ftadd@f2+1,f,c
  2196  000CBE  0E00               	movlw	0
  2197  000CC0  221A               	addwfc	___ftadd@f2+2,f,c
  2198  000CC2                     l1565:
  2199  000CC2  0E00               	movlw	0
  2200  000CC4  6E1E               	movwf	___ftadd@sign,c
  2201  000CC6  5015               	movf	___ftadd@f1,w,c
  2202  000CC8  2618               	addwf	___ftadd@f2,f,c
  2203  000CCA  5016               	movf	___ftadd@f1+1,w,c
  2204  000CCC  2219               	addwfc	___ftadd@f2+1,f,c
  2205  000CCE  5017               	movf	___ftadd@f1+2,w,c
  2206  000CD0  221A               	addwfc	___ftadd@f2+2,f,c
  2207  000CD2  AE1A               	btfss	___ftadd@f2+2,7,c
  2208  000CD4  D00E               	goto	l1575
  2209  000CD6  0EFF               	movlw	255
  2210  000CD8  1A18               	xorwf	___ftadd@f2,f,c
  2211  000CDA  0EFF               	movlw	255
  2212  000CDC  1A19               	xorwf	___ftadd@f2+1,f,c
  2213  000CDE  0EFF               	movlw	255
  2214  000CE0  1A1A               	xorwf	___ftadd@f2+2,f,c
  2215  000CE2  0E01               	movlw	1
  2216  000CE4  2618               	addwf	___ftadd@f2,f,c
  2217  000CE6  0E00               	movlw	0
  2218  000CE8  2219               	addwfc	___ftadd@f2+1,f,c
  2219  000CEA  0E00               	movlw	0
  2220  000CEC  221A               	addwfc	___ftadd@f2+2,f,c
  2221  000CEE  0E01               	movlw	1
  2222  000CF0  6E1E               	movwf	___ftadd@sign,c
  2223  000CF2                     l1575:
  2224  000CF2  C018  F001         	movff	___ftadd@f2,___ftpack@arg
  2225  000CF6  C019  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2226  000CFA  C01A  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2227  000CFE  C020  F004         	movff	___ftadd@exp1,___ftpack@exp
  2228  000D02  C01E  F005         	movff	___ftadd@sign,___ftpack@sign
  2229  000D06  ECF2  F007         	call	___ftpack	;wreg free
  2230  000D0A  C001  F015         	movff	?___ftpack,?___ftadd
  2231  000D0E  C002  F016         	movff	?___ftpack+1,?___ftadd+1
  2232  000D12  C003  F017         	movff	?___ftpack+2,?___ftadd+2
  2233  000D16  0012               	return	
  2234  000D18                     __end_of___ftadd:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           tblptrh	equ	0xFF7
  2238                           tblptrl	equ	0xFF6
  2239                           tablat	equ	0xFF5
  2240                           prodl	equ	0xFF3
  2241                           postinc0	equ	0xFEE
  2242                           wreg	equ	0xFE8
  2243                           postdec1	equ	0xFE5
  2244                           plusw1	equ	0xFE3
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           postinc2	equ	0xFDE
  2248                           postdec2	equ	0xFDD
  2249                           plusw2	equ	0xFDB
  2250                           fsr2h	equ	0xFDA
  2251                           fsr2l	equ	0xFD9
  2252                           status	equ	0xFD8
  2253                           
  2254 ;; *************** function ___ftpack *****************
  2255 ;; Defined at:
  2256 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\float.c"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  arg             3    0[COMRAM] unsigned um
  2259 ;;  exp             1    3[COMRAM] unsigned char 
  2260 ;;  sign            1    4[COMRAM] unsigned char 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  3    0[COMRAM] float 
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2272 ;;      Params:         5       0       0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0       0       0
  2274 ;;      Temps:          3       0       0       0       0       0       0
  2275 ;;      Totals:         8       0       0       0       0       0       0
  2276 ;;Total ram usage:        8 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		___ftadd
  2282 ;;		___ftmul
  2283 ;;		___lltoft
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text9
  2288  000FE4                     __ptext9:
  2289                           	opt stack 0
  2290  000FE4                     ___ftpack:
  2291                           	opt stack 27
  2292                           
  2293                           ;incstack = 0
  2294  000FE4  5004               	movf	___ftpack@exp,w,c
  2295  000FE6  B4D8               	btfsc	status,2,c
  2296  000FE8  D005               	goto	l1405
  2297  000FEA  5001               	movf	___ftpack@arg,w,c
  2298  000FEC  1002               	iorwf	___ftpack@arg+1,w,c
  2299  000FEE  1003               	iorwf	___ftpack@arg+2,w,c
  2300  000FF0  A4D8               	btfss	status,2,c
  2301  000FF2  D00C               	goto	l1411
  2302  000FF4                     l1405:
  2303  000FF4  0E00               	movlw	0
  2304  000FF6  6E01               	movwf	?___ftpack,c
  2305  000FF8  0E00               	movlw	0
  2306  000FFA  6E02               	movwf	?___ftpack+1,c
  2307  000FFC  0E00               	movlw	0
  2308  000FFE  6E03               	movwf	?___ftpack+2,c
  2309  001000  0012               	return	
  2310  001002                     l1409:
  2311  001002  2A04               	incf	___ftpack@exp,f,c
  2312  001004  90D8               	bcf	status,0,c
  2313  001006  3203               	rrcf	___ftpack@arg+2,f,c
  2314  001008  3202               	rrcf	___ftpack@arg+1,f,c
  2315  00100A  3201               	rrcf	___ftpack@arg,f,c
  2316  00100C                     l1411:
  2317  00100C  0E00               	movlw	0
  2318  00100E  1401               	andwf	___ftpack@arg,w,c
  2319  001010  6E06               	movwf	??___ftpack& (0+255),c
  2320  001012  0E00               	movlw	0
  2321  001014  1402               	andwf	___ftpack@arg+1,w,c
  2322  001016  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2323  001018  0EFE               	movlw	254
  2324  00101A  1403               	andwf	___ftpack@arg+2,w,c
  2325  00101C  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2326  00101E  5006               	movf	??___ftpack,w,c
  2327  001020  1007               	iorwf	??___ftpack+1,w,c
  2328  001022  1008               	iorwf	??___ftpack+2,w,c
  2329  001024  B4D8               	btfsc	status,2,c
  2330  001026  D00C               	goto	l1417
  2331  001028  D7EC               	goto	l1409
  2332  00102A                     l1413:
  2333  00102A  2A04               	incf	___ftpack@exp,f,c
  2334  00102C  0E01               	movlw	1
  2335  00102E  2601               	addwf	___ftpack@arg,f,c
  2336  001030  0E00               	movlw	0
  2337  001032  2202               	addwfc	___ftpack@arg+1,f,c
  2338  001034  0E00               	movlw	0
  2339  001036  2203               	addwfc	___ftpack@arg+2,f,c
  2340  001038  90D8               	bcf	status,0,c
  2341  00103A  3203               	rrcf	___ftpack@arg+2,f,c
  2342  00103C  3202               	rrcf	___ftpack@arg+1,f,c
  2343  00103E  3201               	rrcf	___ftpack@arg,f,c
  2344  001040                     l1417:
  2345  001040  0E00               	movlw	0
  2346  001042  1401               	andwf	___ftpack@arg,w,c
  2347  001044  6E06               	movwf	??___ftpack& (0+255),c
  2348  001046  0E00               	movlw	0
  2349  001048  1402               	andwf	___ftpack@arg+1,w,c
  2350  00104A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2351  00104C  0EFF               	movlw	255
  2352  00104E  1403               	andwf	___ftpack@arg+2,w,c
  2353  001050  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2354  001052  5006               	movf	??___ftpack,w,c
  2355  001054  1007               	iorwf	??___ftpack+1,w,c
  2356  001056  1008               	iorwf	??___ftpack+2,w,c
  2357  001058  B4D8               	btfsc	status,2,c
  2358  00105A  D006               	goto	l1421
  2359  00105C  D7E6               	goto	l1413
  2360  00105E                     l1419:
  2361  00105E  0604               	decf	___ftpack@exp,f,c
  2362  001060  90D8               	bcf	status,0,c
  2363  001062  3601               	rlcf	___ftpack@arg,f,c
  2364  001064  3602               	rlcf	___ftpack@arg+1,f,c
  2365  001066  3603               	rlcf	___ftpack@arg+2,f,c
  2366  001068                     l1421:
  2367  001068  BE02               	btfsc	___ftpack@arg+1,7,c
  2368  00106A  D003               	goto	l428
  2369  00106C  0E02               	movlw	2
  2370  00106E  6004               	cpfslt	___ftpack@exp,c
  2371  001070  D7F6               	goto	l1419
  2372  001072                     l428:
  2373  001072  A004               	btfss	___ftpack@exp,0,c
  2374  001074  9E02               	bcf	___ftpack@arg+1,7,c
  2375  001076  90D8               	bcf	status,0,c
  2376  001078  3204               	rrcf	___ftpack@exp,f,c
  2377  00107A  5004               	movf	___ftpack@exp,w,c
  2378  00107C  1203               	iorwf	___ftpack@arg+2,f,c
  2379  00107E  5005               	movf	___ftpack@sign,w,c
  2380  001080  A4D8               	btfss	status,2,c
  2381  001082  8E03               	bsf	___ftpack@arg+2,7,c
  2382  001084  C001  F001         	movff	___ftpack@arg,?___ftpack
  2383  001088  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2384  00108C  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2385  001090  0012               	return	
  2386  001092                     __end_of___ftpack:
  2387                           	opt stack 0
  2388                           tblptru	equ	0xFF8
  2389                           tblptrh	equ	0xFF7
  2390                           tblptrl	equ	0xFF6
  2391                           tablat	equ	0xFF5
  2392                           prodl	equ	0xFF3
  2393                           postinc0	equ	0xFEE
  2394                           wreg	equ	0xFE8
  2395                           postdec1	equ	0xFE5
  2396                           plusw1	equ	0xFE3
  2397                           fsr1l	equ	0xFE1
  2398                           indf2	equ	0xFDF
  2399                           postinc2	equ	0xFDE
  2400                           postdec2	equ	0xFDD
  2401                           plusw2	equ	0xFDB
  2402                           fsr2h	equ	0xFDA
  2403                           fsr2l	equ	0xFD9
  2404                           status	equ	0xFD8
  2405                           
  2406 ;; *************** function _UART_TxNumber *****************
  2407 ;; Defined at:
  2408 ;;		line 260 in file "../00-libfiles/uart.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  v_numericSys    1    wreg     unsigned char 
  2411 ;;  v_number_u32    4   13[COMRAM] unsigned long 
  2412 ;;  v_numOfDigit    1   17[COMRAM] unsigned char 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  v_numericSys    1   41[COMRAM] unsigned char 
  2415 ;;  a              10   29[COMRAM] unsigned char [10]
  2416 ;;  i               1   42[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2426 ;;      Params:         5       0       0       0       0       0       0
  2427 ;;      Locals:        14       0       0       0       0       0       0
  2428 ;;      Temps:         11       0       0       0       0       0       0
  2429 ;;      Totals:        30       0       0       0       0       0       0
  2430 ;;Total ram usage:       30 bytes
  2431 ;; Hardware stack levels used:    1
  2432 ;; Hardware stack levels required when called:    1
  2433 ;; This function calls:
  2434 ;;		_UART_TxChar
  2435 ;;		___lldiv
  2436 ;; This function is called by:
  2437 ;;		_UART_TxFloatNumber
  2438 ;;		_UART_Printf
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text10
  2443  00099C                     __ptext10:
  2444                           	opt stack 0
  2445  00099C                     _UART_TxNumber:
  2446                           	opt stack 28
  2447                           
  2448                           ;incstack = 0
  2449                           ;UART_TxNumber@v_numericSystem_u8 stored from wreg
  2450  00099C  6E2A               	movwf	UART_TxNumber@v_numericSystem_u8,c
  2451                           
  2452                           ;uart.c: 262: uint8_t i=0,a[10];
  2453  00099E  0E00               	movlw	0
  2454  0009A0  6E2B               	movwf	UART_TxNumber@i,c
  2455                           
  2456                           ;uart.c: 264: if(2u == v_numericSystem_u8)
  2457  0009A2  0E02               	movlw	2
  2458  0009A4  182A               	xorwf	UART_TxNumber@v_numericSystem_u8,w,c
  2459  0009A6  B4D8               	btfsc	status,2,c
  2460  0009A8  D034               	goto	l1471
  2461  0009AA  D037               	goto	l1473
  2462  0009AC                     l1465:
  2463                           
  2464                           ;uart.c: 267: {
  2465                           ;uart.c: 270: i = (((v_number_u32)&(((uint8_t)1<<((v_numOfDigitsToTransmit_u8-1)))))!=0u
      +                          );
  2466  0009AC  C012  F013         	movff	UART_TxNumber@v_numOfDigitsToTransmit_u8,??_UART_TxNumber
  2467  0009B0  0EFF               	movlw	-1
  2468  0009B2  2613               	addwf	??_UART_TxNumber,f,c
  2469  0009B4  0E01               	movlw	1
  2470  0009B6  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2471  0009B8  0E00               	movlw	0
  2472  0009BA  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2473  0009BC  2A13               	incf	??_UART_TxNumber,f,c
  2474  0009BE  D003               	goto	u1074
  2475  0009C0                     u1075:
  2476  0009C0  90D8               	bcf	status,0,c
  2477  0009C2  3614               	rlcf	??_UART_TxNumber+1,f,c
  2478  0009C4  3615               	rlcf	??_UART_TxNumber+2,f,c
  2479  0009C6                     u1074:
  2480  0009C6  2E13               	decfsz	??_UART_TxNumber,f,c
  2481  0009C8  D7FB               	goto	u1075
  2482  0009CA  C014  F016         	movff	??_UART_TxNumber+1,??_UART_TxNumber+3
  2483  0009CE  C015  F017         	movff	??_UART_TxNumber+2,??_UART_TxNumber+4
  2484  0009D2  0E00               	movlw	0
  2485  0009D4  BE17               	btfsc	(??_UART_TxNumber+4)& (0+255),7,c
  2486  0009D6  0EFF               	movlw	255
  2487  0009D8  6E18               	movwf	(??_UART_TxNumber+5)& (0+255),c
  2488  0009DA  6E19               	movwf	(??_UART_TxNumber+6)& (0+255),c
  2489  0009DC  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2490  0009DE  1416               	andwf	??_UART_TxNumber+3,w,c
  2491  0009E0  6E1A               	movwf	(??_UART_TxNumber+7)& (0+255),c
  2492  0009E2  500F               	movf	UART_TxNumber@v_number_u32+1,w,c
  2493  0009E4  1417               	andwf	??_UART_TxNumber+4,w,c
  2494  0009E6  6E1B               	movwf	(??_UART_TxNumber+8)& (0+255),c
  2495  0009E8  5010               	movf	UART_TxNumber@v_number_u32+2,w,c
  2496  0009EA  1418               	andwf	??_UART_TxNumber+5,w,c
  2497  0009EC  6E1C               	movwf	(??_UART_TxNumber+9)& (0+255),c
  2498  0009EE  5011               	movf	UART_TxNumber@v_number_u32+3,w,c
  2499  0009F0  1419               	andwf	??_UART_TxNumber+6,w,c
  2500  0009F2  6E1D               	movwf	(??_UART_TxNumber+10)& (0+255),c
  2501  0009F4  501A               	movf	??_UART_TxNumber+7,w,c
  2502  0009F6  101B               	iorwf	??_UART_TxNumber+8,w,c
  2503  0009F8  101C               	iorwf	??_UART_TxNumber+9,w,c
  2504  0009FA  101D               	iorwf	??_UART_TxNumber+10,w,c
  2505  0009FC  B4D8               	btfsc	status,2,c
  2506  0009FE  D002               	goto	u1080
  2507  000A00  0E01               	movlw	1
  2508  000A02  D001               	goto	u1090
  2509  000A04                     u1080:
  2510  000A04  0E00               	movlw	0
  2511  000A06                     u1090:
  2512  000A06  6E2B               	movwf	UART_TxNumber@i,c
  2513                           
  2514                           ;uart.c: 271: UART_TxChar(((i)+0x30));
  2515  000A08  502B               	movf	UART_TxNumber@i,w,c
  2516  000A0A  0F30               	addlw	48
  2517  000A0C  ECE1  F009         	call	_UART_TxChar
  2518                           
  2519                           ;uart.c: 272: v_numOfDigitsToTransmit_u8--;
  2520  000A10  0612               	decf	UART_TxNumber@v_numOfDigitsToTransmit_u8,f,c
  2521  000A12                     l1471:
  2522  000A12  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2523  000A14  B4D8               	btfsc	status,2,c
  2524  000A16  0012               	return	
  2525  000A18  D7C9               	goto	l1465
  2526  000A1A                     l1473:
  2527                           
  2528                           ;uart.c: 275: else if(v_number_u32==0)
  2529  000A1A  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2530  000A1C  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  2531  000A1E  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  2532  000A20  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  2533  000A22  A4D8               	btfss	status,2,c
  2534  000A24  D004               	goto	l1477
  2535                           
  2536                           ;uart.c: 276: {
  2537                           ;uart.c: 280: UART_TxChar('0');
  2538  000A26  0E30               	movlw	48
  2539  000A28  ECE1  F009         	call	_UART_TxChar
  2540                           
  2541                           ;uart.c: 281: }
  2542  000A2C  0012               	return	
  2543  000A2E                     l1477:
  2544                           
  2545                           ;uart.c: 282: else
  2546                           ;uart.c: 283: {
  2547                           ;uart.c: 284: for(i=0;i<v_numOfDigitsToTransmit_u8;i++)
  2548  000A2E  0E00               	movlw	0
  2549  000A30  6E2B               	movwf	UART_TxNumber@i,c
  2550  000A32  D04D               	goto	l1495
  2551  000A34                     l1479:
  2552                           
  2553                           ;uart.c: 285: {
  2554                           ;uart.c: 288: if(v_number_u32!=0)
  2555  000A34  500E               	movf	UART_TxNumber@v_number_u32,w,c
  2556  000A36  100F               	iorwf	UART_TxNumber@v_number_u32+1,w,c
  2557  000A38  1010               	iorwf	UART_TxNumber@v_number_u32+2,w,c
  2558  000A3A  1011               	iorwf	UART_TxNumber@v_number_u32+3,w,c
  2559  000A3C  B4D8               	btfsc	status,2,c
  2560  000A3E  D035               	goto	l1485
  2561                           
  2562                           ;uart.c: 289: {
  2563                           ;uart.c: 296: a[i]=(uint32_t)(v_number_u32 - (v_numericSystem_u8 * (uint32_t)(v_number_u
      +                          32/v_numericSystem_u8)));
  2564  000A40  502B               	movf	UART_TxNumber@i,w,c
  2565  000A42  0D01               	mullw	1
  2566  000A44  0E1E               	movlw	low UART_TxNumber@a
  2567  000A46  24F3               	addwf	prodl,w,c
  2568  000A48  6ED9               	movwf	fsr2l,c
  2569  000A4A  0E00               	movlw	high UART_TxNumber@a
  2570  000A4C  20F4               	addwfc	prodh,w,c
  2571  000A4E  6EDA               	movwf	fsr2h,c
  2572  000A50  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  2573  000A54  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  2574  000A58  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  2575  000A5C  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  2576  000A60  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  2577  000A62  6E05               	movwf	___lldiv@divisor,c
  2578  000A64  6A06               	clrf	___lldiv@divisor+1,c
  2579  000A66  6A07               	clrf	___lldiv@divisor+2,c
  2580  000A68  6A08               	clrf	___lldiv@divisor+3,c
  2581  000A6A  EC49  F008         	call	___lldiv	;wreg free
  2582  000A6E  5001               	movf	?___lldiv,w,c
  2583  000A70  022A               	mulwf	UART_TxNumber@v_numericSystem_u8,c
  2584  000A72  50F3               	movf	prodl,w,c
  2585  000A74  0800               	sublw	0
  2586  000A76  240E               	addwf	UART_TxNumber@v_number_u32,w,c
  2587  000A78  6EDF               	movwf	indf2,c
  2588                           
  2589                           ;uart.c: 297: v_number_u32=v_number_u32/v_numericSystem_u8;
  2590  000A7A  C00E  F001         	movff	UART_TxNumber@v_number_u32,___lldiv@dividend
  2591  000A7E  C00F  F002         	movff	UART_TxNumber@v_number_u32+1,___lldiv@dividend+1
  2592  000A82  C010  F003         	movff	UART_TxNumber@v_number_u32+2,___lldiv@dividend+2
  2593  000A86  C011  F004         	movff	UART_TxNumber@v_number_u32+3,___lldiv@dividend+3
  2594  000A8A  502A               	movf	UART_TxNumber@v_numericSystem_u8,w,c
  2595  000A8C  6E05               	movwf	___lldiv@divisor,c
  2596  000A8E  6A06               	clrf	___lldiv@divisor+1,c
  2597  000A90  6A07               	clrf	___lldiv@divisor+2,c
  2598  000A92  6A08               	clrf	___lldiv@divisor+3,c
  2599  000A94  EC49  F008         	call	___lldiv	;wreg free
  2600  000A98  C001  F00E         	movff	?___lldiv,UART_TxNumber@v_number_u32
  2601  000A9C  C002  F00F         	movff	?___lldiv+1,UART_TxNumber@v_number_u32+1
  2602  000AA0  C003  F010         	movff	?___lldiv+2,UART_TxNumber@v_number_u32+2
  2603  000AA4  C004  F011         	movff	?___lldiv+3,UART_TxNumber@v_number_u32+3
  2604                           
  2605                           ;uart.c: 298: }
  2606  000AA8  D011               	goto	l1493
  2607  000AAA                     l1485:
  2608                           
  2609                           ;uart.c: 299: else if( (v_numOfDigitsToTransmit_u8 == 0xffu) ||
  2610                           ;uart.c: 300: (v_numOfDigitsToTransmit_u8 > 10u))
  2611  000AAA  2812               	incf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2612  000AAC  B4D8               	btfsc	status,2,c
  2613  000AAE  D05A               	goto	l1507
  2614  000AB0  0E0A               	movlw	10
  2615  000AB2  6412               	cpfsgt	UART_TxNumber@v_numOfDigitsToTransmit_u8,c
  2616  000AB4  D001               	goto	l1491
  2617  000AB6  D056               	goto	l1507
  2618  000AB8                     l1491:
  2619                           
  2620                           ;uart.c: 306: else
  2621                           ;uart.c: 307: {
  2622                           ;uart.c: 311: a[i]=0;
  2623  000AB8  502B               	movf	UART_TxNumber@i,w,c
  2624  000ABA  0D01               	mullw	1
  2625  000ABC  0E1E               	movlw	low UART_TxNumber@a
  2626  000ABE  24F3               	addwf	prodl,w,c
  2627  000AC0  6ED9               	movwf	fsr2l,c
  2628  000AC2  0E00               	movlw	high UART_TxNumber@a
  2629  000AC4  20F4               	addwfc	prodh,w,c
  2630  000AC6  6EDA               	movwf	fsr2h,c
  2631  000AC8  0E00               	movlw	0
  2632  000ACA  6EDF               	movwf	indf2,c
  2633  000ACC                     l1493:
  2634  000ACC  2A2B               	incf	UART_TxNumber@i,f,c
  2635  000ACE                     l1495:
  2636  000ACE  5012               	movf	UART_TxNumber@v_numOfDigitsToTransmit_u8,w,c
  2637  000AD0  5C2B               	subwf	UART_TxNumber@i,w,c
  2638  000AD2  B0D8               	btfsc	status,0,c
  2639  000AD4  D047               	goto	l1507
  2640  000AD6  D7AE               	goto	l1479
  2641  000AD8                     l1497:
  2642                           
  2643                           ;uart.c: 316: {
  2644                           ;uart.c: 318: UART_TxChar((((a[i-1])>0x09) ? ((a[i-1]) + 0x37): ((a[i-1]) + 0x30)));
  2645  000AD8  0EFF               	movlw	255
  2646  000ADA  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2647  000ADC  0EFF               	movlw	255
  2648  000ADE  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2649  000AE0  502B               	movf	UART_TxNumber@i,w,c
  2650  000AE2  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2651  000AE4  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2652  000AE6  5013               	movf	??_UART_TxNumber,w,c
  2653  000AE8  2615               	addwf	??_UART_TxNumber+2,f,c
  2654  000AEA  5014               	movf	??_UART_TxNumber+1,w,c
  2655  000AEC  2216               	addwfc	??_UART_TxNumber+3,f,c
  2656  000AEE  0E1E               	movlw	low UART_TxNumber@a
  2657  000AF0  2415               	addwf	??_UART_TxNumber+2,w,c
  2658  000AF2  6ED9               	movwf	fsr2l,c
  2659  000AF4  0E00               	movlw	high UART_TxNumber@a
  2660  000AF6  2016               	addwfc	??_UART_TxNumber+3,w,c
  2661  000AF8  6EDA               	movwf	fsr2h,c
  2662  000AFA  0E0A               	movlw	10
  2663  000AFC  60DF               	cpfslt	indf2,c
  2664  000AFE  D015               	goto	l1501
  2665  000B00  0EFF               	movlw	255
  2666  000B02  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2667  000B04  0EFF               	movlw	255
  2668  000B06  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2669  000B08  502B               	movf	UART_TxNumber@i,w,c
  2670  000B0A  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2671  000B0C  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2672  000B0E  5013               	movf	??_UART_TxNumber,w,c
  2673  000B10  2615               	addwf	??_UART_TxNumber+2,f,c
  2674  000B12  5014               	movf	??_UART_TxNumber+1,w,c
  2675  000B14  2216               	addwfc	??_UART_TxNumber+3,f,c
  2676  000B16  0E1E               	movlw	low UART_TxNumber@a
  2677  000B18  2415               	addwf	??_UART_TxNumber+2,w,c
  2678  000B1A  6ED9               	movwf	fsr2l,c
  2679  000B1C  0E00               	movlw	high UART_TxNumber@a
  2680  000B1E  2016               	addwfc	??_UART_TxNumber+3,w,c
  2681  000B20  6EDA               	movwf	fsr2h,c
  2682  000B22  50DF               	movf	indf2,w,c
  2683  000B24  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  2684  000B26  0E30               	movlw	48
  2685  000B28  D014               	goto	L1
  2686  000B2A                     l1501:
  2687  000B2A  0EFF               	movlw	255
  2688  000B2C  6E13               	movwf	??_UART_TxNumber& (0+255),c
  2689  000B2E  0EFF               	movlw	255
  2690  000B30  6E14               	movwf	(??_UART_TxNumber+1)& (0+255),c
  2691  000B32  502B               	movf	UART_TxNumber@i,w,c
  2692  000B34  6E15               	movwf	(??_UART_TxNumber+2)& (0+255),c
  2693  000B36  6A16               	clrf	(??_UART_TxNumber+3)& (0+255),c
  2694  000B38  5013               	movf	??_UART_TxNumber,w,c
  2695  000B3A  2615               	addwf	??_UART_TxNumber+2,f,c
  2696  000B3C  5014               	movf	??_UART_TxNumber+1,w,c
  2697  000B3E  2216               	addwfc	??_UART_TxNumber+3,f,c
  2698  000B40  0E1E               	movlw	low UART_TxNumber@a
  2699  000B42  2415               	addwf	??_UART_TxNumber+2,w,c
  2700  000B44  6ED9               	movwf	fsr2l,c
  2701  000B46  0E00               	movlw	high UART_TxNumber@a
  2702  000B48  2016               	addwfc	??_UART_TxNumber+3,w,c
  2703  000B4A  6EDA               	movwf	fsr2h,c
  2704  000B4C  50DF               	movf	indf2,w,c
  2705  000B4E  6E17               	movwf	(??_UART_TxNumber+4)& (0+255),c
  2706  000B50  0E37               	movlw	55
  2707  000B52                     L1:
  2708  000B52  2417               	addwf	??_UART_TxNumber+4,w,c
  2709  000B54  6E28               	movwf	_UART_TxNumber$101,c
  2710  000B56  6A29               	clrf	_UART_TxNumber$101+1,c
  2711  000B58  0E00               	movlw	0
  2712  000B5A  2229               	addwfc	_UART_TxNumber$101+1,f,c
  2713  000B5C  5028               	movf	_UART_TxNumber$101,w,c
  2714  000B5E  ECE1  F009         	call	_UART_TxChar
  2715                           
  2716                           ;uart.c: 319: i--;
  2717  000B62  062B               	decf	UART_TxNumber@i,f,c
  2718  000B64                     l1507:
  2719  000B64  502B               	movf	UART_TxNumber@i,w,c
  2720  000B66  B4D8               	btfsc	status,2,c
  2721  000B68  0012               	return	
  2722  000B6A  D7B6               	goto	l1497
  2723  000B6C                     __end_of_UART_TxNumber:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           postdec1	equ	0xFE5
  2734                           plusw1	equ	0xFE3
  2735                           fsr1l	equ	0xFE1
  2736                           indf2	equ	0xFDF
  2737                           postinc2	equ	0xFDE
  2738                           postdec2	equ	0xFDD
  2739                           plusw2	equ	0xFDB
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744 ;; *************** function _UART_TxChar *****************
  2745 ;; Defined at:
  2746 ;;		line 145 in file "../00-libfiles/uart.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  v_uartData_u    1    wreg     unsigned char 
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  v_uartData_u    1    0[COMRAM] unsigned char 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2760 ;;      Params:         0       0       0       0       0       0       0
  2761 ;;      Locals:         1       0       0       0       0       0       0
  2762 ;;      Temps:          0       0       0       0       0       0       0
  2763 ;;      Totals:         1       0       0       0       0       0       0
  2764 ;;Total ram usage:        1 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; This function calls:
  2767 ;;		Nothing
  2768 ;; This function is called by:
  2769 ;;		_UART_TxString
  2770 ;;		_UART_TxNumber
  2771 ;;		_UART_TxFloatNumber
  2772 ;;		_UART_Printf
  2773 ;;		_UART_RxString
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text11
  2778  0013C2                     __ptext11:
  2779                           	opt stack 0
  2780  0013C2                     _UART_TxChar:
  2781                           	opt stack 28
  2782                           
  2783                           ;incstack = 0
  2784                           ;UART_TxChar@v_uartData_u8 stored from wreg
  2785  0013C2  6E01               	movwf	UART_TxChar@v_uartData_u8,c
  2786  0013C4                     l101:
  2787  0013C4  A89E               	btfss	3998,4,c	;volatile
  2788  0013C6  D7FE               	goto	l101
  2789                           
  2790                           ;uart.c: 148: TXIF=0;
  2791  0013C8  989E               	bcf	3998,4,c	;volatile
  2792                           
  2793                           ;uart.c: 149: TXREG=v_uartData_u8;
  2794  0013CA  C001  FFAD         	movff	UART_TxChar@v_uartData_u8,4013	;volatile
  2795  0013CE  0012               	return		;funcret
  2796  0013D0                     __end_of_UART_TxChar:
  2797                           	opt stack 0
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           postinc0	equ	0xFEE
  2805                           wreg	equ	0xFE8
  2806                           postdec1	equ	0xFE5
  2807                           plusw1	equ	0xFE3
  2808                           fsr1l	equ	0xFE1
  2809                           indf2	equ	0xFDF
  2810                           postinc2	equ	0xFDE
  2811                           postdec2	equ	0xFDD
  2812                           plusw2	equ	0xFDB
  2813                           fsr2h	equ	0xFDA
  2814                           fsr2l	equ	0xFD9
  2815                           status	equ	0xFD8
  2816                           
  2817 ;; *************** function _UART_Init *****************
  2818 ;; Defined at:
  2819 ;;		line 66 in file "../00-libfiles/uart.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  v_baudRate_u    4   22[COMRAM] unsigned long 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;		None
  2824 ;; Return value:  Size  Location     Type
  2825 ;;                  1    wreg      void 
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, cstack
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2833 ;;      Params:         4       0       0       0       0       0       0
  2834 ;;      Locals:         0       0       0       0       0       0       0
  2835 ;;      Temps:          0       0       0       0       0       0       0
  2836 ;;      Totals:         4       0       0       0       0       0       0
  2837 ;;Total ram usage:        4 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; Hardware stack levels required when called:    2
  2840 ;; This function calls:
  2841 ;;		_UART_SetBaudRate
  2842 ;; This function is called by:
  2843 ;;		_main
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text12
  2848  001390                     __ptext12:
  2849                           	opt stack 0
  2850  001390                     _UART_Init:
  2851                           	opt stack 28
  2852                           
  2853                           ;uart.c: 68: TRISC=0x80;
  2854                           
  2855                           ;incstack = 0
  2856  001390  0E80               	movlw	128
  2857  001392  6E94               	movwf	3988,c	;volatile
  2858                           
  2859                           ;uart.c: 69: TXSTA=0x20;
  2860  001394  0E20               	movlw	32
  2861  001396  6EAC               	movwf	4012,c	;volatile
  2862                           
  2863                           ;uart.c: 70: RCSTA=0x90;
  2864  001398  0E90               	movlw	144
  2865  00139A  6EAB               	movwf	4011,c	;volatile
  2866                           
  2867                           ;uart.c: 71: UART_SetBaudRate(v_baudRate_u32);
  2868  00139C  C017  F00E         	movff	UART_Init@v_baudRate_u32,UART_SetBaudRate@v_baudRate_u32
  2869  0013A0  C018  F00F         	movff	UART_Init@v_baudRate_u32+1,UART_SetBaudRate@v_baudRate_u32+1
  2870  0013A4  C019  F010         	movff	UART_Init@v_baudRate_u32+2,UART_SetBaudRate@v_baudRate_u32+2
  2871  0013A8  C01A  F011         	movff	UART_Init@v_baudRate_u32+3,UART_SetBaudRate@v_baudRate_u32+3
  2872  0013AC  ECC7  F008         	call	_UART_SetBaudRate	;wreg free
  2873  0013B0  0012               	return		;funcret
  2874  0013B2                     __end_of_UART_Init:
  2875                           	opt stack 0
  2876                           tblptru	equ	0xFF8
  2877                           tblptrh	equ	0xFF7
  2878                           tblptrl	equ	0xFF6
  2879                           tablat	equ	0xFF5
  2880                           prodh	equ	0xFF4
  2881                           prodl	equ	0xFF3
  2882                           postinc0	equ	0xFEE
  2883                           wreg	equ	0xFE8
  2884                           postdec1	equ	0xFE5
  2885                           plusw1	equ	0xFE3
  2886                           fsr1l	equ	0xFE1
  2887                           indf2	equ	0xFDF
  2888                           postinc2	equ	0xFDE
  2889                           postdec2	equ	0xFDD
  2890                           plusw2	equ	0xFDB
  2891                           fsr2h	equ	0xFDA
  2892                           fsr2l	equ	0xFD9
  2893                           status	equ	0xFD8
  2894                           
  2895 ;; *************** function _UART_SetBaudRate *****************
  2896 ;; Defined at:
  2897 ;;		line 91 in file "../00-libfiles/uart.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  v_baudRate_u    4   13[COMRAM] unsigned long 
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  RegValue        1   21[COMRAM] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2, status,0, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2911 ;;      Params:         4       0       0       0       0       0       0
  2912 ;;      Locals:         1       0       0       0       0       0       0
  2913 ;;      Temps:          4       0       0       0       0       0       0
  2914 ;;      Totals:         9       0       0       0       0       0       0
  2915 ;;Total ram usage:        9 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    1
  2918 ;; This function calls:
  2919 ;;		___lldiv
  2920 ;; This function is called by:
  2921 ;;		_UART_Init
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text13
  2926  00118E                     __ptext13:
  2927                           	opt stack 0
  2928  00118E                     _UART_SetBaudRate:
  2929                           	opt stack 28
  2930                           
  2931                           ;uart.c: 93: uint8_t RegValue;
  2932                           ;uart.c: 95: if((v_baudRate_u32 >= 2400) && (v_baudRate_u32<=115200UL))
  2933                           
  2934                           ;incstack = 0
  2935  00118E  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  2936  001190  1010               	iorwf	UART_SetBaudRate@v_baudRate_u32+2,w,c
  2937  001192  E106               	bnz	u1600
  2938  001194  0E60               	movlw	96
  2939  001196  5C0E               	subwf	UART_SetBaudRate@v_baudRate_u32,w,c
  2940  001198  0E09               	movlw	9
  2941  00119A  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  2942  00119C  A0D8               	btfss	status,0,c
  2943  00119E  D02D               	goto	l1721
  2944  0011A0                     u1600:
  2945  0011A0  5011               	movf	UART_SetBaudRate@v_baudRate_u32+3,w,c
  2946  0011A2  E12B               	bnz	l1721
  2947  0011A4  040E               	decf	UART_SetBaudRate@v_baudRate_u32,w,c
  2948  0011A6  0EC2               	movlw	194
  2949  0011A8  580F               	subwfb	UART_SetBaudRate@v_baudRate_u32+1,w,c
  2950  0011AA  0E01               	movlw	1
  2951  0011AC  5810               	subwfb	UART_SetBaudRate@v_baudRate_u32+2,w,c
  2952  0011AE  B0D8               	btfsc	status,0,c
  2953  0011B0  D024               	goto	l1721
  2954                           
  2955                           ;uart.c: 96: {
  2956                           ;uart.c: 99: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)v_baudRate_u32))
      +                           - 1);
  2957  0011B2  0E00               	movlw	0
  2958  0011B4  6E01               	movwf	___lldiv@dividend,c
  2959  0011B6  0E2D               	movlw	45
  2960  0011B8  6E02               	movwf	___lldiv@dividend+1,c
  2961  0011BA  0E31               	movlw	49
  2962  0011BC  6E03               	movwf	___lldiv@dividend+2,c
  2963  0011BE  0E01               	movlw	1
  2964  0011C0  6E04               	movwf	___lldiv@dividend+3,c
  2965  0011C2  C00E  F012         	movff	UART_SetBaudRate@v_baudRate_u32,??_UART_SetBaudRate
  2966  0011C6  C00F  F013         	movff	UART_SetBaudRate@v_baudRate_u32+1,??_UART_SetBaudRate+1
  2967  0011CA  C010  F014         	movff	UART_SetBaudRate@v_baudRate_u32+2,??_UART_SetBaudRate+2
  2968  0011CE  C011  F015         	movff	UART_SetBaudRate@v_baudRate_u32+3,??_UART_SetBaudRate+3
  2969  0011D2  0E06               	movlw	6
  2970  0011D4                     u1625:
  2971  0011D4  90D8               	bcf	status,0,c
  2972  0011D6  3612               	rlcf	??_UART_SetBaudRate,f,c
  2973  0011D8  3613               	rlcf	??_UART_SetBaudRate+1,f,c
  2974  0011DA  3614               	rlcf	??_UART_SetBaudRate+2,f,c
  2975  0011DC  3615               	rlcf	??_UART_SetBaudRate+3,f,c
  2976  0011DE  2EE8               	decfsz	wreg,f,c
  2977  0011E0  D7F9               	goto	u1625
  2978  0011E2  C012  F005         	movff	??_UART_SetBaudRate,___lldiv@divisor
  2979  0011E6  C013  F006         	movff	??_UART_SetBaudRate+1,___lldiv@divisor+1
  2980  0011EA  C014  F007         	movff	??_UART_SetBaudRate+2,___lldiv@divisor+2
  2981  0011EE  C015  F008         	movff	??_UART_SetBaudRate+3,___lldiv@divisor+3
  2982  0011F2  EC49  F008         	call	___lldiv	;wreg free
  2983  0011F6  0401               	decf	?___lldiv,w,c
  2984  0011F8  D001               	goto	L2
  2985  0011FA                     l1721:
  2986                           
  2987                           ;uart.c: 101: else
  2988                           ;uart.c: 102: {
  2989                           ;uart.c: 104: RegValue = (uint8_t)(uint32_t)((20000000UL / (64*(uint32_t)9600)) - 1);
  2990  0011FA  0E1F               	movlw	31
  2991  0011FC                     L2:
  2992  0011FC  6E16               	movwf	UART_SetBaudRate@RegValue,c
  2993                           
  2994                           ;uart.c: 105: }
  2995                           ;uart.c: 107: SPBRG = RegValue;
  2996  0011FE  C016  FFAF         	movff	UART_SetBaudRate@RegValue,4015	;volatile
  2997  001202  0012               	return		;funcret
  2998  001204                     __end_of_UART_SetBaudRate:
  2999                           	opt stack 0
  3000                           tblptru	equ	0xFF8
  3001                           tblptrh	equ	0xFF7
  3002                           tblptrl	equ	0xFF6
  3003                           tablat	equ	0xFF5
  3004                           prodh	equ	0xFF4
  3005                           prodl	equ	0xFF3
  3006                           postinc0	equ	0xFEE
  3007                           wreg	equ	0xFE8
  3008                           postdec1	equ	0xFE5
  3009                           plusw1	equ	0xFE3
  3010                           fsr1l	equ	0xFE1
  3011                           indf2	equ	0xFDF
  3012                           postinc2	equ	0xFDE
  3013                           postdec2	equ	0xFDD
  3014                           plusw2	equ	0xFDB
  3015                           fsr2h	equ	0xFDA
  3016                           fsr2l	equ	0xFD9
  3017                           status	equ	0xFD8
  3018                           
  3019 ;; *************** function ___lldiv *****************
  3020 ;; Defined at:
  3021 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.36\sources\common\lldiv.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  dividend        4    0[COMRAM] unsigned long 
  3024 ;;  divisor         4    4[COMRAM] unsigned long 
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;  quotient        4    8[COMRAM] unsigned long 
  3027 ;;  counter         1   12[COMRAM] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  4    0[COMRAM] unsigned long 
  3030 ;; Registers used:
  3031 ;;		wreg, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3037 ;;      Params:         8       0       0       0       0       0       0
  3038 ;;      Locals:         5       0       0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0
  3040 ;;      Totals:        13       0       0       0       0       0       0
  3041 ;;Total ram usage:       13 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_UART_SetBaudRate
  3047 ;;		_UART_TxNumber
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text14
  3052  001092                     __ptext14:
  3053                           	opt stack 0
  3054  001092                     ___lldiv:
  3055                           	opt stack 28
  3056                           
  3057                           ;incstack = 0
  3058  001092  0E00               	movlw	0
  3059  001094  6E09               	movwf	___lldiv@quotient,c
  3060  001096  0E00               	movlw	0
  3061  001098  6E0A               	movwf	___lldiv@quotient+1,c
  3062  00109A  0E00               	movlw	0
  3063  00109C  6E0B               	movwf	___lldiv@quotient+2,c
  3064  00109E  0E00               	movlw	0
  3065  0010A0  6E0C               	movwf	___lldiv@quotient+3,c
  3066  0010A2  5005               	movf	___lldiv@divisor,w,c
  3067  0010A4  1006               	iorwf	___lldiv@divisor+1,w,c
  3068  0010A6  1007               	iorwf	___lldiv@divisor+2,w,c
  3069  0010A8  1008               	iorwf	___lldiv@divisor+3,w,c
  3070  0010AA  B4D8               	btfsc	status,2,c
  3071  0010AC  D02A               	goto	l553
  3072  0010AE  0E01               	movlw	1
  3073  0010B0  6E0D               	movwf	___lldiv@counter,c
  3074  0010B2  D006               	goto	l1445
  3075  0010B4                     l1443:
  3076  0010B4  90D8               	bcf	status,0,c
  3077  0010B6  3605               	rlcf	___lldiv@divisor,f,c
  3078  0010B8  3606               	rlcf	___lldiv@divisor+1,f,c
  3079  0010BA  3607               	rlcf	___lldiv@divisor+2,f,c
  3080  0010BC  3608               	rlcf	___lldiv@divisor+3,f,c
  3081  0010BE  2A0D               	incf	___lldiv@counter,f,c
  3082  0010C0                     l1445:
  3083  0010C0  AE08               	btfss	___lldiv@divisor+3,7,c
  3084  0010C2  D7F8               	goto	l1443
  3085  0010C4                     l1447:
  3086  0010C4  90D8               	bcf	status,0,c
  3087  0010C6  3609               	rlcf	___lldiv@quotient,f,c
  3088  0010C8  360A               	rlcf	___lldiv@quotient+1,f,c
  3089  0010CA  360B               	rlcf	___lldiv@quotient+2,f,c
  3090  0010CC  360C               	rlcf	___lldiv@quotient+3,f,c
  3091  0010CE  5005               	movf	___lldiv@divisor,w,c
  3092  0010D0  5C01               	subwf	___lldiv@dividend,w,c
  3093  0010D2  5006               	movf	___lldiv@divisor+1,w,c
  3094  0010D4  5802               	subwfb	___lldiv@dividend+1,w,c
  3095  0010D6  5007               	movf	___lldiv@divisor+2,w,c
  3096  0010D8  5803               	subwfb	___lldiv@dividend+2,w,c
  3097  0010DA  5008               	movf	___lldiv@divisor+3,w,c
  3098  0010DC  5804               	subwfb	___lldiv@dividend+3,w,c
  3099  0010DE  A0D8               	btfss	status,0,c
  3100  0010E0  D009               	goto	l1455
  3101  0010E2  5005               	movf	___lldiv@divisor,w,c
  3102  0010E4  5E01               	subwf	___lldiv@dividend,f,c
  3103  0010E6  5006               	movf	___lldiv@divisor+1,w,c
  3104  0010E8  5A02               	subwfb	___lldiv@dividend+1,f,c
  3105  0010EA  5007               	movf	___lldiv@divisor+2,w,c
  3106  0010EC  5A03               	subwfb	___lldiv@dividend+2,f,c
  3107  0010EE  5008               	movf	___lldiv@divisor+3,w,c
  3108  0010F0  5A04               	subwfb	___lldiv@dividend+3,f,c
  3109  0010F2  8009               	bsf	___lldiv@quotient,0,c
  3110  0010F4                     l1455:
  3111  0010F4  90D8               	bcf	status,0,c
  3112  0010F6  3208               	rrcf	___lldiv@divisor+3,f,c
  3113  0010F8  3207               	rrcf	___lldiv@divisor+2,f,c
  3114  0010FA  3206               	rrcf	___lldiv@divisor+1,f,c
  3115  0010FC  3205               	rrcf	___lldiv@divisor,f,c
  3116  0010FE  2E0D               	decfsz	___lldiv@counter,f,c
  3117  001100  D7E1               	goto	l1447
  3118  001102                     l553:
  3119  001102  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3120  001106  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3121  00110A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3122  00110E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3123  001112  0012               	return		;funcret
  3124  001114                     __end_of___lldiv:
  3125                           	opt stack 0
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           prodh	equ	0xFF4
  3131                           prodl	equ	0xFF3
  3132                           postinc0	equ	0xFEE
  3133                           wreg	equ	0xFE8
  3134                           postdec1	equ	0xFE5
  3135                           plusw1	equ	0xFE3
  3136                           fsr1l	equ	0xFE1
  3137                           indf2	equ	0xFDF
  3138                           postinc2	equ	0xFDE
  3139                           postdec2	equ	0xFDD
  3140                           plusw2	equ	0xFDB
  3141                           fsr2h	equ	0xFDA
  3142                           fsr2l	equ	0xFD9
  3143                           status	equ	0xFD8
  3144                           
  3145 ;; *************** function _EEPROM_WriteString *****************
  3146 ;; Defined at:
  3147 ;;		line 182 in file "../00-libfiles/eeprom.c"
  3148 ;; Parameters:    Size  Location     Type
  3149 ;;  v_eepromAddr    2    4[COMRAM] unsigned int 
  3150 ;;  ptr_stringPo    2    6[COMRAM] PTR unsigned char 
  3151 ;;		 -> main@write_str(47), 
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3163 ;;      Params:         4       0       0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0       0       0
  3165 ;;      Temps:          0       0       0       0       0       0       0
  3166 ;;      Totals:         4       0       0       0       0       0       0
  3167 ;;Total ram usage:        4 bytes
  3168 ;; Hardware stack levels used:    1
  3169 ;; Hardware stack levels required when called:    1
  3170 ;; This function calls:
  3171 ;;		_EEPROM_WriteByte
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text15
  3178  001260                     __ptext15:
  3179                           	opt stack 0
  3180  001260                     _EEPROM_WriteString:
  3181                           	opt stack 29
  3182  001260                     
  3183                           ;eeprom.c: 186: {
  3184                           ;eeprom.c: 187: EEPROM_WriteByte(v_eepromAddress_u16,*ptr_stringPointer_u8);
  3185  001260  C005  F001         	movff	EEPROM_WriteString@v_eepromAddress_u16,EEPROM_WriteByte@v_eepromAddress_u16
  3186  001264  C006  F002         	movff	EEPROM_WriteString@v_eepromAddress_u16+1,EEPROM_WriteByte@v_eepromAddress_u16+1
  3187  001268  C007  FFD9         	movff	EEPROM_WriteString@ptr_stringPointer_u8,fsr2l
  3188  00126C  C008  FFDA         	movff	EEPROM_WriteString@ptr_stringPointer_u8+1,fsr2h
  3189  001270  50DF               	movf	indf2,w,c
  3190  001272  6E03               	movwf	EEPROM_WriteByte@v_eepromData_u8,c
  3191  001274  EC4A  F009         	call	_EEPROM_WriteByte	;wreg free
  3192                           
  3193                           ;eeprom.c: 188: ptr_stringPointer_u8++;
  3194  001278  4A07               	infsnz	EEPROM_WriteString@ptr_stringPointer_u8,f,c
  3195  00127A  2A08               	incf	EEPROM_WriteString@ptr_stringPointer_u8+1,f,c
  3196                           
  3197                           ;eeprom.c: 189: v_eepromAddress_u16++;
  3198  00127C  4A05               	infsnz	EEPROM_WriteString@v_eepromAddress_u16,f,c
  3199  00127E  2A06               	incf	EEPROM_WriteString@v_eepromAddress_u16+1,f,c
  3200                           
  3201                           ;eeprom.c: 190: }while(*(ptr_stringPointer_u8-1) !=0);
  3202  001280  EE2F F0FF          	lfsr	2,-1
  3203  001284  5007               	movf	EEPROM_WriteString@ptr_stringPointer_u8,w,c
  3204  001286  26D9               	addwf	fsr2l,f,c
  3205  001288  5008               	movf	EEPROM_WriteString@ptr_stringPointer_u8+1,w,c
  3206  00128A  22DA               	addwfc	fsr2h,f,c
  3207  00128C  50DF               	movf	indf2,w,c
  3208  00128E  B4D8               	btfsc	status,2,c
  3209  001290  0012               	return	
  3210  001292  D7E6               	goto	l1745
  3211  001294                     __end_of_EEPROM_WriteString:
  3212                           	opt stack 0
  3213                           tblptru	equ	0xFF8
  3214                           tblptrh	equ	0xFF7
  3215                           tblptrl	equ	0xFF6
  3216                           tablat	equ	0xFF5
  3217                           prodh	equ	0xFF4
  3218                           prodl	equ	0xFF3
  3219                           postinc0	equ	0xFEE
  3220                           wreg	equ	0xFE8
  3221                           postdec1	equ	0xFE5
  3222                           plusw1	equ	0xFE3
  3223                           fsr1l	equ	0xFE1
  3224                           indf2	equ	0xFDF
  3225                           postinc2	equ	0xFDE
  3226                           postdec2	equ	0xFDD
  3227                           plusw2	equ	0xFDB
  3228                           fsr2h	equ	0xFDA
  3229                           fsr2l	equ	0xFD9
  3230                           status	equ	0xFD8
  3231                           
  3232 ;; *************** function _EEPROM_WriteByte *****************
  3233 ;; Defined at:
  3234 ;;		line 63 in file "../00-libfiles/eeprom.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  v_eepromAddr    2    0[COMRAM] unsigned int 
  3237 ;;  v_eepromData    1    2[COMRAM] unsigned char 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;  gie_value       1    3[COMRAM] unsigned char 
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3249 ;;      Params:         3       0       0       0       0       0       0
  3250 ;;      Locals:         1       0       0       0       0       0       0
  3251 ;;      Temps:          0       0       0       0       0       0       0
  3252 ;;      Totals:         4       0       0       0       0       0       0
  3253 ;;Total ram usage:        4 bytes
  3254 ;; Hardware stack levels used:    1
  3255 ;; This function calls:
  3256 ;;		Nothing
  3257 ;; This function is called by:
  3258 ;;		_EEPROM_WriteString
  3259 ;;		_EEPROM_WriteNBytes
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text16
  3264  001294                     __ptext16:
  3265                           	opt stack 0
  3266  001294                     _EEPROM_WriteByte:
  3267                           	opt stack 29
  3268  001294                     l31:
  3269  001294  B2A6               	btfsc	4006,1,c	;volatile
  3270  001296  D7FE               	goto	l31
  3271                           
  3272                           ;eeprom.c: 67: EEADR=v_eepromAddress_u16;
  3273  001298  C001  FFA9         	movff	EEPROM_WriteByte@v_eepromAddress_u16,4009	;volatile
  3274                           
  3275                           ;eeprom.c: 69: EEDATA=v_eepromData_u8;
  3276  00129C  C003  FFA8         	movff	EEPROM_WriteByte@v_eepromData_u8,4008	;volatile
  3277                           
  3278                           ;eeprom.c: 70: gie_value = GIE;
  3279  0012A0  0E00               	movlw	0
  3280  0012A2  BEF2               	btfsc	intcon,7,c	;volatile
  3281  0012A4  0E01               	movlw	1
  3282  0012A6  6E04               	movwf	EEPROM_WriteByte@gie_value,c
  3283                           
  3284                           ;eeprom.c: 71: GIE = 0;
  3285  0012A8  9EF2               	bcf	intcon,7,c	;volatile
  3286                           
  3287                           ;eeprom.c: 72: ((EECON1) |= ((uint8_t)1<<(2)));
  3288  0012AA  84A6               	bsf	4006,2,c	;volatile
  3289                           
  3290                           ;eeprom.c: 73: EECON2=0x55;
  3291  0012AC  0E55               	movlw	85
  3292  0012AE  6EA7               	movwf	4007,c	;volatile
  3293                           
  3294                           ;eeprom.c: 74: EECON2=0xaa;
  3295  0012B0  0EAA               	movlw	170
  3296  0012B2  6EA7               	movwf	4007,c	;volatile
  3297                           
  3298                           ;eeprom.c: 75: ((EECON1) |= ((uint8_t)1<<(1)));
  3299  0012B4  82A6               	bsf	4006,1,c	;volatile
  3300                           
  3301                           ;eeprom.c: 76: ((EECON1) &= ~((uint8_t)1<<(2)));
  3302  0012B6  94A6               	bcf	4006,2,c	;volatile
  3303                           
  3304                           ;eeprom.c: 77: GIE = gie_value;
  3305  0012B8  A004               	btfss	EEPROM_WriteByte@gie_value,0,c
  3306  0012BA  D002               	goto	u1560
  3307  0012BC  8EF2               	bsf	intcon,7,c	;volatile
  3308  0012BE  0012               	return	
  3309  0012C0                     u1560:
  3310  0012C0  9EF2               	bcf	intcon,7,c	;volatile
  3311  0012C2  0012               	return		;funcret
  3312  0012C4                     __end_of_EEPROM_WriteByte:
  3313                           	opt stack 0
  3314                           tblptru	equ	0xFF8
  3315                           tblptrh	equ	0xFF7
  3316                           tblptrl	equ	0xFF6
  3317                           tablat	equ	0xFF5
  3318                           prodh	equ	0xFF4
  3319                           prodl	equ	0xFF3
  3320                           intcon	equ	0xFF2
  3321                           postinc0	equ	0xFEE
  3322                           wreg	equ	0xFE8
  3323                           postdec1	equ	0xFE5
  3324                           plusw1	equ	0xFE3
  3325                           fsr1l	equ	0xFE1
  3326                           indf2	equ	0xFDF
  3327                           postinc2	equ	0xFDE
  3328                           postdec2	equ	0xFDD
  3329                           plusw2	equ	0xFDB
  3330                           fsr2h	equ	0xFDA
  3331                           fsr2l	equ	0xFD9
  3332                           status	equ	0xFD8
  3333                           
  3334 ;; *************** function _EEPROM_ReadString *****************
  3335 ;; Defined at:
  3336 ;;		line 209 in file "../00-libfiles/eeprom.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  v_eepromAddr    2    2[COMRAM] unsigned int 
  3339 ;;  ptr_destStri    2    4[COMRAM] PTR unsigned char 
  3340 ;;		 -> main@read_str(50), 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  eeprom_data     1    6[COMRAM] unsigned char 
  3343 ;; Return value:  Size  Location     Type
  3344 ;;                  1    wreg      void 
  3345 ;; Registers used:
  3346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3347 ;; Tracked objects:
  3348 ;;		On entry : 0/0
  3349 ;;		On exit  : 0/0
  3350 ;;		Unchanged: 0/0
  3351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3352 ;;      Params:         4       0       0       0       0       0       0
  3353 ;;      Locals:         1       0       0       0       0       0       0
  3354 ;;      Temps:          0       0       0       0       0       0       0
  3355 ;;      Totals:         5       0       0       0       0       0       0
  3356 ;;Total ram usage:        5 bytes
  3357 ;; Hardware stack levels used:    1
  3358 ;; Hardware stack levels required when called:    1
  3359 ;; This function calls:
  3360 ;;		_EEPROM_ReadByte
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;; This function uses a non-reentrant model
  3364 ;;
  3365                           
  3366                           	psect	text17
  3367  00131E                     __ptext17:
  3368                           	opt stack 0
  3369  00131E                     _EEPROM_ReadString:
  3370                           	opt stack 29
  3371  00131E                     
  3372                           ;eeprom.c: 214: {
  3373                           ;eeprom.c: 215: eeprom_data = EEPROM_ReadByte(v_eepromAddress_u16);
  3374  00131E  C003  F001         	movff	EEPROM_ReadString@v_eepromAddress_u16,EEPROM_ReadByte@v_eepromAddress_u16
  3375  001322  C004  F002         	movff	EEPROM_ReadString@v_eepromAddress_u16+1,EEPROM_ReadByte@v_eepromAddress_u16+1
  3376  001326  ECD9  F009         	call	_EEPROM_ReadByte	;wreg free
  3377  00132A  6E07               	movwf	EEPROM_ReadString@eeprom_data,c
  3378                           
  3379                           ;eeprom.c: 216: *ptr_destStringAddress_u8 = eeprom_data;
  3380  00132C  C005  FFD9         	movff	EEPROM_ReadString@ptr_destStringAddress_u8,fsr2l
  3381  001330  C006  FFDA         	movff	EEPROM_ReadString@ptr_destStringAddress_u8+1,fsr2h
  3382  001334  C007  FFDF         	movff	EEPROM_ReadString@eeprom_data,indf2
  3383                           
  3384                           ;eeprom.c: 217: ptr_destStringAddress_u8++;
  3385  001338  4A05               	infsnz	EEPROM_ReadString@ptr_destStringAddress_u8,f,c
  3386  00133A  2A06               	incf	EEPROM_ReadString@ptr_destStringAddress_u8+1,f,c
  3387                           
  3388                           ;eeprom.c: 218: v_eepromAddress_u16++;
  3389  00133C  4A03               	infsnz	EEPROM_ReadString@v_eepromAddress_u16,f,c
  3390  00133E  2A04               	incf	EEPROM_ReadString@v_eepromAddress_u16+1,f,c
  3391                           
  3392                           ;eeprom.c: 219: }while(eeprom_data!=0);
  3393  001340  5007               	movf	EEPROM_ReadString@eeprom_data,w,c
  3394  001342  B4D8               	btfsc	status,2,c
  3395  001344  0012               	return	
  3396  001346  D7EB               	goto	l1753
  3397  001348                     __end_of_EEPROM_ReadString:
  3398                           	opt stack 0
  3399                           tblptru	equ	0xFF8
  3400                           tblptrh	equ	0xFF7
  3401                           tblptrl	equ	0xFF6
  3402                           tablat	equ	0xFF5
  3403                           prodh	equ	0xFF4
  3404                           prodl	equ	0xFF3
  3405                           intcon	equ	0xFF2
  3406                           postinc0	equ	0xFEE
  3407                           wreg	equ	0xFE8
  3408                           postdec1	equ	0xFE5
  3409                           plusw1	equ	0xFE3
  3410                           fsr1l	equ	0xFE1
  3411                           indf2	equ	0xFDF
  3412                           postinc2	equ	0xFDE
  3413                           postdec2	equ	0xFDD
  3414                           plusw2	equ	0xFDB
  3415                           fsr2h	equ	0xFDA
  3416                           fsr2l	equ	0xFD9
  3417                           status	equ	0xFD8
  3418                           
  3419 ;; *************** function _EEPROM_ReadByte *****************
  3420 ;; Defined at:
  3421 ;;		line 93 in file "../00-libfiles/eeprom.c"
  3422 ;; Parameters:    Size  Location     Type
  3423 ;;  v_eepromAddr    2    0[COMRAM] unsigned int 
  3424 ;; Auto vars:     Size  Location     Type
  3425 ;;		None
  3426 ;; Return value:  Size  Location     Type
  3427 ;;                  1    wreg      unsigned char 
  3428 ;; Registers used:
  3429 ;;		wreg, status,2, status,0
  3430 ;; Tracked objects:
  3431 ;;		On entry : 0/0
  3432 ;;		On exit  : 0/0
  3433 ;;		Unchanged: 0/0
  3434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3435 ;;      Params:         2       0       0       0       0       0       0
  3436 ;;      Locals:         0       0       0       0       0       0       0
  3437 ;;      Temps:          0       0       0       0       0       0       0
  3438 ;;      Totals:         2       0       0       0       0       0       0
  3439 ;;Total ram usage:        2 bytes
  3440 ;; Hardware stack levels used:    1
  3441 ;; This function calls:
  3442 ;;		Nothing
  3443 ;; This function is called by:
  3444 ;;		_EEPROM_ReadString
  3445 ;;		_EEPROM_ReadNBytes
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text18
  3450  0013B2                     __ptext18:
  3451                           	opt stack 0
  3452  0013B2                     _EEPROM_ReadByte:
  3453                           	opt stack 29
  3454  0013B2                     l37:
  3455  0013B2  A2A6               	btfss	4006,1,c	;volatile
  3456  0013B4  B0A6               	btfsc	4006,0,c	;volatile
  3457  0013B6  D7FD               	goto	l37
  3458                           
  3459                           ;eeprom.c: 96: EEADR=v_eepromAddress_u16;
  3460  0013B8  C001  FFA9         	movff	EEPROM_ReadByte@v_eepromAddress_u16,4009	;volatile
  3461                           
  3462                           ;eeprom.c: 98: ((EECON1) |= ((uint8_t)1<<(0)));
  3463  0013BC  80A6               	bsf	4006,0,c	;volatile
  3464                           
  3465                           ;eeprom.c: 100: return(EEDATA);
  3466  0013BE  50A8               	movf	4008,w,c	;volatile
  3467  0013C0  0012               	return	
  3468  0013C2                     __end_of_EEPROM_ReadByte:
  3469                           	opt stack 0
  3470                           tblptru	equ	0xFF8
  3471                           tblptrh	equ	0xFF7
  3472                           tblptrl	equ	0xFF6
  3473                           tablat	equ	0xFF5
  3474                           prodh	equ	0xFF4
  3475                           prodl	equ	0xFF3
  3476                           intcon	equ	0xFF2
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           plusw1	equ	0xFE3
  3481                           fsr1l	equ	0xFE1
  3482                           indf2	equ	0xFDF
  3483                           postinc2	equ	0xFDE
  3484                           postdec2	equ	0xFDD
  3485                           plusw2	equ	0xFDB
  3486                           fsr2h	equ	0xFDA
  3487                           fsr2l	equ	0xFD9
  3488                           status	equ	0xFD8
  3489                           tblptru	equ	0xFF8
  3490                           tblptrh	equ	0xFF7
  3491                           tblptrl	equ	0xFF6
  3492                           tablat	equ	0xFF5
  3493                           prodh	equ	0xFF4
  3494                           prodl	equ	0xFF3
  3495                           intcon	equ	0xFF2
  3496                           postinc0	equ	0xFEE
  3497                           wreg	equ	0xFE8
  3498                           postdec1	equ	0xFE5
  3499                           plusw1	equ	0xFE3
  3500                           fsr1l	equ	0xFE1
  3501                           indf2	equ	0xFDF
  3502                           postinc2	equ	0xFDE
  3503                           postdec2	equ	0xFDD
  3504                           plusw2	equ	0xFDB
  3505                           fsr2h	equ	0xFDA
  3506                           fsr2l	equ	0xFD9
  3507                           status	equ	0xFD8
  3508                           
  3509                           	psect	rparam
  3510  0000                     tblptru	equ	0xFF8
  3511                           tblptrh	equ	0xFF7
  3512                           tblptrl	equ	0xFF6
  3513                           tablat	equ	0xFF5
  3514                           prodh	equ	0xFF4
  3515                           prodl	equ	0xFF3
  3516                           intcon	equ	0xFF2
  3517                           postinc0	equ	0xFEE
  3518                           wreg	equ	0xFE8
  3519                           postdec1	equ	0xFE5
  3520                           plusw1	equ	0xFE3
  3521                           fsr1l	equ	0xFE1
  3522                           indf2	equ	0xFDF
  3523                           postinc2	equ	0xFDE
  3524                           postdec2	equ	0xFDD
  3525                           plusw2	equ	0xFDB
  3526                           fsr2h	equ	0xFDA
  3527                           fsr2l	equ	0xFD9
  3528                           status	equ	0xFD8


Data Sizes:
    Strings     51
    Constant    0
    Data        47
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     77     124
    BANK0           128     98      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    UART_Printf@str	PTR unsigned char  size(2) Largest target is 50
		 -> main@read_str(BANK0[50]), main@write_str(BANK0[47]), 

    UART_Printf@argList	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[25]), STR_1(CODE[26]), 

    UART_Printf@ptr	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_2(CODE[25]), STR_1(CODE[26]), 

    UART_Printf@argp	PTR void [1] size(2) Largest target is 1
		 -> ?_UART_Printf(COMRAM[1]), 

    UART_TxString@ptr_string	PTR const unsigned char  size(2) Largest target is 50
		 -> main@read_str(BANK0[50]), main@write_str(BANK0[47]), 

    EEPROM_ReadString@ptr_destStringAddress_u8	PTR unsigned char  size(2) Largest target is 50
		 -> main@read_str(BANK0[50]), 

    EEPROM_WriteString@ptr_stringPointer_u8	PTR unsigned char  size(2) Largest target is 47
		 -> main@write_str(BANK0[47]), 


Critical Paths under _main in COMRAM

    _main->_UART_Printf
    _UART_Printf->_UART_TxFloatNumber
    _UART_TxString->_UART_TxChar
    _UART_TxFloatNumber->_UART_TxNumber
    ___lltoft->___ftpack
    ___fttol->___ftmul
    ___ftneg->___lltoft
    ___ftmul->___ftpack
    ___ftadd->___ftneg
    _UART_TxNumber->___lldiv
    _UART_Init->_UART_SetBaudRate
    _UART_SetBaudRate->___lldiv
    _EEPROM_WriteString->_EEPROM_WriteByte
    _EEPROM_ReadString->_EEPROM_ReadByte

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                98    98      0   16902
                                              0 BANK0     98    98      0
                  _EEPROM_ReadString
                 _EEPROM_WriteString
                          _UART_Init
                        _UART_Printf
 ---------------------------------------------------------------------------------
 (1) _UART_Printf                                         27    23      4   15086
                                             50 COMRAM    27    23      4
                        _UART_TxChar
                 _UART_TxFloatNumber
                      _UART_TxNumber
                      _UART_TxString
 ---------------------------------------------------------------------------------
 (2) _UART_TxString                                        2     0      2     131
                                              1 COMRAM     2     0      2
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxFloatNumber                                   7     4      3   11166
                                             43 COMRAM     7     4      3
                        _UART_TxChar
                      _UART_TxNumber
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2164
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     380
                                             23 COMRAM    15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     109
                                             17 COMRAM     3     0      3
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2587
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3203
                                             20 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2031
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _UART_TxNumber                                       30    25      5    2502
                                             13 COMRAM    30    25      5
                        _UART_TxChar
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     786
                                             22 COMRAM     4     0      4
                   _UART_SetBaudRate
 ---------------------------------------------------------------------------------
 (2) _UART_SetBaudRate                                     9     5      4     700
                                             13 COMRAM     9     5      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     546
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _EEPROM_WriteString                                   4     0      4     519
                                              4 COMRAM     4     0      4
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_WriteByte                                     4     1      3     323
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _EEPROM_ReadString                                    5     1      4     369
                                              2 COMRAM     5     1      4
                    _EEPROM_ReadByte
 ---------------------------------------------------------------------------------
 (2) _EEPROM_ReadByte                                      2     0      2     150
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_ReadString
     _EEPROM_ReadByte
   _EEPROM_WriteString
     _EEPROM_WriteByte
   _UART_Init
     _UART_SetBaudRate
       ___lldiv
   _UART_Printf
     _UART_TxChar
     _UART_TxFloatNumber
       _UART_TxChar
       _UART_TxNumber
         _UART_TxChar
         ___lldiv
       ___ftadd
         ___ftneg (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___ftmul
         ___ftpack
       ___ftneg
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
       ___lltoft
         ___ftpack
     _UART_TxNumber
       _UART_TxChar
       ___lldiv
     _UART_TxString
       _UART_TxChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     62      62       5       76.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     4D      7C       1       97.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DE      15        0.0%
DATA                 0      0      DE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sat Aug 13 20:08:03 2016

                                       l31 1294                                         l37 13B2  
                              __CFG_BORV$2 000000                               __CFG_CP0$OFF 000000  
                             __CFG_CP1$OFF 000000                               __CFG_CP2$OFF 000000  
                             __CFG_CP3$OFF 000000                                __CFG_OSC$HS 000000  
                             ___ftadd@exp1 0020                               ___ftadd@exp2 001F  
                             ___ftadd@sign 001E                                        l101 13C4  
                                      l200 118C                                        l157 06AE  
                                      l451 0BB0                                        l428 1072  
                                      l508 1382                                        l455 0BDA  
                                      l553 1102                                        l466 0C8A  
                                      l475 0CA6                                        _GIE 007F97  
                             __CFG_CPB$OFF 000000                               __CFG_CPD$OFF 000000  
          EEPROM_WriteByte@v_eepromData_u8 0003                                        prod 000FF3  
                                      wreg 000FE8                 __size_of_EEPROM_ReadString 002A  
                             __CFG_LVP$OFF 000000                               __CFG_WDT$OFF 000000  
                                     l1411 100C                                       l1501 0B2A  
                                     l1421 1068                                       l1413 102A  
                                     l1405 0FF4                                       l1417 1040  
                                     l1409 1002                                       l1443 10B4  
                                     l1507 0B64                                       l1419 105E  
                                     l1523 0BE8                                       l1445 10C0  
                                     l1517 0BBE                                       l1605 0E8E  
                                     l1455 10F4                                       l1447 10C4  
                                     l1471 0A12                                       l1551 0C56  
                                     l1615 0EB6                                       l1721 11FA  
                                     l1465 09AC                                       l1473 0A1A  
                                     l1545 0C3A                                       l1609 0E9E  
                                     l1491 0AB8                                       l1547 0C44  
                                     l1539 0C18                                       l1619 0EC6  
                                     l1731 135C                                       l1811 0716  
                                     l1493 0ACC                                       l1485 0AAA  
                                     l1477 0A2E                                       l1565 0CC2  
                                     l1557 0C78                                       l1549 0C4E  
                                     l1637 0D44                                       l1821 0750  
                                     l1479 0A34                                       l1495 0ACE  
                                     l1575 0CF2                                       l1559 0C82  
                                     l1591 0E5C                                       l1655 0DAA  
                                     l1727 134A                                       l1823 076C  
                                     l1753 131E                                       l1745 1260  
                                     l1497 0AD8                                       l1585 0E34  
                                     l1673 0DFA                                       l1665 0DD2  
                                     l1681 1216                                       l1841 0808  
                                     l1809 06F8                                       l1667 0DDE  
                                     l1659 0DBA                                       l1835 07D8  
                                     l1669 0DE4                                       l1829 079C  
                                     l1679 120A                                       l1855 0866  
                                     l1847 0844                                       l1783 0682  
                                     l1873 08F2                                       l1865 08A8  
                                     l1857 087E                                       l1793 06B2  
                                     l1769 0648                                       l1867 08C4  
                                     l1883 0920                                       l1789 06A0  
                                     l1885 097E                                       l1879 0918  
                                     l1799 06CE                                       l1887 0984  
                                     l1889 0988                                       STR_1 0601  
                                     STR_2 061B                                       u1080 0A04  
                                     u1090 0A06                                       u1074 09C6  
                                     u1075 09C0                                       u1411 0E44  
                                     u1181 0B7C                                       u1191 0B90  
                                     u1600 11A0                                       u1461 0D28  
                                     u1391 0E1C                                       u1560 12C0  
                                     u1480 0D62                                       u1625 11D4  
                                     u1485 0D5A                                       u1821 1124  
                                     _RCIF 007CF5                                       _TXIF 007CF4  
                       _UART_TxFloatNumber 0F00                                       _main 1114  
                             ___ftpack@arg 0001                               ___ftpack@exp 0004  
                                     fsr2h 000FDA                                       fsr1l 000FE1  
                                     indf2 000FDF                                       fsr2l 000FD9  
                                     prodl 000FF3                                       start 0000  
                            __CFG_IESO$OFF 000000                   __size_of_EEPROM_ReadByte 0010  
                      ?_UART_TxFloatNumber 002C                              __CFG_MCLRE$ON 000000  
                             ___ftmul@cntr 0016                               ___param_bank 000010  
                             ___ftmul@sign 0017        UART_TxFloatNumber@v_floatNumber_f32 002C  
                             ___fttol@exp1 0026                               ___fttol@lval 0022  
                                    ?_main 0001                                      _EEADR 000FA9  
                          __end_of___ftadd 0D18                            __end_of___ftneg 1390  
                          __end_of___lldiv 1114                            __end_of___ftmul 0F00  
                          __end_of___fttol 0E0C                                      _RCREG 000FAE  
                                    _RCSTA 000FAB                                      _SPBRG 000FAF  
                                    _TRISC 000F94                                      _TXREG 000FAD  
                                    _TXSTA 000FAC                              __CFG_PWRT$OFF 000000  
                            __CFG_WRT0$OFF 000000                              __CFG_WRT1$OFF 000000  
                             main@read_str 0080                              __CFG_WRT2$OFF 000000  
                            __CFG_WRT3$OFF 000000                       ??_UART_TxFloatNumber 002F  
                             ___lltoft@exp 0011                             __CFG_EBTR0$OFF 000000  
                           __CFG_FCMEN$OFF 000000                             __CFG_EBTR1$OFF 000000  
                           __CFG_EBTR2$OFF 000000                             __CFG_EBTR3$OFF 000000  
                       __size_of_UART_Init 0022                              __CFG_WRTB$OFF 000000  
                            __CFG_WRTC$OFF 000000                              __CFG_WRTD$OFF 000000  
                           __CFG_EBTRB$OFF 000000                              ___ftpack@sign 0005  
                           __CFG_BOREN$OFF 000000                                      tablat 000FF5  
                                    plusw1 000FE3                                      plusw2 000FDB  
                                    status 000FD8                            __initialization 12F4  
                             __end_of_main 118E                                     ??_main 004E  
                            ___fttol@sign1 0021                              __activetblptr 000002  
                                   _EEDATA 000FA8                                     _EECON1 000FA6  
                                   _EECON2 000FA7                           __end_of___ftpack 1092  
                         __end_of___lltoft 1260                          ?_UART_SetBaudRate 000E  
                       ??_UART_SetBaudRate 0012                               ?_UART_TxChar 0001  
                             ?_UART_Printf 0033                             __CFG_XINST$OFF 000000  
                        __end_of_UART_Init 13B2                                  ??___ftadd 001B  
                                ??___ftneg 0015                                  ??___lldiv 0009  
                                ??___ftmul 000F                                  ??___fttol 001C  
                        ??_EEPROM_ReadByte 0003                   __end_of_EEPROM_WriteByte 12C4  
  UART_TxNumber@v_numOfDigitsToTransmit_u8 0012                      ___ftmul@f3_as_product 0013  
                             __pdataCOMRAM 004E                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                         main@eeprom_address 00E1  
                               __accesstop 0080                    __end_of__initialization 1314  
                          __CFG_PBADEN$OFF 000000                                 ___ftadd@f1 0015  
                               ___ftadd@f2 0018                      __end_of_UART_TxNumber 0B6C  
                            ___rparam_used 000001                              main@write_str 00B2  
                    __end_of_UART_TxString 136C                  UART_Printf@v_floatNum_f32 0037  
                               ___ftneg@f1 0012                                 ___ftmul@f1 0009  
                               ___ftmul@f2 000C                                 ___fttol@f1 0018  
                           __pcstackCOMRAM 0001                                 ___lltoft@c 0009  
        UART_TxFloatNumber@v_decNumber_u32 002F                __size_of_EEPROM_WriteString 0034  
      EEPROM_WriteByte@v_eepromAddress_u16 0001                                  ?___ftpack 0001  
                                ?___lltoft 0009                  EEPROM_WriteByte@gie_value 0004  
                                  __Hparam 0000                                    __Lparam 0000  
                     __size_of_UART_TxChar 000E                       __size_of_UART_Printf 0366  
                                  ___ftadd 0B6C                                    ___ftneg 136C  
                                  ___lldiv 1092                                    ___ftmul 0E0C  
                                  ___fttol 0D18         EEPROM_ReadByte@v_eepromAddress_u16 0001  
                             __psmallconst 0600                            __CFG_STVREN$OFF 000000  
    EEPROM_WriteString@v_eepromAddress_u16 0005                                    __pcinit 12F4  
                               ??___ftpack 0006                                    __ramtop 0600  
                               ??___lltoft 000D                                    __ptext0 1114  
                                  __ptext1 0636                                    __ptext2 1348  
                                  __ptext3 0F00                                    __ptext4 1204  
                                  __ptext5 0D18                                    __ptext6 136C  
                                  __ptext7 0E0C                                    __ptext8 0B6C  
                                  __ptext9 0FE4                __size_of_UART_TxFloatNumber 00E4  
EEPROM_ReadString@ptr_destStringAddress_u8 0005                             UART_Printf@ptr 0048  
                           UART_Printf@str 003A                       end_of_initialization 1314  
                           UART_TxNumber@a 001E                             UART_TxNumber@i 002B  
                            __Lmediumconst 0000                            _EEPROM_ReadByte 13B2  
                          ___lldiv@divisor 0005                            ___lldiv@counter 000D  
           UART_SetBaudRate@v_baudRate_u32 000E                                    postdec1 000FE5  
                                  postdec2 000FDD                                    postinc0 000FEE  
                                  postinc2 000FDE                                  _UART_Init 1390  
                __size_of_UART_SetBaudRate 0076                          ?_EEPROM_WriteByte 0001  
                       ??_EEPROM_WriteByte 0004            UART_TxNumber@v_numericSystem_u8 002A  
                              ___ftmul@exp 0012                                 ?_UART_Init 0017  
                            __pidataCOMRAM 12C4                        start_initialization 12F4  
                  __end_of_EEPROM_ReadByte 13C2                          _UART_TxNumber$101 0028  
                         __CFG_LPT1OSC$OFF 000000                          __size_of___ftpack 00AE  
                   __size_of_UART_TxNumber 01D0                          __size_of___lltoft 005C  
                   __size_of_UART_TxString 0024                              __pcstackBANK0 0080  
             EEPROM_ReadString@eeprom_data 0007                 __end_of_EEPROM_WriteString 1294  
                        __CFG_CCP2MX$PORTC 000000                                   ?___ftadd 0015  
                                 ?___ftneg 0012                                   ?___lldiv 0001  
                                 ?___ftmul 0009                                   ?___fttol 0018  
                              ??_UART_Init 001B                           _UART_SetBaudRate 118E  
                              __smallconst 0600       EEPROM_ReadString@v_eepromAddress_u16 0003  
                         ?_EEPROM_ReadByte 0001                              UART_Printf@ch 004A  
                            ??_UART_TxChar 0001                              _UART_TxNumber 099C  
                            ??_UART_Printf 0037                              _UART_TxString 1348  
                         __CFG_WDTPS$32768 000000                                  main@F3254 004E  
                  UART_Init@v_baudRate_u32 0017                    UART_TxString@ptr_string 0002  
               __end_of_UART_TxFloatNumber 0FE4                                  copy_data0 1308  
                __size_of_EEPROM_WriteByte 0030                  UART_TxNumber@v_number_u32 000E  
                           ?_UART_TxNumber 000E     EEPROM_WriteString@ptr_stringPointer_u8 0007  
                           ?_UART_TxString 0002                                   __Hrparam 0000  
                 UART_TxChar@v_uartData_u8 0001                                   __Lrparam 0000  
                      __end_of_UART_TxChar 13D0                           __size_of___ftadd 01AC  
                         __size_of___ftneg 0024                           __size_of___lldiv 0082  
                         __size_of___ftmul 00F4                           __size_of___fttol 00F4  
                      __end_of_UART_Printf 099C                                   ___ftpack 0FE4  
                                 ___lltoft 1204                                   __ptext10 099C  
                                 __ptext11 13C2                                   __ptext12 1390  
                                 __ptext13 118E                                   __ptext14 1092  
                                 __ptext15 1260                                   __ptext16 1294  
                                 __ptext17 131E                                   __ptext18 13B2  
                        _EEPROM_ReadString 131E                         ?_EEPROM_ReadString 0003  
                            __size_of_main 007A                        ??_EEPROM_ReadString 0007  
                          UART_Printf@argp 004C                   UART_SetBaudRate@RegValue 0016  
                __end_of_EEPROM_ReadString 1348                            ??_UART_TxNumber 0013  
                 __end_of_UART_SetBaudRate 1204                            ??_UART_TxString 0004  
                         ___lldiv@dividend 0001                                _UART_TxChar 13C2  
                              _UART_Printf 0636                         _EEPROM_WriteString 1260  
                         ___lldiv@quotient 0009                        ?_EEPROM_WriteString 0005  
    UART_Printf@v_numOfDigitsToTransmit_u8 004B                         UART_Printf@argList 0033  
                         _EEPROM_WriteByte 1294                       ??_EEPROM_WriteString 0009  
                     UART_Printf@v_num_s16 0040                       UART_Printf@v_num_s32 003C  
                     UART_Printf@v_num_u16 0046                       UART_Printf@v_num_u32 0042  
